use HDTStorage


SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROC GetQCCondoTEST
(
	@lenderIds NVARCHAR(MAX)
	,@lastRunDate datetime = null
)
AS

	DECLARE @WINDOW_PERIOD DATETIME = CAST(CAST(DATEADD(DAY, -7, GETDATE()) AS DATE) AS DATETIME)

	CReate TABLE #LenderList
	(
		ID BIGINT
	);

	INSERT INTO #LenderList
	SELECT ID FROM GetSelectedLenderIds(@lenderIds);

	

		SELECT
			L.ID AS [LOAN_ID]
			,P.ID AS [PROPERTY_ID]
			,RC.ID AS [REQUIRED_COVERAGE_ID]
			,LE.ID AS [LENDER_ID]
			,RC.SUMMARY_STATUS_CD
			,RC.SUMMARY_SUB_STATUS_CD
			,RC.TYPE_CD
			,CC.CODE_TX
			,OP.BASE_PROPERTY_TYPE_CD
			,OP.EXPIRATION_DT
			,OP.BIC_NAME_TX	
			INTO #CONDO_LOANS 
		FROM Loan L
			INNER JOIN LENDER LE ON LE.ID = L.LENDER_ID AND L.PURGE_DT IS NULL
			INNER JOIN COLLATERAL C ON C.LOAN_ID = L.ID AND C.PURGE_DT IS NULL
			INNER JOIN PROPERTY P ON P.ID = C.PROPERTY_ID
			INNER JOIN REQUIRED_COVERAGE RC ON RC.PROPERTY_ID = C.PROPERTY_ID AND RC.PURGE_DT IS NULL
			INNER JOIN COLLATERAL_CODE CC ON CC.ID = C.COLLATERAL_CODE_ID
			INNER JOIN #LenderList LL ON LL.ID = L.LENDER_ID
			CROSS APPLY GetCurrentCoverage(P.ID, RC.ID, RC.TYPE_CD) OP
			INNER JOIN LENDER_PRODUCT LP ON LP.ID = RC.LENDER_PRODUCT_ID
		WHERE 
			1=1
			AND LE.STATUS_CD IN ('ACTIVE', 'AUDIT')
			AND L.RECORD_TYPE_CD = 'G'
			AND L.STATUS_CD != 'U'
			AND L.EXTRACT_UNMATCH_COUNT_NO = 0
			AND C.EXTRACT_UNMATCH_COUNT_NO = 0
			AND C.STATUS_CD != 'U'
			AND CC.SECONDARY_CLASS_CD IN ('COND', 'COOP')
			AND CC.CONTRACT_TYPE_CD IN ('4', '10')
			AND RC.TYPE_CD IN ('HAZARD')
			AND RC.STATUS_CD = 'A'
			AND RC.RECORD_TYPE_CD = 'G'
			AND LP.END_DT > GETDATE()
			AND P.RECORD_TYPE_CD = 'G'


		SELECT DISTINCT	
			LE.ID AS LENDER_ID	
			,LP.ID AS LENDER_PRODUCT_ID
						INTO #LENDER_PRODUCT_GENERATE_CPI 
		FROM LENDER LE
			INNER JOIN #LenderList LL ON LL.ID = LE.ID AND LE.PURGE_DT IS NULL
			INNER JOIN LENDER_PRODUCT LP on LP.LENDER_ID = LE.ID AND LP.PURGE_DT is null
			INNER JOIN MASTER_POLICY_LENDER_PRODUCT_RELATE MPLPR ON MPLPR.LENDER_PRODUCT_ID = LP.ID AND MPLPR.PURGE_DT IS NULL
			INNER JOIN MASTER_POLICY MP ON MP.ID = MPLPR.MASTER_POLICY_ID AND MP.PURGE_DT IS NULL
			INNER JOIN EVENT_SEQ_CONTAINER ESC ON ESC.LENDER_PRODUCT_ID = LP.ID AND ESC.PURGE_DT IS NULL
			INNER JOIN EVENT_SEQUENCE ES ON ES.EVENT_SEQ_CONTAINER_ID = ESC.ID AND ES.PURGE_DT IS NULL
		WHERE 	
			1=1 	
			AND LP.END_DT > GETDATE()
			AND ES.EVENT_TYPE_CD = 'ISCT'
			AND LP.BASIC_TYPE_CD in( 'FLTRK' , 'CPI')
			AND MP.END_DT >= GETDATE()
			AND LE.STATUS_CD in ( 'ACTIVE', 'AUDIT' )
			AND LE.TEST_IN = 'N'
	
	
	
	--Issue #1

		SELECT
			CL.LOAN_ID
			,CL.PROPERTY_ID
			,CL.REQUIRED_COVERAGE_ID
			,CL.EXPIRATION_DT
			,CL.BASE_PROPERTY_TYPE_CD
			,ROW_NUMBER() OVER (PARTITION BY CL.PROPERTY_ID ORDER BY CL.EXPIRATION_DT ASC) AS [ROWNUM]
		INTO #FILTER_CORRECT_CPI_QUOTE_DATE
		FROM #CONDO_LOANS CL
		WHERE		
			1=1
			AND EXISTS
			(
				SELECT 1 
				FROM #CONDO_LOANS SUB 
				WHERE 
					1=1
					AND SUB.LOAN_ID = CL.LOAN_ID 
					AND SUB.PROPERTY_ID = CL.PROPERTY_ID
					AND SUB.REQUIRED_COVERAGE_ID = CL.REQUIRED_COVERAGE_ID
					AND SUB.BASE_PROPERTY_TYPE_CD = 'CA'
			)
			AND EXISTS 
			(
				SELECT 1 
				FROM #CONDO_LOANS SUB 
				WHERE 
					1=1
					AND SUB.LOAN_ID = CL.LOAN_ID 
					AND SUB.PROPERTY_ID = CL.PROPERTY_ID
					AND SUB.REQUIRED_COVERAGE_ID = CL.REQUIRED_COVERAGE_ID
					AND SUB.BASE_PROPERTY_TYPE_CD = 'CUO'
			)	

		SELECT DISTINCT 
			CL.LOAN_ID
			,CL.PROPERTY_ID
			,CL.REQUIRED_COVERAGE_ID
			,PA.UNITS_NO
			,'Units Keyed incorrect' AS [Description]
			INTO #UNITS_KEYED_INCORRECTLY
		FROM #CONDO_LOANS CL
			INNER JOIN PROPERTY P ON P.ID = CL.PROPERTY_ID
			INNER JOIN #LENDER_PRODUCT_GENERATE_CPI LPGC ON LPGC.LENDER_ID = CL.LENDER_ID
			INNER JOIN PROPERTY_ASSOCIATION PA ON PA.ID = P.PROPERTY_ASSOC_ID
		WHERE 
			1=1
			AND (PA.ID IS NULL OR (PA.UNITS_NO < 5 OR PA.UNITS_NO > 200))
			AND EXISTS
			(
				SELECT 1 
				FROM #CONDO_LOANS SUB 
				WHERE 
					1=1
					AND SUB.LOAN_ID = CL.LOAN_ID 
					AND SUB.PROPERTY_ID = CL.PROPERTY_ID
					AND SUB.REQUIRED_COVERAGE_ID = CL.REQUIRED_COVERAGE_ID
					AND SUB.BASE_PROPERTY_TYPE_CD = 'CA'
			)
			AND NOT EXISTS 
			(
				SELECT 1 
				FROM #CONDO_LOANS SUB 
				WHERE 
					1=1
					AND SUB.LOAN_ID = CL.LOAN_ID 
					AND SUB.PROPERTY_ID = CL.PROPERTY_ID
					AND SUB.REQUIRED_COVERAGE_ID = CL.REQUIRED_COVERAGE_ID
					AND SUB.BASE_PROPERTY_TYPE_CD = 'CUO'
			)	
		
	--Issue #2 and #3

		SELECT 
			*
			,'Incorrect Collateral/Base Property on Policy' AS [Description]
	INTO	#PUD_TO_CONDO
		FROM #CONDO_LOANS CL
		WHERE 
			1=1
			AND 
			(
				(CODE_TX IN ('CONDO', 'CONDOE')	AND BASE_PROPERTY_TYPE_CD = 'RE')
				OR (CODE_TX IN ('PUD', 'PUDE') AND BASE_PROPERTY_TYPE_CD IN ('CA',' CUO'))
			)

	
	--Get loans where the quote has not generated, but the quick quote effective date (rc exposure date) != expiration date

		SELECT 
			CD.*
			,RC.EXPOSURE_DT
			,'Incorrect Quote Date (before quote generated)' AS [Description]
			INTO #CPI_INCORRECT_EXPOSURE_DT
		FROM #FILTER_CORRECT_CPI_QUOTE_DATE CD
			INNER JOIN REQUIRED_COVERAGE RC ON RC.ID = CD.REQUIRED_COVERAGE_ID
		WHERE
			1=1
			AND ROWNUM = 1
			AND RC.EXPOSURE_DT != CD.EXPIRATION_DT
			AND	NOT EXISTS 
			(
				SELECT 1 
				FROM FORCE_PLACED_CERT_REQUIRED_COVERAGE_RELATE FPC_RC 
					INNER JOIN FORCE_PLACED_CERTIFICATE FPC ON FPC.ID = FPC_RC.FPC_ID
				WHERE 
					FPC.ACTIVE_IN = 'Y'
					AND FPC_RC.REQUIRED_COVERAGE_ID = CD.REQUIRED_COVERAGE_ID
					AND FPC.EFFECTIVE_DT != RC.EXPOSURE_DT
			)		

	
	--only include if the cert start date != the oldest of the two and do not include if the cert start date matches the exposure date

		SELECT 
			CD.LOAN_ID AS [LOAN_ID]
			,CD.PROPERTY_ID
			,CD.REQUIRED_COVERAGE_ID
			,CQ.ID AS [CPI_QUOTE_ID]
			,CD.EXPIRATION_DT
			,FPC.EFFECTIVE_DT
			,FPC.STATUS_CD	
			,L.NUMBER_TX
			,ROWNUM
			,'Incorrect Quote Start Date' AS [Description]
			INTO #FILTER_INCORRECT_QUOTE_START_DT
		FROM #FILTER_CORRECT_CPI_QUOTE_DATE CD 
			INNER JOIN FORCE_PLACED_CERT_REQUIRED_COVERAGE_RELATE FPC_RC ON FPC_RC.REQUIRED_COVERAGE_ID = CD.REQUIRED_COVERAGE_ID AND FPC_RC.PURGE_DT is NULL
			INNER JOIN FORCE_PLACED_CERTIFICATE FPC ON FPC.ID = FPC_RC.FPC_ID AND FPC.PURGE_DT IS NULL
			INNER JOIN CPI_QUOTE CQ ON CQ.ID = FPC.CPI_QUOTE_ID
			INNER JOIN LOAN L ON L.ID = CD.LOAN_ID
		WHERE
			1=1
			AND ROWNUM = 1
			AND FPC.ACTIVE_IN = 'Y'
			AND FPC.STATUS_CD NOT IN ('C')
			AND CD.EXPIRATION_DT != FPC.EFFECTIVE_DT	
			AND NOT EXISTS (SELECT 1 FROM REQUIRED_COVERAGE SUB WHERE SUB.ID = CD.REQUIRED_COVERAGE_ID AND SUB.EXPOSURE_DT = FPC.EFFECTIVE_DT)
	
	




		SELECT 
			LOAN_ID
			,PROPERTY_ID
			,REQUIRED_COVERAGE_ID
			,Description
			into #GROSS_LIST
		FROM #PUD_TO_CONDO
		UNION 
		SELECT 
			LOAN_ID
			,PROPERTY_ID
			,REQUIRED_COVERAGE_ID
			,Description
		FROM #UNITS_KEYED_INCORRECTLY
		UNION 
		SELECT 
			LOAN_ID
			,PROPERTY_ID
			,REQUIRED_COVERAGE_ID
			,Description
		FROM #FILTER_INCORRECT_QUOTE_START_DT
		UNION 
		SELECT 
			LOAN_ID
			,PROPERTY_ID
			,REQUIRED_COVERAGE_ID
			,Description
		FROM #CPI_INCORRECT_EXPOSURE_DT
	

--	select top 1* from loan

	CREATE TABLE #t (LOAN_ID int , PROPERTY_ID int , REQUIRED_COVERAGE_ID int)
	insert into #T
	SELECT 
		LOAN_ID
		,PROPERTY_ID
		,REQUIRED_COVERAGE_ID
	FROM #GROSS_LIST GL



		SELECT 
		LOAN_ID
		,PROPERTY_ID
		,REQUIRED_COVERAGE_ID
	FROM #GROSS_LIST GL



	/* 
	
	DROP TABLE #lENDERLIST 
	DROP TABLE #CONDO_LOANS
	DROP TABLE #LENDER_PRODUCT_GENERATE_CPI
	DROP TABLE #FILTER_CORRECT_CPI_QUOTE_DATE
	DROP TABLE #UNITS_KEYED_INCORRECTLY
	DROP TABLE #PUD_TO_CONDO
	DROP TABLE #CPI_INCORRECT_EXPOSURE_DT
	DROP TABLE #FILTER_INCORRECT_QUOTE_START_DT
	DROP TABLE #T
	DROP TABLE #GROSS_LIST
	*/


		/* 
	
	SELECT * FROM #lENDERLIST 
	SELECT * FROM #CONDO_LOANS
	SELECT * FROM #LENDER_PRODUCT_GENERATE_CPI
	SELECT * FROM #FILTER_CORRECT_CPI_QUOTE_DATE
	SELECT * FROM #UNITS_KEYED_INCORRECTLY
	SELECT * FROM #PUD_TO_CONDO
	SELECT * FROM #CPI_INCORRECT_EXPOSURE_DT
	SELECT * FROM #FILTER_INCORRECT_QUOTE_START_DT
	SELECT * FROM #T
	SELECT * FROM #GROSS_LIST
	*/