USE [UniTrac]
GO

DECLARE @processDate datetime
DECLARE @ProcessLogID NVARCHAR(255)
DECLARE @fpcId NVARCHAR(255)
DECLARE @RCId NVARCHAR(255)

SET @ProcessLogID  = 

/* Run this query and then place start_dt into the processDate field
--SELECT * FROM dbo.PROCESS_LOG WHERE ID =  */

SET @processDate = ''

	
	IF OBJECT_ID(N'tempdb..#tmpPrint',N'U') IS NOT NULL
       DROP TABLE #tmpPrint   
       
	Create Table #tmpPrint
	(	
	  DOCUMENT_CONTAINER_ID BIGINT
    )
    
    INSERT INTO #tmpPrint
    (
       DOCUMENT_CONTAINER_ID
    )
    SELECT DC.ID
    FROM EVALUATION_EVENT EE 
	    JOIN DOCUMENT_CONTAINER DC ON DC.RELATE_CLASS_NAME_TX = EE.RELATE_TYPE_CD   AND DC.RELATE_ID = EE.RELATE_ID
	JOIN dbo.PROCESS_LOG_ITEM PLI ON PLI.EVALUATION_EVENT_ID = EE.ID 
	WHERE PLI.PROCESS_LOG_ID IN (@ProcessLogID)

    AND EE.TYPE_CD = 'PRNT'
    AND DC.PURGE_DT IS NULL
    AND EE.STATUS_CD = 'COMP'  
    AND DATEDIFF ( DAY , DC.CREATE_DT , @processDate ) = 0   

    UPDATE EE SET STATUS_CD = 'PEND' , EE.LOCK_ID = (EE.LOCK_ID % 255) + 1 , 
    EE.UPDATE_USER_TX = 'CYCBACKOFF' , EE.UPDATE_DT = GETDATE()
    --SELECT * 
  FROM EVALUATION_EVENT EE 
	JOIN dbo.PROCESS_LOG_ITEM PLI ON PLI.EVALUATION_EVENT_ID = EE.ID 
	WHERE PLI.PROCESS_LOG_ID IN (@ProcessLogID)
    
    UPDATE DC SET PURGE_DT = GETDATE() , LOCK_ID = (LOCK_ID % 255) + 1 ,
    UPDATE_USER_TX = 'CYCBACKOFF' , UPDATE_DT = GETDATE()
    --SELECT *
	FROM DOCUMENT_CONTAINER DC JOIN #tmpPrint TMP ON 
    TMP.DOCUMENT_CONTAINER_ID = DC.ID
    WHERE DC.PURGE_DT IS NULL
	
	




    -- withdraw cancel pending WI, if created with the FPC's issued
	SELECT @fpcId = RELATE_ID FROM dbo.PROCESS_LOG_ITEM pli
	WHERE ID IN (SELECT pli.RELATE_ID FROM dbo.PROCESS_LOG_ITEM pli
WHERE PLI.PROCESS_LOG_ID IN (@ProcessLogID) AND pli.RELATE_TYPE_CD = 'Allied.UniTrac.ForcePlacedCertificate')

	 SELECT @RCId = REQUIRED_COVERAGE_ID FROM FORCE_PLACED_CERT_REQUIRED_COVERAGE_RELATE
	 WHERE FPC_ID = @fpcId AND PURGE_DT IS NULL

    IF OBJECT_ID(N'tempdb..#tmpCxlWI',N'U') IS NOT NULL
			   DROP TABLE #tmpCxlWI   

    CREATE TABLE #tmpCxlWI
    (
      WORK_ITEM_ID BIGINT ,
      RC_ID BIGINT ,
      FPC_ID BIGINT
    )

    INSERT INTO #tmpCxlWI
    (
      WORK_ITEM_ID , RC_ID , FPC_ID
    )
    SELECT ID , @RCId , @fpcId
    FROM WORK_ITEM
    WHERE WORKFLOW_DEFINITION_ID = 3
	 AND RELATE_TYPE_CD = 'Allied.Unitrac.RequiredCoverage'
	 AND RELATE_ID = @RCId AND PURGE_DT IS NULL
	 AND STATUS_CD = 'Initial'
	 AND CONTENT_XML.value('(Content/CancelCPIWorkflow/Certificates/Certificate/RelateId/node())[1]', 'bigint') = @fpcId
	 AND CONTENT_XML.value('(Content/CancelCPIWorkflow/Certificates/Certificate/RelateClass/node())[1]', 'varchar(50)') = 'ForcePlacedCertificate' 
	
    -- SET CPI STATUS TO BINDER - STATUS CALC WILL RECALC
    UPDATE RC SET 
    CPI_STATUS_CD = CASE WHEN CPI_STATUS_CD = 'X' THEN 'B' ELSE CPI_STATUS_CD END ,
    SUMMARY_STATUS_CD = CASE WHEN SUMMARY_STATUS_CD = 'X' THEN 'B' ELSE SUMMARY_STATUS_CD END ,
    UPDATE_USER_TX = 'CYCBACKOFF' , UPDATE_DT = GETDATE() ,
    LOCK_ID = (LOCK_ID % 255) + 1
    FROM REQUIRED_COVERAGE RC JOIN #tmpCxlWI TMP ON
    TMP.RC_ID = RC.ID
	 
    UPDATE WORK_ITEM SET STATUS_CD = 'Withdrawn',
	 PURGE_DT = GETDATE() , UPDATE_USER_TX = 'CYCBACKOFF' , 
	 LOCK_ID = (LOCK_ID % 255) + 1 , UPDATE_DT = GETDATE()
	 FROM WORK_ITEM WI JOIN #tmpCxlWI TMP ON TMP.WORK_ITEM_ID = WI.ID

    UPDATE INTERACTION_HISTORY SET PURGE_DT = GETDATE(), UPDATE_USER_TX = 'CYCBACKOFF'
     where RELATE_ID = @fpcId and RELATE_CLASS_TX = 'Allied.UniTrac.ForcePlacedCertificate'
     and TYPE_CD = 'CPI'
     
    UPDATE FORCE_PLACED_CERT_REQUIRED_COVERAGE_RELATE SET PURGE_DT = GETDATE(), UPDATE_USER_TX = 'CYCBACKOFF'
	 where FPC_ID = @fpcId AND PURGE_DT IS NULL
	     
	UPDATE FORCE_PLACED_CERTIFICATE SET PURGE_DT = GETDATE() , ACTIVE_IN = 'N',
	CANCELLATION_DT = EFFECTIVE_DT, UPDATE_USER_TX = 'CYCBACKOFF' where ID = @fpcId