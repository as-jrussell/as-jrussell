USE [Unitrac_Reports]
GO

/****** Object:  StoredProcedure [dbo].[GetOutputBatchStatus]    Script Date: 9/8/2017 5:43:19 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO



CREATE PROCEDURE [dbo].[GetOutputBatchStatus]
(
	@LENDER_ID BIGINT=NULL,
	@PROCESS_DEFINITION_ID BIGINT=NULL,
	@BATCH_TYPE_CD NVARCHAR(30)=NULL,
	@BATCH_SUB_TYPE_CD NVARCHAR(30)=NULL,
	@BATCH_CREATE_START_DT DATETIME=NULL,
	@BATCH_CREATE_END_DT DATETIME=NULL,
	@BATCH_ID BIGINT=NULL,
	@BATCH_ID_EXTERNAL NVARCHAR(100)=NULL,
	@BATCH_STATUS_CD NVARCHAR(30)=NULL,
	@BATCH_FULFILLMENT_STATUS_CD NVARCHAR(30)=NULL
)
AS
BEGIN

	declare @QUERY nvarchar(max) = ''
	declare @AGENCY_ID bigint = NULL

	IF @LENDER_ID IS NOT NULL
	BEGIN
		SELECT @AGENCY_ID = AGENCY_ID
		FROM LENDER
		WHERE ID = @LENDER_ID
	END
			
	if @BATCH_TYPE_CD IS NULL OR @BATCH_TYPE_CD = 'NTC'
	BEGIN
		select @QUERY = '
			
		SELECT
			MIN(OB.CREATE_DT) AS [BATCH_DATE],
			MIN(OB.STATUS_CD) AS [BATCH_STATUS],
			OB.ID AS [BATCH_ID],
			MIN(OC.OUTPUT_TYPE_CD) AS [OUTPUT_TYPE_CD],
			MIN(OB.EXTERNAL_ID) AS [EXTERNAL_BATCH_ID],
			MIN(L.NAME_TX) AS [LENDER_NAME],
			MIN(PD.NAME_TX) AS [PROCESS_DEFINITION_NAME],
			MIN(OC.TYPE_CD) AS [BATCH_TYPE],
			MIN(OB.SUB_TYPE_CD) AS [BATCH_SUB_TYPE],
			MIN(OB.OUTSOURCER_STATUS_CD) AS [BATCH_FULFILLMENT_STATUS],
			DATEDIFF(DAY,MIN(OB.CREATE_DT), GETDATE()) AS [DAYS_SINCE_CYCLE],
			MAX( DC.PRINT_STATUS_ASSIGNED_DT ) AS [LAST_SUBMITTED_DATE],
			MAX( CASE OC.OUTPUT_TYPE_CD WHEN ''IH'' THEN DC.PRINTED_DT ELSE OBL.CREATE_DT END) AS [COMPLETED_DATE],
			COUNT( ISNULL(DC.PRINT_STATUS_CD, ''UNRES'') ) AS [TOTAL_RECORD_COUNT],
			SUM( CASE ISNULL(DC.PRINT_STATUS_CD, ''UNRES'') WHEN ''EXCLUDE'' THEN 1 ELSE 0 END) AS [EXCLUDE],
			SUM( CASE ISNULL(DC.PRINT_STATUS_CD, ''UNRES'') WHEN ''IGNORE'' THEN 1 ELSE 0 END) AS [IGNORE],
			SUM( CASE ISNULL(DC.PRINT_STATUS_CD, ''UNRES'') WHEN ''PEND'' THEN 1 ELSE 0 END) AS [PEND],
			SUM( CASE ISNULL(DC.PRINT_STATUS_CD, ''UNRES'') WHEN ''PRINTED'' THEN 1 ELSE 0 END) AS [PRINTED],
			SUM( CASE ISNULL(DC.PRINT_STATUS_CD, ''UNRES'') WHEN ''REJECT'' THEN 1 ELSE 0 END) AS [REJECT],
			SUM( CASE ISNULL(DC.PRINT_STATUS_CD, ''UNRES'') WHEN ''UNRES'' THEN 1 ELSE 0 END) AS [UNRES],
			SUM( CASE WHEN ISNULL(DC.PRINT_STATUS_CD, ''UNRES'') IN (''PEND'',''PRINTED'') THEN 1 ELSE 0 END) AS [TOTAL_SUBMITTED],
			CASE WHEN DATEDIFF(DAY,MIN(OB.CREATE_DT), GETDATE()) > 2 AND MIN(OB.OUTSOURCER_STATUS_CD) IS NULL THEN 1 ELSE 0 END [IS_RED]
		FROM
			OUTPUT_BATCH OB
			INNER loop JOIN OUTPUT_CONFIGURATION OC ON OB.OUTPUT_CONFIGURATION_ID=OC.ID
			INNER loop JOIN LENDER L ON OC.RELATE_ID=L.ID AND OC.RELATE_CLASS_TX=''Allied.UniTrac.Lender''
			INNER loop JOIN PROCESS_LOG PL ON OB.PROCESS_LOG_ID=PL.ID
			INNER loop JOIN PROCESS_DEFINITION PD ON PL.PROCESS_DEFINITION_ID=PD.ID
         AND PD.PROCESS_TYPE_CD = ''CYCLEPRC''
			INNER loop JOIN PROCESS_LOG_ITEM PLI ON PL.ID=PLI.PROCESS_LOG_ID AND (pli.INFO_XML.exist (''(/INFO_LOG/OUTPUT_TYPE)[1]'') = 0 OR pli.INFO_XML.value (''(/INFO_LOG/OUTPUT_TYPE)[1]'',''nvarchar(10)'') IN ('''',''IH'',''OS''))
			INNER loop JOIN NOTICE N ON PLI.RELATE_ID=N.ID AND PLI.RELATE_TYPE_CD=''Allied.UniTrac.Notice''
			LEFT OUTER JOIN DOCUMENT_CONTAINER DC ON N.ID=DC.RELATE_ID AND DC.RELATE_CLASS_NAME_TX=''Allied.UniTrac.Notice''
			LEFT OUTER JOIN OUTPUT_BATCH_LOG OBL ON OBL.OUTPUT_BATCH_ID = OB.ID AND OBL.LOG_TXN_TYPE_CD=''Consolidate''
		WHERE
		'
		+ case when @BATCH_ID is not null then '	OB.ID=@BATCH_ID AND ' else '' end
		+ case when @LENDER_ID is not null then '	L.ID=@LENDER_ID AND ' else '' end
		+ case when @PROCESS_DEFINITION_ID is not null then '	PD.ID=@PROCESS_DEFINITION_ID AND ' else '' end
		+ '		OC.TYPE_CD=''NTC'' AND '
		+ case when @BATCH_SUB_TYPE_CD is not null then '	(OB.SUB_TYPE_CD IS NULL OR OB.SUB_TYPE_CD=@BATCH_SUB_TYPE_CD) AND ' else '' end
			-- APP WILL ENFORCE THAT BOTH OF THESE ARE NULL OR BOTH OF THESE ARE NOT NULL
		+ case when @BATCH_CREATE_START_DT is not null then '	OB.CREATE_DT >= @BATCH_CREATE_START_DT and ' else '' end
		+ case when @BATCH_CREATE_END_DT is not null then '	OB.CREATE_DT <= @BATCH_CREATE_END_DT and ' else '' end
		+ case when @BATCH_ID_EXTERNAL is not null then '	OB.EXTERNAL_ID=@BATCH_ID_EXTERNAL AND ' else '' end
		+ case when @BATCH_STATUS_CD is not null then '	OB.STATUS_CD=@BATCH_STATUS_CD AND ' else '' end
		+ case when @BATCH_FULFILLMENT_STATUS_CD is not null then ' OB.OUTSOURCER_STATUS_CD=@BATCH_FULFILLMENT_STATUS_CD AND '
															 else '' end
		+ '															
			DC.PURGE_DT IS NULL AND
			N.PURGE_DT IS NULL AND
			PLI.PURGE_DT IS NULL AND
			PL.PURGE_DT IS NULL AND
			L.PURGE_DT IS NULL AND
			OC.PURGE_DT IS NULL AND
			OB.PURGE_DT IS NULL
        GROUP BY
			OB.ID
			
		UNION ALL
		
		SELECT
			MIN(OB.CREATE_DT) AS [BATCH_DATE],
			MIN(OB.STATUS_CD) AS [BATCH_STATUS],
			OB.ID AS [BATCH_ID],
			MIN(OC.OUTPUT_TYPE_CD) AS [OUTPUT_TYPE_CD],
			MIN(OB.EXTERNAL_ID) AS [EXTERNAL_BATCH_ID],
			MIN(A.NAME_TX) AS [LENDER_NAME],
			MIN(PD.NAME_TX) AS [PROCESS_DEFINITION_NAME],
			MIN(OC.TYPE_CD) AS [BATCH_TYPE],
			MIN(OB.SUB_TYPE_CD) AS [BATCH_SUB_TYPE],
			MIN(OB.OUTSOURCER_STATUS_CD) AS [BATCH_FULFILLMENT_STATUS],
			DATEDIFF(DAY,MIN(OB.CREATE_DT), GETDATE()) AS [DAYS_SINCE_CYCLE],
			MAX( DC.PRINT_STATUS_ASSIGNED_DT ) AS [LAST_SUBMITTED_DATE],
			MAX( CASE OC.OUTPUT_TYPE_CD WHEN ''IH'' THEN DC.PRINTED_DT ELSE OBL.CREATE_DT END) AS [COMPLETED_DATE],
			COUNT( ISNULL(DC.PRINT_STATUS_CD, ''UNRES'') ) AS [TOTAL_RECORD_COUNT],
			SUM( CASE ISNULL(DC.PRINT_STATUS_CD, ''UNRES'') WHEN ''EXCLUDE'' THEN 1 ELSE 0 END) AS [EXCLUDE],
			SUM( CASE ISNULL(DC.PRINT_STATUS_CD, ''UNRES'') WHEN ''IGNORE'' THEN 1 ELSE 0 END) AS [IGNORE],
			SUM( CASE ISNULL(DC.PRINT_STATUS_CD, ''UNRES'') WHEN ''PEND'' THEN 1 ELSE 0 END) AS [PEND],
			SUM( CASE ISNULL(DC.PRINT_STATUS_CD, ''UNRES'') WHEN ''PRINTED'' THEN 1 ELSE 0 END) AS [PRINTED],
			SUM( CASE ISNULL(DC.PRINT_STATUS_CD, ''UNRES'') WHEN ''REJECT'' THEN 1 ELSE 0 END) AS [REJECT],
			SUM( CASE ISNULL(DC.PRINT_STATUS_CD, ''UNRES'') WHEN ''UNRES'' THEN 1 ELSE 0 END) AS [UNRES],
			SUM( CASE WHEN ISNULL(DC.PRINT_STATUS_CD, ''UNRES'') IN (''PEND'',''PRINTED'') THEN 1 ELSE 0 END) AS [TOTAL_SUBMITTED],
			CASE WHEN DATEDIFF(DAY,MIN(OB.CREATE_DT), GETDATE()) > 2 AND MIN(OB.OUTSOURCER_STATUS_CD) IS NULL THEN 1 ELSE 0 END [IS_RED]
		FROM
			OUTPUT_BATCH OB
			INNER loop JOIN OUTPUT_CONFIGURATION OC ON OB.OUTPUT_CONFIGURATION_ID=OC.ID
			INNER loop JOIN AGENCY A ON OC.RELATE_ID=A.ID AND OC.RELATE_CLASS_TX=''Allied.UniTrac.Agency''
			INNER loop JOIN PROCESS_LOG PL ON OB.PROCESS_LOG_ID=PL.ID
			INNER loop JOIN PROCESS_DEFINITION PD ON PL.PROCESS_DEFINITION_ID=PD.ID
         AND PD.PROCESS_TYPE_CD = ''CYCLEPRC''
			INNER loop JOIN PROCESS_LOG_ITEM PLI ON PL.ID=PLI.PROCESS_LOG_ID AND pli.INFO_XML.value (''(/INFO_LOG/OUTPUT_TYPE)[1]'',''nvarchar(10)'') IN (''EMAIL'',''FAX'')
			INNER loop JOIN NOTICE N ON PLI.RELATE_ID=N.ID AND PLI.RELATE_TYPE_CD=''Allied.UniTrac.Notice''
         LEFT JOIN LENDER L ON N.CAPTURED_DATA_XML.value(''(/CapturedData/Lender/@number)[1]'', ''varchar(20)'') = L.CODE_TX
			AND L.AGENCY_ID = A.ID
			LEFT OUTER JOIN DOCUMENT_CONTAINER DC ON N.ID=DC.RELATE_ID AND DC.RELATE_CLASS_NAME_TX=''Allied.UniTrac.Notice''
			LEFT OUTER JOIN OUTPUT_BATCH_LOG OBL ON OBL.OUTPUT_BATCH_ID = OB.ID AND OBL.LOG_TXN_TYPE_CD=''Consolidate''
		WHERE
		'
		+ case when @BATCH_ID is not null then '	OB.ID=@BATCH_ID AND ' else '' end
		+ case when @AGENCY_ID is not null then '	A.ID=@AGENCY_ID AND ' else '' end
      + case when @LENDER_ID is not null then '	L.ID=@LENDER_ID AND ' else '' end
		+ case when @PROCESS_DEFINITION_ID is not null then '	PD.ID=@PROCESS_DEFINITION_ID AND ' else '' end
		+ '		OC.TYPE_CD=''NTC'' AND '
		+ case when @BATCH_SUB_TYPE_CD is not null then '	(OB.SUB_TYPE_CD IS NULL OR OB.SUB_TYPE_CD=@BATCH_SUB_TYPE_CD) AND ' else '' end
			-- APP WILL ENFORCE THAT BOTH OF THESE ARE NULL OR BOTH OF THESE ARE NOT NULL
		+ case when @BATCH_CREATE_START_DT is not null then '	OB.CREATE_DT >= @BATCH_CREATE_START_DT and ' else '' end
		+ case when @BATCH_CREATE_END_DT is not null then '	OB.CREATE_DT <= @BATCH_CREATE_END_DT and ' else '' end
		+ case when @BATCH_ID_EXTERNAL is not null then '	OB.EXTERNAL_ID=@BATCH_ID_EXTERNAL AND ' else '' end
		+ case when @BATCH_STATUS_CD is not null then '	OB.STATUS_CD=@BATCH_STATUS_CD AND ' else '' end
		+ case when @BATCH_FULFILLMENT_STATUS_CD is not null then ' OB.OUTSOURCER_STATUS_CD=@BATCH_FULFILLMENT_STATUS_CD AND '
															 else '' end
		+ '															
			DC.PURGE_DT IS NULL AND
			N.PURGE_DT IS NULL AND
			PLI.PURGE_DT IS NULL AND
			PL.PURGE_DT IS NULL AND
			A.PURGE_DT IS NULL AND
			OC.PURGE_DT IS NULL AND
			OB.PURGE_DT IS NULL
        GROUP BY
			OB.ID'
	END

	IF @BATCH_TYPE_CD IS NULL
		set @QUERY = @QUERY + char(10) + ' UNION ALL ' + char(10)

		
	IF @BATCH_TYPE_CD IS NULL OR @BATCH_TYPE_CD = 'FPC'
	BEGIN
		select @QUERY = @QUERY + '
		SELECT
			MIN(OB.CREATE_DT) AS [BATCH_DATE],
			MIN(OB.STATUS_CD) AS [BATCH_STATUS],
			OB.ID AS [BATCH_ID],
			MIN(OC.OUTPUT_TYPE_CD) AS [OUTPUT_TYPE_CD],
			MIN(OB.EXTERNAL_ID) AS [EXTERNAL_BATCH_ID],
			MIN(L.NAME_TX) AS [LENDER_NAME],
			MIN(PD.NAME_TX) AS [PROCESS_DEFINITION_NAME],
			MIN(OC.TYPE_CD) AS [BATCH_TYPE],
			MIN(OB.SUB_TYPE_CD) AS [BATCH_SUB_TYPE],
			MIN(OB.OUTSOURCER_STATUS_CD) AS [BATCH_FULFILLMENT_STATUS],
			DATEDIFF(DAY,MIN(OB.CREATE_DT), GETDATE()) AS [DAYS_SINCE_CYCLE],
			MAX( DC.PRINT_STATUS_ASSIGNED_DT ) AS [LAST_SUBMITTED_DATE],
			MAX( CASE OC.OUTPUT_TYPE_CD WHEN ''IH'' THEN DC.PRINTED_DT ELSE OBL.CREATE_DT END) AS [COMPLETED_DATE],
			COUNT( ISNULL(DC.PRINT_STATUS_CD, ''UNRES'') ) AS [TOTAL_RECORD_COUNT],
			SUM( CASE ISNULL(DC.PRINT_STATUS_CD, ''UNRES'') WHEN ''EXCLUDE'' THEN 1 ELSE 0 END) AS [EXCLUDE],
			SUM( CASE ISNULL(DC.PRINT_STATUS_CD, ''UNRES'') WHEN ''IGNORE'' THEN 1 ELSE 0 END) AS [IGNORE],
			SUM( CASE ISNULL(DC.PRINT_STATUS_CD, ''UNRES'') WHEN ''PEND'' THEN 1 ELSE 0 END) AS [PEND],
			SUM( CASE ISNULL(DC.PRINT_STATUS_CD, ''UNRES'') WHEN ''PRINTED'' THEN 1 ELSE 0 END) AS [PRINTED],
			SUM( CASE ISNULL(DC.PRINT_STATUS_CD, ''UNRES'') WHEN ''REJECT'' THEN 1 ELSE 0 END) AS [REJECT],
			SUM( CASE ISNULL(DC.PRINT_STATUS_CD, ''UNRES'') WHEN ''UNRES'' THEN 1 ELSE 0 END) AS [UNRES],
			SUM( CASE WHEN ISNULL(DC.PRINT_STATUS_CD, ''UNRES'') IN (''PEND'',''PRINTED'') THEN 1 ELSE 0 END) AS [TOTAL_SUBMITTED],
			CASE WHEN DATEDIFF(DAY,MIN(OB.CREATE_DT), GETDATE()) > 2 AND MIN(OB.OUTSOURCER_STATUS_CD) IS NULL THEN 1 ELSE 0 END [IS_RED]
		FROM
			OUTPUT_BATCH OB
			INNER loop JOIN OUTPUT_CONFIGURATION OC ON OB.OUTPUT_CONFIGURATION_ID=OC.ID
			INNER loop JOIN LENDER L ON OC.RELATE_ID=L.ID AND OC.RELATE_CLASS_TX=''Allied.UniTrac.Lender''
			INNER loop JOIN PROCESS_LOG PL ON OB.PROCESS_LOG_ID=PL.ID
			INNER loop JOIN PROCESS_DEFINITION PD ON PL.PROCESS_DEFINITION_ID=PD.ID               
			INNER loop JOIN PROCESS_LOG_ITEM PLI ON PL.ID=PLI.PROCESS_LOG_ID
			INNER loop JOIN FORCE_PLACED_CERTIFICATE FPC ON PLI.RELATE_ID=FPC.ID AND PLI.RELATE_TYPE_CD=''Allied.UniTrac.ForcePlacedCertificate''
			LEFT OUTER JOIN DOCUMENT_CONTAINER DC ON FPC.ID=DC.RELATE_ID AND DC.RELATE_CLASS_NAME_TX=''Allied.UniTrac.ForcePlacedCertificate''
			LEFT OUTER JOIN OUTPUT_BATCH_LOG OBL ON OBL.OUTPUT_BATCH_ID = OB.ID AND OBL.LOG_TXN_TYPE_CD=''Consolidate''
		WHERE
		'
		+ case when @BATCH_ID is not null then '	OB.ID=@BATCH_ID AND ' else '' end
		+ case when @LENDER_ID is not null then '	L.ID=@LENDER_ID AND ' else '' end
		+ case when @PROCESS_DEFINITION_ID is not null then '	PD.ID=@PROCESS_DEFINITION_ID AND ' else '' end
                + '             PLI.STATUS_CD = ''COMP'' AND '
		+ '		OC.TYPE_CD=''FPC'' AND '
		+ case when @BATCH_SUB_TYPE_CD is not null then '	(OB.SUB_TYPE_CD IS NULL OR OB.SUB_TYPE_CD=@BATCH_SUB_TYPE_CD) AND ' else '' end
			-- APP WILL ENFORCE THAT BOTH OF THESE ARE NULL OR BOTH OF THESE ARE NOT NULL
		+ case when @BATCH_CREATE_START_DT is not null then '	OB.CREATE_DT >= @BATCH_CREATE_START_DT and ' else '' end
		+ case when @BATCH_CREATE_END_DT is not null then '	OB.CREATE_DT <= @BATCH_CREATE_END_DT and ' else '' end
		+ case when @BATCH_ID_EXTERNAL is not null then '	OB.EXTERNAL_ID=@BATCH_ID_EXTERNAL AND ' else '' end
		+ case when @BATCH_STATUS_CD is not null then '	OB.STATUS_CD=@BATCH_STATUS_CD AND ' else '' end
		+ case when @BATCH_FULFILLMENT_STATUS_CD is not null then ' OB.OUTSOURCER_STATUS_CD=@BATCH_FULFILLMENT_STATUS_CD AND '
															 else '' end
		+ '															
			DC.PURGE_DT IS NULL AND
			 FPC.PURGE_DT IS NULL AND
		     PLI.PURGE_DT IS NULL AND
	         PL.PURGE_DT IS NULL AND
			 L.PURGE_DT IS NULL AND
		     OC.PURGE_DT IS NULL AND
	         OB.PURGE_DT IS NULL
        GROUP BY
			OB.ID '
	END

--	select @QUERY = @QUERY + ' OPTION (OPTIMIZE FOR UNKNOWN, RECOMPILE, MAXDOP 1)'
--	select @QUERY = @QUERY + ' OPTION (OPTIMIZE FOR UNKNOWN)'
	if @LENDER_ID is not null or @BATCH_ID is not null
		select @QUERY = @QUERY + ' OPTION ( RECOMPILE, MAXDOP 1)'
	else
		select @QUERY = @QUERY + ' OPTION (RECOMPILE)'

	exec sp_executesql @QUERY,
	  N'@LENDER_ID BIGINT=NULL,
		@PROCESS_DEFINITION_ID BIGINT=NULL,
		@BATCH_SUB_TYPE_CD NVARCHAR(30)=NULL,
		@BATCH_CREATE_START_DT DATETIME=NULL,
		@BATCH_CREATE_END_DT DATETIME=NULL,
		@BATCH_ID BIGINT=NULL,
		@BATCH_ID_EXTERNAL NVARCHAR(100)=NULL,
		@BATCH_STATUS_CD NVARCHAR(30)=NULL,
		@BATCH_FULFILLMENT_STATUS_CD NVARCHAR(30)=NULL,
		@AGENCY_ID bigint=NULL',
		@LENDER_ID ,
		@PROCESS_DEFINITION_ID ,
		@BATCH_SUB_TYPE_CD ,
		@BATCH_CREATE_START_DT ,
		@BATCH_CREATE_END_DT ,
		@BATCH_ID ,
		@BATCH_ID_EXTERNAL ,
		@BATCH_STATUS_CD ,
		@BATCH_FULFILLMENT_STATUS_CD,
		@AGENCY_ID
END


GO

