USE [UniTrac]
GO

/****** Object:  StoredProcedure [dbo].[SearchUTLCacheChangeQueue]    Script Date: 1/3/2019 1:59:50 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[SearchUTLCacheChangeQueue]
AS
BEGIN
	SELECT DISTINCT s.TABLE_ID, s.TABLE_NM, s.ID, s.LENDER_ID
	INTO #TEMP_QUEUE
	FROM 
	(
	SELECT DISTINCT TOP 10000 TABLE_ID, TABLE_NM, ID, LENDER_ID
	FROM UTL_CACHE_CHANGE_QUEUE
	ORDER BY ID
	) s

	DECLARE @maxId BIGINT
	SELECT @maxId = MAX(ID) FROM #TEMP_QUEUE

	-- Gets the distinct loan ids from loan and property changes.
	SELECT DISTINCT COALESCE(CASE WHEN tq.TABLE_NM = 'LOAN' THEN tq.TABLE_ID ELSE NULL END, l.ID) as ID, tq.LENDER_ID
	INTO #TEMP_LOAN_IDS
	FROM #TEMP_QUEUE tq
	LEFT JOIN COLLATERAL c ON tq.TABLE_ID = c.PROPERTY_ID AND tq.TABLE_NM = 'PROPERTY'
	LEFT JOIN LOAN l ON c.LOAN_ID = l.ID

	-- Loan Result Set
	SELECT tli.ID AS LOAN_ID
	,CASE WHEN ISNULL(ln.NUMBER_TX,'') = '' THEN l.NUMBER_TX ELSE ln.NUMBER_TX END
	,CASE WHEN l.ID IS NULL THEN 'Y' ELSE 'N' END AS DELETED
	,tli.LENDER_ID
	FROM #TEMP_LOAN_IDS tli
	LEFT JOIN LOAN l ON tli.ID = l.ID AND l.RECORD_TYPE_CD = 'G' AND l.PURGE_DT IS NULL
	LEFT JOIN LOAN_NUMBER ln ON l.ID = ln.LOAN_ID AND ln.PURGE_DT IS NULL 

	-- Property Result Set
	SELECT
	tli.ID as LOAN_ID
	,c.PROPERTY_ID as ID
	,c.COLLATERAL_CODE_ID as COLLATERAL_CODE_ID
	,p.DESCRIPTION_TX
	,p.VIN_TX
	,p.YEAR_TX
	,p.MAKE_TX
	,p.MODEL_TX
	,p.ALT_MATCH_XML
	,ISNULL(ca1.RCTypes, '') AS RCTypes
	,oa.LINE_1_TX
	,oa.LINE_2_TX
	,oa.CITY_TX
	,oa.STATE_PROV_TX
	,oa.POSTAL_CODE_TX
	,oa.COUNTRY_TX
	,CASE WHEN p.ID IS NULL THEN 'Y' ELSE 'N' END AS DELETED
	FROM #TEMP_LOAN_IDS tli
	INNER JOIN COLLATERAL c ON tli.ID = c.LOAN_ID 
	LEFT JOIN PROPERTY p ON c.PROPERTY_ID = p.ID AND p.RECORD_TYPE_CD = 'G' AND P.PURGE_DT IS NULL AND c.PURGE_DT IS NULL
	LEFT JOIN OWNER_ADDRESS oa ON p.ADDRESS_ID = oa.ID AND oa.PURGE_DT IS NULL
	LEFT JOIN 
	(
	SELECT rc.PROPERTY_ID as PROPERTY_ID, rc.TYPE_CD + ':' + str(rc.ID) + '|' + cast(isnull(rc.LENDER_PRODUCT_ID,'') as varchar(16)) + ';' as RCTypes
	from REQUIRED_COVERAGE rc
	where rc.PURGE_DT is null and rc.RECORD_TYPE_CD = 'G'
	) ca1 (PROPERTY_ID, RCTypes) ON p.ID = ca1.PROPERTY_ID

	-- Owner Result Set
	SELECT 
	tli.ID AS LOAN_ID
	,o.ID
	,o.FIRST_NAME_TX
	,o.LAST_NAME_TX
	,olr.OWNER_TYPE_CD
	,oa.LINE_1_TX
	,oa.LINE_2_TX
	,oa.CITY_TX
	,oa.STATE_PROV_TX
	,oa.POSTAL_CODE_TX
	,oa.COUNTRY_TX
	FROM #TEMP_LOAN_IDS tli
	INNER JOIN LOAN l ON tli.ID = l.ID AND l.RECORD_TYPE_CD = 'G' AND l.PURGE_DT IS null
	INNER JOIN OWNER_LOAN_RELATE olr ON l.ID = olr.LOAN_ID AND olr.PURGE_DT IS null
	INNER JOIN OWNER o ON olr.OWNER_ID = o.ID AND o.PURGE_DT IS NULL
	LEFT JOIN OWNER_ADDRESS oa ON o.ADDRESS_ID = oa.ID

	-- Owner Policy Result Set start
	SELECT c.PROPERTY_ID AS ID
	INTO #TEMP_PROPERTY_IDS
	FROM #TEMP_LOAN_IDS tli
	LEFT JOIN COLLATERAL c ON tli.ID = c.LOAN_ID AND c.PURGE_DT IS NULL

	SELECT 
	tpi.ID AS PROPERTY_ID
	,OP.ID
	,OP.POLICY_NUMBER_TX
	,TEMP.PCTypes
	FROM #TEMP_PROPERTY_IDS tpi
	INNER JOIN PROPERTY p ON tpi.ID = p.ID AND p.RECORD_TYPE_CD = 'G' AND p.PURGE_DT IS NULL
	INNER JOIN REQUIRED_COVERAGE rc ON p.ID = rc.PROPERTY_ID AND rc.RECORD_TYPE_CD = 'G' AND rc.PURGE_DT IS NULL
	OUTER APPLY UniTrac.dbo.GetCurrentCoverage(tpi.ID, rc.ID, rc.Type_CD) OP
	OUTER APPLY 
	(SELECT pc.TYPE_CD + ';' 
	FROM UniTrac.dbo.POLICY_COVERAGE pc 
	WHERE op.ID = pc.OWNER_POLICY_ID FOR XML PATH('') 
	) Temp (PCTypes)
	-- Owner Policy Result Set End

	-- Collateral Code Result Set
	SELECT
	tq.TABLE_ID AS ID
	,cc.CODE_TX
	,cc.PRIMARY_CLASS_CD
	,cc.SECONDARY_CLASS_CD	
	,CASE WHEN cc.CODE_TX IS NULL THEN 'Y' ELSE 'N' END AS DELETED
	,cc.DESCRIPTION_TX
	,cc.AGENCY_ID
	FROM #TEMP_QUEUE tq
	LEFT JOIN COLLATERAL_CODE cc ON tq.TABLE_ID = cc.ID AND cc.PURGE_DT IS NULL
	WHERE tq.TABLE_NM = 'COLLATERAL_CODE'

	-- Lender Group Relate Result Set
	SELECT
	tq.TABLE_ID AS ID
	,lgr.LENDER_GROUP_ID
	,lgr.LENDER_ID
	,CASE WHEN lgr.LENDER_GROUP_ID IS NULL THEN 'Y' ELSE 'N' END AS DELETED
	FROM #TEMP_QUEUE tq
	LEFT JOIN LENDER_GROUP_RELATE lgr ON tq.TABLE_ID = lgr.ID AND lgr.PURGE_DT IS NULL
	WHERE tq.TABLE_NM = 'LENDER_GROUP_RELATE'

	-- UTL Match Result Result Set
	SELECT
	   tq.TABLE_ID AS ID
	  ,umr.UTL_LOAN_ID
     ,umr.LOAN_ID
     ,umr.PROPERTY_ID
	  ,umr.MATCH_RESULT_CD
	  ,umr.USER_MATCH_RESULT_CD
	  ,umr.APPLY_STATUS_CD
	  ,CASE WHEN umr.ID is NULL or umr.PURGE_DT is not NULL THEN 'Y' ELSE 'N' END AS DELETED
	FROM #TEMP_QUEUE tq
	  LEFT JOIN UTL_MATCH_RESULT umr ON tq.TABLE_ID = umr.ID 
	WHERE tq.TABLE_NM = 'UTL_MATCH_RESULT'

	----Lender Result Set
	SELECT 
		   tq.TABLE_ID AS ID
		   ,l.CODE_TX
		   ,l.NAME_TX
		   ,l.TAX_ID_TX
		   ,ISNULL(dd.VALUE_TX,999) DropDays
		   ,CASE WHEN ISNULL(en.VALUE_TX,'false') = 'false' THEN 'N' ELSE 'Y' END EnableMatch
	FROM #TEMP_QUEUE tq
	  LEFT JOIN LENDER l ON tq.TABLE_ID = l.ID 
	  outer apply (SELECT rd.value_tx FROM RELATED_DATA rd 
					JOIN RELATED_DATA_DEF rdd ON rd.DEF_ID = rdd.id AND rdd.NAME_TX = 'DropDays'
					WHERE  l.id = rd.RELATE_ID) dd
	  outer apply (SELECT rd.value_tx FROM RELATED_DATA rd 
					JOIN RELATED_DATA_DEF rdd ON rd.DEF_ID = rdd.id AND rdd.NAME_TX = 'UTL2.0'
					WHERE  l.id = rd.RELATE_ID) en
	  WHERE tq.TABLE_NM = 'LENDER'

	-- Misc. Data
	SELECT ISNULL(@maxId, 0) as Last_Processed_Id
END

GO

