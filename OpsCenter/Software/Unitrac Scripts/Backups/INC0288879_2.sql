		SELECT E.ID, PLI.INFO_XML.value('(/INFO_LOG/USER_ACTION)[1]','varchar(20)') USER_ACTION --INTO [#tmpEscrow]
	FROM WORK_ITEM_PROCESS_LOG_ITEM_RELATE WIPLIR 
		Join PROCESS_LOG_ITEM PLI ON WIPLIR.PROCESS_LOG_ITEM_ID = PLI.ID and PLI.RELATE_TYPE_CD = 'Allied.UniTrac.Escrow' and PLI.Purge_DT IS NULL
		Join ESCROW E on PLI.RELATE_ID = E.ID AND E.PURGE_DT IS NULL AND E.REPORTED_DT IS NOT NULL
	WHERE WIPLIR.WORK_ITEM_ID = '38061919' AND WIPLIR.PURGE_DT IS NULL AND RECORD_TYPE_CD = 'G'
		and (E.REPORTED_DT BETWEEN '2017-03-16 15:56:54.5840058' and '2017-03-16 15:56:54.5840058')

DECLARE
@LenderCode as nvarchar(10)=NULL,
	@Branch AS nvarchar(max)=NULL,
	@Division as nvarchar(10)=NULL,
	@Coverage as nvarchar(100)=NULL,
	@InsCompany as nvarchar(100)=NULL,
	@ReportType as nvarchar(50)=NULL,
	@GroupByCode as nvarchar(50)=NULL,
	@SortByCode as nvarchar(50)=NULL,
	@FilterByCode as nvarchar(50)=NULL,
	@SpecificReport as varchar(50)=NULL,
	@Report_History_ID as bigint=NULL
	
Declare @FillerZero as varchar(18)
DECLARE @Regenerated as bit
DECLARE @RD_MISC1_ID as BIGINT

DECLARE @RunDateTime as nvarchar(Max)
DECLARE @RunDate as DATETIME2
Declare @GroupBySQL as varchar(1000)
Declare @SortBySQL as varchar(1000)
Declare @FilterBySQL as varchar(1000)
Declare @HeaderTx as varchar(1000)
Declare @FooterTx as varchar(1000)
Declare @RecordCount as bigint

Set @FillerZero = '000000000000000000'
Set @RecordCount = 0


CREATE TABLE [dbo].[#tmptable](
	[LOAN_BRANCHCODE_TX] [nvarchar](20) NULL,
	[LOAN_DIVISIONCODE_TX] [nvarchar](20) NULL,
	[LOAN_TYPE_TX] [nvarchar](1000) NULL,
	[REQUIREDCOVERAGE_CODE_TX] [nvarchar](30) NULL,
	[REQUIREDCOVERAGE_TYPE_TX] [nvarchar](1000) NULL,
--LOAN
	[LOAN_NUMBER_TX] [nvarchar](18) NOT NULL,
	[LOAN_NUMBERSORT_TX] [nvarchar](18) NULL,
--LENDER
	[LENDER_CODE_TX] [nvarchar](10) NULL,	
	[LENDER_NAME_TX] [nvarchar](40) NULL,	
--LOAN RELATED DATA
    [MISC1_TX] [nvarchar] (50) NULL,	
--OWNER
	[OWNER_LASTNAME_TX] [nvarchar](30) NULL,
	[OWNER_FIRSTNAME_TX] [nvarchar](30) NULL,
	[OWNER_MIDDLEINITIAL_TX] [char](1) NULL,
	[OWNER_NAME_TX] [nvarchar](100) NULL,
	[OWNER_LINE1_TX] [nvarchar](100) NULL,
	[OWNER_LINE2_TX] [nvarchar](100) NULL,
	[OWNER_CITY_TX] [nvarchar](40) NULL,
	[OWNER_STATE_TX] [nvarchar](30) NULL,
	[OWNER_ZIP_TX] [nvarchar](30) NULL,
--PROPERTY
	[COLLATERAL_LINE1_TX] [nvarchar](100) NULL,
	[COLLATERAL_LINE2_TX] [nvarchar](100) NULL,
	[COLLATERAL_CITY_TX] [nvarchar](40) NULL,
	[COLLATERAL_STATE_TX] [nvarchar](30) NULL,
	[COLLATERAL_ZIP_TX] [nvarchar](30) NULL,
   [PROPERTY_DESCRIPTION] [nvarchar] (800) NULL,
--COVERAGE
	[COVERAGE_STATUS_TX] [nvarchar](1000) NULL,
	[NOTICE_DT] [datetime2](7) NULL,
	[NOTICE_TYPE_TX] [nvarchar](1000) NULL,
	[NOTICE_SEQ_NO] [int] NULL,
--BORROWER INSURANCE
    [BORRINSCOMPANY_NAME_UNIQUE_TX] [nvarchar](1000) NULL,
	[BORRINSCOMPANY_NAME_TX] [nvarchar](100) NULL,
	[BORRINSCOMPANY_ATTN_TX] [nvarchar](30) NULL,
	[BORRINSCOMPANY_LINE1_TX] [nvarchar](100) NULL,
	[BORRINSCOMPANY_LINE2_TX] [nvarchar](100) NULL,
	[BORRINSCOMPANY_CITY_TX] [nvarchar](40) NULL,
	[BORRINSCOMPANY_STATE_TX] [nvarchar](30) NULL,
	[BORRINSCOMPANY_ZIP_TX] [nvarchar](30) NULL,
	[BORRINSCOMPANY_POLICY_NO] [nvarchar](30) NULL,
	[BORRINSCOMPANY_EFF_DT] [datetime2](7) NULL,
	[BORRINSCOMPANY_EXP_DT] [datetime2](7) NULL,
--ESCROW
	[ESCROW_DUE_DT] [datetime2](7) NULL,
	[ESCROW_PREMIUM_NO] [decimal](18, 2) NULL,
	[ESCROW_OTHER_NO] [decimal](18, 2) NULL,
	[ESCROW_FEE_NO] [decimal](18, 2) NULL,
	[ESCROW_TOTAL_NO] [decimal](18, 2) NULL,
	[ESCROW_TOTAL_POL_PREMIUM_NO] [decimal](18, 2) NULL,
	[ESCROW_PAYEE_CODE_TX] [nvarchar](20) NULL,
	[ESCROW_ACTION_CODE_TX] [nvarchar](20) NULL,
	[PAYEE_CODE_CHANGE_IN] [char](1) NULL,
	[REGENERATED] [bit] NULL,
--IDs, STATUS
	[LOAN_ID] [bigint] NULL,
	[COLLATERAL_ID] [bigint] NULL,
	[PROPERTY_ID] [bigint] NULL,
	[REQUIREDCOVERAGE_ID] [bigint] NULL,
	[LOAN_STATUSCODE] [nvarchar] (2) NULL,
	[LOAN_STATUSMEANING_TX] [nvarchar](1000) NULL,
	[COLLATERAL_STATUSCODE] [nvarchar] (2) NULL,
	[COLLATERAL_STATUSMEANING_TX] [nvarchar](1000) NULL,
	[REQUIREDCOVERAGE_STATUSCODE] [nvarchar] (2) NULL,
	[REQUIREDCOVERAGE_STATUSMEANING_TX] [nvarchar](1000) NULL,
	[REQUIREDCOVERAGE_SUBSTATUSCODE] [nvarchar] (2) NULL,
	[REQUIREDCOVERAGE_INSSTATUSCODE] [nvarchar] (2) NULL,
	[REQUIREDCOVERAGE_INSSTATUSMEANING_TX] [nvarchar](1000) NULL,
	[REQUIREDCOVERAGE_INSSUBSTATUSCODE] [nvarchar] (2) NULL,
	[REQUIREDCOVERAGE_INSSUBSTATUSMEANING_TX] [nvarchar](1000) NULL,
	[BORRINSCOMPANY_ID] bigint NULL,
	[ROW_NO] nvarchar(max) NULL,
	[SUB_ROW_NO] nvarchar(max) NULL,			--09232013
	[BORRINSCOMPANY_COUNTRY_TX] [nvarchar] (60) NULL,
	[BORRINSCOMPANY_PHONE_TX] [nvarchar] (62) NULL,
	[ESCROW_ID] bigint NULL,
	[RUNDATETIME] nvarchar(max) NULL,
	[RUNDATE] nvarchar(max) NULL,
	[RADDR_ID] bigint NULL,
	[BIA_ID] bigint NULL,
	[REMITTANCE_TYPE_CD] nvarchar(max),
	[VENDOR_NAME_TX] nvarchar(max),
	[VENDOR_ID] nvarchar(max),
-- PARAMETERS
	[REPORT_GROUPBY_TX] [nvarchar](1000) NULL,
	[REPORT_SORTBY_TX] [nvarchar](1000) NULL,
	[REPORT_HEADER_TX] [nvarchar](1000) NULL,
	[REPORT_FOOTER_TX] [nvarchar](1000) NULL
	
) ON [PRIMARY]

IF @GroupByCode IS NULL OR @GroupByCode = ''
	SELECT @GroupBySQL=GROUP_TX FROM REPORT_CONFIG WHERE CODE_TX = @SpecificReport
ELSE
	SELECT @GroupBySQL=DESCRIPTION_TX FROM REF_CODE WHERE DOMAIN_CD = 'Report_GroupBy' AND CODE_CD = @GroupByCode

IF @SortByCode IS NULL OR @SortByCode = ''
	SELECT @SortBySQL=SORT_TX FROM REPORT_CONFIG WHERE CODE_TX = @SpecificReport
ELSE
	SELECT @SortBySQL=DESCRIPTION_TX FROM REF_CODE WHERE DOMAIN_CD = 'Report_SortBy' AND CODE_CD = @SortByCode

IF @FilterByCode IS NULL OR @FilterByCode = ''
	SELECT @FilterBySQL=FILTER_TX FROM REPORT_CONFIG WHERE CODE_TX = @SpecificReport
Else
	SELECT @FilterBySQL=DESCRIPTION_TX FROM REF_CODE WHERE DOMAIN_CD = 'Report_FilterBy' AND CODE_CD = @FilterByCode

Select @HeaderTx=HEADER_TX from REPORT_CONFIG where CODE_TX = @SpecificReport
Select @FooterTx=FOOTER_TX from REPORT_CONFIG where CODE_TX = @SpecificReport 



SET @RunDate = GETDATE()
SET @RunDateTime = REPLACE(REPLACE(REPLACE(CONVERT(NVARCHAR(max), @RunDate, 120),' ',''),'-',''),':','')		
SET @RunDateTime = RIGHT(@RunDateTime, LEN(@RunDateTime)-2)	--eliminate the century 

Select @RD_MISC1_ID = ID from RELATED_DATA_DEF where NAME_TX = 'Misc1'
DECLARE @BranchTable AS TABLE(ID int, STRVALUE nvarchar(30))
			INSERT INTO @BranchTable SELECT * FROM SplitFunction(@Branch, ',')  

	SET @Regenerated = 0

Insert into #tmptable (
LOAN_BRANCHCODE_TX, LOAN_DIVISIONCODE_TX, LOAN_TYPE_TX, REQUIREDCOVERAGE_CODE_TX, REQUIREDCOVERAGE_TYPE_TX, 
--LOAN
LOAN_NUMBER_TX, LOAN_NUMBERSORT_TX,
--LENDER
LENDER_CODE_TX, LENDER_NAME_TX,
--LOAN RELATED DATA
[MISC1_TX],
--OWNER
OWNER_LASTNAME_TX, OWNER_FIRSTNAME_TX, OWNER_MIDDLEINITIAL_TX, OWNER_NAME_TX,
OWNER_LINE1_TX, OWNER_LINE2_TX, OWNER_CITY_TX, OWNER_STATE_TX, OWNER_ZIP_TX,
--PROPERTY
COLLATERAL_LINE1_TX, COLLATERAL_LINE2_TX, COLLATERAL_CITY_TX, COLLATERAL_STATE_TX, COLLATERAL_ZIP_TX, PROPERTY_DESCRIPTION, 
--COVERAGE
COVERAGE_STATUS_TX, NOTICE_DT,NOTICE_TYPE_TX,NOTICE_SEQ_NO,
--BORROWER INSURANCE
BORRINSCOMPANY_NAME_UNIQUE_TX, BORRINSCOMPANY_NAME_TX, BORRINSCOMPANY_ATTN_TX, BORRINSCOMPANY_LINE1_TX, BORRINSCOMPANY_LINE2_TX, BORRINSCOMPANY_CITY_TX, BORRINSCOMPANY_STATE_TX, BORRINSCOMPANY_ZIP_TX,
BORRINSCOMPANY_POLICY_NO, BORRINSCOMPANY_EFF_DT, BORRINSCOMPANY_EXP_DT, 
--ESCROW
ESCROW_DUE_DT,ESCROW_PREMIUM_NO,ESCROW_OTHER_NO,ESCROW_FEE_NO,ESCROW_TOTAL_NO,ESCROW_TOTAL_POL_PREMIUM_NO,ESCROW_PAYEE_CODE_TX,	ESCROW_ACTION_CODE_TX,PAYEE_CODE_CHANGE_IN, REGENERATED, 
--IDs, STATUS
LOAN_ID, COLLATERAL_ID, PROPERTY_ID, REQUIREDCOVERAGE_ID, 
LOAN_STATUSCODE, LOAN_STATUSMEANING_TX, COLLATERAL_STATUSCODE, COLLATERAL_STATUSMEANING_TX,
REQUIREDCOVERAGE_STATUSCODE, REQUIREDCOVERAGE_STATUSMEANING_TX, REQUIREDCOVERAGE_SUBSTATUSCODE,
REQUIREDCOVERAGE_INSSTATUSCODE, REQUIREDCOVERAGE_INSSTATUSMEANING_TX,
REQUIREDCOVERAGE_INSSUBSTATUSCODE, REQUIREDCOVERAGE_INSSUBSTATUSMEANING_TX
,BORRINSCOMPANY_ID, ROW_NO, SUB_ROW_NO, BORRINSCOMPANY_COUNTRY_TX,BORRINSCOMPANY_PHONE_TX,ESCROW_ID,RUNDATETIME, RUNDATE,RADDR_ID
,BIA_ID, REMITTANCE_TYPE_CD, VENDOR_NAME_TX, VENDOR_ID)
Select (CASE when L.BRANCH_CODE_TX is null or L.BRANCH_CODE_TX = '' then 'No Branch' else L.BRANCH_CODE_TX END) as [LOAN_BRANCHCODE_TX],
	   CASE WHEN ISNULL(L.DIVISION_CODE_TX,'') = ''
			THEN '0'
			ELSE L.DIVISION_CODE_TX
	   END AS [LOAN_DIVISIONCODE_TX],
	   ISNULL(RC_DIVISION.DESCRIPTION_TX,RC_SC.DESCRIPTION_TX) AS [LOAN_TYPE_TX],
	   RC.TYPE_CD as [REQUIREDCOVERAGE_CODE_TX], 
	   RC_COVERAGETYPE.MEANING_TX as [REQUIREDCOVERAGE_TYPE_TX], 
--LOAN
	   L.NUMBER_TX as [LOAN_NUMBER_TX], 
	   SUBSTRING(@FillerZero, 1, 18 - len(L.NUMBER_TX)) + CAST(L.NUMBER_TX AS nvarchar(18)) AS [LOAN_NUMBERSORT_TX],
--LENDER
	   LND.CODE_TX as [LENDER_CODE_TX], 
	   LND.NAME_TX as [LENDER_NAME_TX],
--LOAN RELATED DATA
	   isnull(RD.VALUE_TX,'') as [MISC1_TX],
--OWNER
       O.LAST_NAME_TX AS OWNER_LASTNAME_TX, 
	   O.FIRST_NAME_TX AS OWNER_FIRSTNAME_TX, 
	   O.MIDDLE_INITIAL_TX AS OWNER_MIDDLEINITIAL_TX,
       CASE WHEN O.FIRST_NAME_TX IS NULL THEN O.LAST_NAME_TX ELSE RTRIM(O.LAST_NAME_TX + ', ' + ISNULL(O.FIRST_NAME_TX,'') + ' ' + ISNULL(O.MIDDLE_INITIAL_TX,'')) END AS [OWNER_NAME_TX],
       AO.LINE_1_TX as OWNER_LINE1_TX, 
	   AO.LINE_2_TX as OWNER_LINE2_TX,
       AO.CITY_TX as OWNER_CITY_TX, 
	   AO.STATE_PROV_TX as OWNER_STATE_TX, 
	   AO.POSTAL_CODE_TX as OWNER_ZIP_TX,
--PROPERTY
       AM.LINE_1_TX as [COLLATERAL_LINE1_TX], 
	   AM.LINE_2_TX as [COLLATERAL_LINE2_TX],
       AM.CITY_TX as [COLLATERAL_CITY_TX], 
	   AM.STATE_PROV_TX as [COLLATERAL_STATE_TX], 
	   AM.POSTAL_CODE_TX as [COLLATERAL_ZIP_TX],
      dbo.fn_GetPropertyDescriptionForReports(C.ID) AS PROPERTY_DESCRIPTION, 
--COVERAGE
	   CASE 
		 WHEN RC.NOTICE_DT is not null and RC.NOTICE_SEQ_NO > 0 
				THEN cast(RC.NOTICE_SEQ_NO as char(1)) +  ' ' + NRef.MEANING_TX + ' ' + CONVERT(nvarchar(10), RC.NOTICE_DT, 101) 
	   ELSE CASE 
		WHEN L.STATUS_CD in ('N','O','P') THEN LSRef.MEANING_TX
		WHEN C.STATUS_CD in ('R','S','X') THEN CSRef.MEANING_TX
		WHEN L.STATUS_CD = 'B' and C.STATUS_CD = 'Z' and RC.STATUS_CD in ('A','D') and RC.SUMMARY_STATUS_CD in ('A','N') 
				THEN LSRef.MEANING_TX + ' ' + CSRef.MEANING_TX + ' ' + RCISRef.MEANING_TX
		WHEN L.STATUS_CD = 'B' and C.STATUS_CD = 'Z' and RC.STATUS_CD in ('A','D') and RC.SUMMARY_STATUS_CD not in ('A','N') 
				THEN LSRef.MEANING_TX + ' ' + CSRef.MEANING_TX + ' ' + RCISSRef.MEANING_TX + ' ' + RCISRef.MEANING_TX
		WHEN L.STATUS_CD = 'B' and C.STATUS_CD = 'Z' and RC.STATUS_CD = 'T' and RC.SUMMARY_STATUS_CD in ('A','N') 
				THEN LSRef.MEANING_TX + ' ' + CSRef.MEANING_TX + ' ' + RCSRef.MEANING_TX + ' ' + RCISRef.MEANING_TX
		WHEN L.STATUS_CD = 'B' and C.STATUS_CD = 'Z' and RC.STATUS_CD = 'T' and RC.SUMMARY_STATUS_CD not in ('A','N') 
				THEN LSRef.MEANING_TX + ' ' + CSRef.MEANING_TX + ' ' + RCSRef.MEANING_TX + ' ' + RCISSRef.MEANING_TX + ' ' + RCISRef.MEANING_TX
		WHEN L.STATUS_CD = 'B' and C.STATUS_CD = 'Z' and RC.STATUS_CD not in ('A','D','T')
				THEN LSRef.MEANING_TX + ' ' + CSRef.MEANING_TX + ' ' + RCSRef.MEANING_TX
		WHEN C.STATUS_CD = 'Z' and RC.STATUS_CD in ('A','D') and RC.SUMMARY_STATUS_CD in ('A','N') 
				THEN CSRef.MEANING_TX + ' ' + RCISRef.MEANING_TX
		WHEN C.STATUS_CD = 'Z' and RC.STATUS_CD in ('A','D') and RC.SUMMARY_STATUS_CD not in ('A','N') 
				THEN CSRef.MEANING_TX + ' ' + RCISSRef.MEANING_TX + ' ' + RCISRef.MEANING_TX
		WHEN C.STATUS_CD = 'Z' and RC.STATUS_CD = 'T' and RC.SUMMARY_STATUS_CD in ('A','N') 
				THEN CSRef.MEANING_TX + ' ' + RCSRef.MEANING_TX + ' ' + RCISRef.MEANING_TX
		WHEN C.STATUS_CD = 'Z' and RC.STATUS_CD = 'T' and RC.SUMMARY_STATUS_CD not in ('A','N') 
				THEN CSRef.MEANING_TX + ' ' + RCSRef.MEANING_TX + ' ' + RCISSRef.MEANING_TX + ' ' + RCISRef.MEANING_TX
		WHEN C.STATUS_CD = 'Z' and RC.STATUS_CD not in ('A','D','T')
				THEN CSRef.MEANING_TX + ' ' + RCSRef.MEANING_TX
		WHEN L.STATUS_CD = 'A' and RC.STATUS_CD in ('A','D') and RC.SUMMARY_STATUS_CD in ('A','N') 
				THEN RCISRef.MEANING_TX
		WHEN L.STATUS_CD = 'A' and RC.STATUS_CD in ('A','D') and RC.SUMMARY_STATUS_CD not in ('A','N') 
				THEN RCISSRef.MEANING_TX + ' ' + RCISRef.MEANING_TX
		WHEN L.STATUS_CD = 'A' and RC.STATUS_CD = 'T' and RC.SUMMARY_STATUS_CD in ('A','N') 
				THEN RCSRef.MEANING_TX + ' ' + RCISRef.MEANING_TX
		WHEN L.STATUS_CD = 'A' and RC.STATUS_CD = 'T' and RC.SUMMARY_STATUS_CD not in ('A','N') 
				THEN RCSRef.MEANING_TX + ' ' + RCISSRef.MEANING_TX + ' ' + RCISRef.MEANING_TX
		WHEN L.STATUS_CD = 'A' and RC.STATUS_CD not in ('A','D','T')
				THEN RCSRef.MEANING_TX
		WHEN L.STATUS_CD = 'B' and RC.STATUS_CD in ('A','D') and RC.SUMMARY_STATUS_CD in ('A','N') 
				THEN LSRef.MEANING_TX + ' ' + RCISRef.MEANING_TX
		WHEN L.STATUS_CD = 'B' and RC.STATUS_CD in ('A','D') and RC.SUMMARY_STATUS_CD not in ('A','N') 
				THEN LSRef.MEANING_TX + ' ' + RCISSRef.MEANING_TX + ' ' + RCISRef.MEANING_TX
		WHEN L.STATUS_CD = 'B' and RC.STATUS_CD = 'T' and RC.SUMMARY_STATUS_CD in ('A','N') 
				THEN LSRef.MEANING_TX + ' ' + RCSRef.MEANING_TX + ' ' + RCISRef.MEANING_TX
		WHEN L.STATUS_CD = 'B' and RC.STATUS_CD = 'T' and RC.SUMMARY_STATUS_CD not in ('A','N') 
				THEN LSRef.MEANING_TX + ' ' + RCSRef.MEANING_TX + ' ' + RCISSRef.MEANING_TX + ' ' + RCISRef.MEANING_TX
		WHEN L.STATUS_CD = 'B' and RC.STATUS_CD not in ('A','D','T')
				THEN LSRef.MEANING_TX + ' ' + RCSRef.MEANING_TX
	   END
	   END as [COVERAGE_STATUS_TX],
	   RC.NOTICE_DT as [NOTICE_DT],
	   NRef.MEANING_TX as [NOTICE_TYPE_TX], 
	   RC.NOTICE_SEQ_NO as [NOTICE_SEQ_NO],
--BORROWER INSURANCE
	   ISNULL(BIC.NAME, '') + ISNULL(AE.ATTENTION_TX, '') + ISNULL(AE.LINE_1_TX, '') + ISNULL(AE.LINE_2_TX, '') + ISNULL(AE.POSTAL_CODE_TX, '')  as [BORRINSCOMPANY_NAME_UNIQUE_TX], 
       BIC.NAME AS [BORRINSCOMPANY_NAME_TX],
	   AE.ATTENTION_TX AS [BORRINSCOMPANY_ATTN_TX],
	   AE.LINE_1_TX as [BORRINSCOMPANY_LINE1_TX], 
	   AE.LINE_2_TX as [BORRINSCOMPANY_LINE2_TX], 
	   AE.CITY_TX as [BORRINSCOMPANY_CITY_TX],
	   AE.STATE_PROV_TX as [BORRINSCOMPANY_STATE_TX],
	   AE.POSTAL_CODE_TX as [BORRINSCOMPANY_ZIP_TX],
       E.POLICY_NUMBER_TX as [BORRINSCOMPANY_POLICY_NO],
	   [BORRINSCOMPANY_EFF_DT] = Coalesce(E.EFFECTIVE_DT, E.DUE_DT), 
	   Case 
         when year(E.END_DT) = '9999' then NULL
         else E.END_DT
       End as [BORRINSCOMPANY_EXP_DT],  
--ESCROW
		E.DUE_DT as [ESCROW_DUE_DT], 
		E.PREMIUM_NO as [ESCROW_PREMIUM_NO], 
		E.OTHER_NO as [ESCROW_OTHER_NO], 
		E.FEE_NO as [ESCROW_FEE_NO], 
		E.TOTAL_AMOUNT_NO as [ESCROW_TOTAL_NO],
		E.TOTAL_POLICY_PREMIUM_NO as [ESCROW_TOTAL_POL_PREMIUM_NO],
		PC.PAYEE_CODE_TX as [ESCROW_PAYEE_CODE_TX],
		--EV.ACTION_TAKEN_CD AS [ESCROW_ACTION_CODE_TX],
		ISNULL(escTmp.USER_ACTION , '') AS [ESCROW_ACTION_CODE_TX],
		'PAYEE_CODE_CHANGE_IN'= Case when isnull(PC.PAYEE_CODE_TX,'') = isnull(PREV_ESCROW.PAYEE_CODE_TX, '') Then 'N' else 'Y' END,
		@Regenerated AS [REGENERATED], 
--IDs, STATUS
       L.ID as [LOAN_ID], 
       C.ID as [COLLATERAL_ID], 
       P.ID as [PROPERTY_ID], 
       RC.ID as [REQUIREDCOVERAGE_ID], 
       L.STATUS_CD as [LOAN_STATUSCODE], 
	   LSRef.MEANING_TX as [LOAN_STATUSMEANING_TX], 
       C.STATUS_CD as [COLLATERAL_STATUSCODE], 
	   CSRef.MEANING_TX as [COLLATERAL_STATUSMEANING_TX],
       RC.STATUS_CD as [REQUIREDCOVERAGE_STATUSCODE],
	   RCSRef.MEANING_TX as [REQUIREDCOVERAGE_STATUSMEANING_TX],
       RC.SUB_STATUS_CD as [REQUIREDCOVERAGE_SUBSTATUSCODE],
       RC.SUMMARY_STATUS_CD as [REQUIREDCOVERAGE_INSSTATUSCODE],
	   ISNULL(RCISRef.MEANING_TX, 'NOTAVAIL') as [REQUIREDCOVERAGE_INSSTATUSMEANING_TX],
       RC.SUMMARY_SUB_STATUS_CD as [REQUIREDCOVERAGE_INSSUBSTATUSCODE], 
	   RCISSRef.MEANING_TX as [REQUIREDCOVERAGE_INSSUBSTATUSMEANING_TX],
	   BIC.ID AS [BORRINSCOMPANY_ID],
	   '0000' AS [ROW_NO],    
	   '0000' AS [SUB_ROW_NO],
	   AE.COUNTRY_TX AS [BORRINSCOMPANY_COUNTRY_TX],           
	   CASE WHEN ISNULL(BIC.PHONE_TX,'') = '' THEN '' ELSE CASE WHEN ISNULL(BIC.PHONE_EXT_TX,'') <> '' THEN BIC.PHONE_TX + ' x' + BIC.PHONE_EXT_TX ELSE BIC.PHONE_TX END END AS [BORRINSCOMPANY_PHONE_TX],
	   ISNULL(ERCR.ESCROW_ID,0) AS [ESCROW_ID],
	   @RunDateTime AS [RUNDATETIME], 
	   CONVERT(NVARCHAR(max), @RunDate, 101) AS [RUNDATE],
	   AE.ID AS [RADDR_ID],
	   CASE WHEN ISNULL(E.REMITTANCE_TYPE_CD,'') = 'AGCY' THEN BIA.ID ELSE NULL END AS [BIA_ID],
	   E.REMITTANCE_TYPE_CD AS [REMITTANCE_TYPE_CD],
	   CASE
	    WHEN ISNULL(AE.ADDITIONAL_DATA_XML.value('(/AdditionalData/CheckName/text())[1]', 'varchar(300)'), '') <> ''
			THEN AE.ADDITIONAL_DATA_XML.value('(/AdditionalData/CheckName/text())[1]', 'varchar(300)') 
		WHEN ISNULL(E.REMITTANCE_TYPE_CD,'') = 'AGCY' 
			THEN BIA.NAME_TX 
		ELSE BIC.NAME 
	   END AS [VENDOR_NAME_TX],
	   CASE
		WHEN @SpecificReport = 'ESCROWEDIGEN'
			THEN
			(	
				SELECT TOP 1 lpcf.PAYEE_CODE_TX 
				FROM LENDER_PAYEE_CODE_FILE lpcf
					JOIN LENDER_PAYEE_CODE_MATCH lpcm on lpcm.LENDER_PAYEE_CODE_FILE_ID = lpcf.ID AND lpcm.PURGE_DT IS NULL
				WHERE lpcm.BIC_ID = BIC.ID
				AND lpcm.PRIMARY_IN = 'Y'
				AND lpcm.REMITTANCE_TYPE_CD = 'BIC'
				AND lpcf.LENDER_ID = L.LENDER_ID
				AND lpcf.PURGE_DT IS NULL
			)
	    WHEN ISNULL(AE.ADDITIONAL_DATA_XML.value('(/AdditionalData/CheckName/text())[1]', 'varchar(300)'), '') <> ''
			THEN 'R' + CAST(AE.ID AS VARCHAR(30))
		WHEN ISNULL(E.REMITTANCE_TYPE_CD,'') = 'AGCY' 
			THEN 'A' + CAST(BIA.ID AS VARCHAR(30)) 
		ELSE 'C' + CAST(BIC.ID AS VARCHAR(30)) 
	   END AS [VENDOR_ID]  FROM #tmpEscrow escTmp
Join ESCROW E on escTmp.id = E.ID AND E.PURGE_DT IS NULL
JOIN PROPERTY P ON E.PROPERTY_ID = P.ID AND P.PURGE_DT IS NULL
Join COLLATERAL C on C.PROPERTY_ID = P.ID AND C.PURGE_DT IS NULL
Join LOAN L on L.ID = C.LOAN_ID and L.LENDER_ID = P.LENDER_ID AND L.PURGE_DT IS NULL
Join LENDER LND on LND.ID = L.LENDER_ID AND LND.PURGE_DT IS NULL
left JOIN LENDER_ORGANIZATION LO ON LO.LENDER_ID = L.LENDER_ID AND LO.TYPE_CD = 'BRCH' AND LO.CODE_TX = L.BRANCH_CODE_TX and LO.PURGE_DT is null
Join OWNER_LOAN_RELATE OL on OL.LOAN_ID = L.ID AND OL.PRIMARY_IN = 'Y' AND OL.PURGE_DT IS NULL
Join [OWNER] O on O.ID = OL.OWNER_ID AND O.PURGE_DT IS NULL
left Join OWNER_ADDRESS AO on AO.ID = O.ADDRESS_ID AND AO.PURGE_DT IS NULL
left Join OWNER_ADDRESS AM on AM.ID = P.ADDRESS_ID AND AM.PURGE_DT IS NULL
left Join [ADDRESS] AE on AE.ID = E.REMITTANCE_ADDR_ID and AE.PURGE_DT IS NULL
OUTER APPLY 
(
	SELECT TOP 1 ESCROW_REQUIRED_COVERAGE_RELATE.* 
	FROM ESCROW_REQUIRED_COVERAGE_RELATE
	JOIN REQUIRED_COVERAGE ON REQUIRED_COVERAGE.ID = ESCROW_REQUIRED_COVERAGE_RELATE.REQUIRED_COVERAGE_ID 
		AND ((@Coverage IS NULL OR @Coverage ='1') OR @Coverage = REQUIRED_COVERAGE.TYPE_CD)
		AND REQUIRED_COVERAGE.PURGE_DT IS NULL
	WHERE E.ID = ESCROW_REQUIRED_COVERAGE_RELATE.ESCROW_ID AND ESCROW_REQUIRED_COVERAGE_RELATE.PURGE_DT IS NULL 
	ORDER BY CASE WHEN REQUIRED_COVERAGE.TYPE_CD = 'HAZARD' THEN 0 ELSE 1 END
) AS ERCR
left Join REQUIRED_COVERAGE RC on ERCR.REQUIRED_COVERAGE_ID = RC.ID AND RC.PURGE_DT IS NULL
left Join BORROWER_INSURANCE_COMPANY BIC on BIC.ID = E.BIC_ID AND BIC.PURGE_DT IS NULL
LEFT JOIN BORROWER_INSURANCE_AGENCY BIA ON BIA.ESCROW_REMITTANCE_ADDRESS_ID = E.REMITTANCE_ADDR_ID AND BIA.PURGE_DT IS NULL
LEFT Join RELATED_DATA RD on RD.RELATE_ID = L.ID and DEF_ID =  @RD_MISC1_ID
OUTER APPLY
(
	SELECT TOP 1 LM.ID, LF.PAYEE_CODE_TX 
	FROM LENDER_PAYEE_CODE_MATCH LM 
	JOIN LENDER_PAYEE_CODE_FILE LF ON LF.ID = LM.LENDER_PAYEE_CODE_FILE_ID
	WHERE LF.LENDER_ID = L.LENDER_ID AND LF.AGENCY_ID = L.AGENCY_ID
	AND LM.REMITTANCE_ADDR_ID = E.REMITTANCE_ADDR_ID
	AND (LM.BIC_ID = E.BIC_ID OR LM.REMITTANCE_TYPE_CD = 'BIA')
	AND LM.PRIMARY_IN = 'Y'   
	AND (LF.BRCH_LENDER_ORG_ID = LO.ID 
		OR ISNULL(LF.BRCH_LENDER_ORG_ID ,0) = 0)
	AND LF.PURGE_DT IS NULL 
	AND LM.PURGE_DT IS NULL
	ORDER BY LF.BRCH_LENDER_ORG_ID DESC
) AS PC	
OUTER APPLY
(		
	SELECT TOP 1 esc.PAYEE_CODE_TX
	FROM REQUIRED_COVERAGE rc1
	JOIN ESCROW_REQUIRED_COVERAGE_RELATE escrel ON escrel.REQUIRED_COVERAGE_ID = rc1.ID AND rc1.PROPERTY_ID = RC.PROPERTY_ID
	JOIN ESCROW esc ON esc.ID = escrel.ESCROW_ID
	WHERE rc1.ID = rc.ID
	AND e.Id <> esc.ID
	AND esc.PURGE_DT IS NULL
	AND escrel.PURGE_DT IS NULL
	AND esc.TYPE_CD = e.TYPE_CD
	AND esc.SUB_TYPE_CD = e.SUB_TYPE_CD
	AND esc.EXCESS_IN = e.EXCESS_IN
	AND (esc.STATUS_CD = 'CLSE'
	AND esc.SUB_STATUS_CD IN ('RPTD', 'LNDRPAID', 'INHSPAID', 'BWRPAID' ))
	ORDER BY ISNULL(esc.END_DT, DATEADD(MONTH, 12, esc.DUE_DT)) DESC
) AS PREV_ESCROW
left Join REF_CODE NRef on NRef.DOMAIN_CD = 'NoticeType' and NRef.CODE_CD = RC.NOTICE_TYPE_CD 
left Join REF_CODE LSRef on LSRef.DOMAIN_CD = 'LoanStatus' and LSRef.CODE_CD = L.STATUS_CD 
left Join REF_CODE CSRef on CSRef.DOMAIN_CD = 'CollateralStatus' and CSRef.CODE_CD = C.STATUS_CD 
left Join REF_CODE RCSRef on RCSRef.DOMAIN_CD = 'RequiredCoverageStatus' and RCSRef.CODE_CD = RC.STATUS_CD 
left Join REF_CODE RCISRef on RCISRef.DOMAIN_CD = 'RequiredCoverageInsStatus' and RCISRef.CODE_CD = RC.SUMMARY_STATUS_CD 
left Join REF_CODE RCISSRef on RCISSRef.DOMAIN_CD = 'RequiredCoverageInsSubStatus' and RCISSRef.CODE_CD = RC.SUMMARY_SUB_STATUS_CD 
left Join REF_CODE RC_DIVISION on RC_DIVISION.DOMAIN_CD = 'ContractType' and RC_DIVISION.CODE_CD = L.DIVISION_CODE_TX
left Join REF_CODE RC_COVERAGETYPE on RC_COVERAGETYPE.DOMAIN_CD = 'Coverage' and RC_COVERAGETYPE.CODE_CD = RC.TYPE_CD 
LEFT JOIN COLLATERAL_CODE CC ON CC.ID = C.COLLATERAL_CODE_ID AND CC.PURGE_DT IS NULL
left Join REF_CODE RC_SC on RC_SC.DOMAIN_CD = 'SecondaryClassification' AND CC.SECONDARY_CLASS_CD = RC_SC.CODE_CD
left Join REF_CODE_ATTRIBUTE RCA_PROP on RC_SC.DOMAIN_CD = RCA_PROP.DOMAIN_CD and RC_SC.CODE_CD = RCA_PROP.REF_CD and RCA_PROP.ATTRIBUTE_CD = 'PropertyType'
CROSS APPLY dbo.fn_FilterCollateralByDivisionCd(C.ID, @Division) fn_FCBD
where 
L.RECORD_TYPE_CD = 'G' and P.RECORD_TYPE_CD = 'G' and RC.RECORD_TYPE_CD = 'G' and E.RECORD_TYPE_CD = 'G' and
--L.EXTRACT_UNMATCH_COUNT_NO = 0 and C.EXTRACT_UNMATCH_COUNT_NO = 0 and
--L.STATUS_CD != 'U' and C.STATUS_CD != 'U' and
C.PRIMARY_LOAN_IN = 'Y' AND 
P.PURGE_DT IS NULL AND	
P.LENDER_ID = '1810'
AND
(L.BRANCH_CODE_TX IN (SELECT STRVALUE FROM @BranchTable) or @Branch = '1' or @Branch = '' or @Branch is NULL)
AND fn_FCBD.loanType IS NOT NULL
and
(RC.TYPE_CD = @Coverage or @Coverage = '1' or @Coverage is NULL)
and
(E.BIC_ID = @InsCompany or @InsCompany = 0 or @InsCompany = '' or @InsCompany is NULL)
and 
((@Regenerated = 'True' and @SpecificReport <> 'ESCREJECT' and ISNULL(escTmp.USER_ACTION , '') = 'Approve') or @Regenerated = 'False')
OPTION (FORCE ORDER)	

SELECT  * FROM #tmptable


BEGIN

DELETE #tmptable WHERE ISNULL(#tmptable.ESCROW_ACTION_CODE_TX,'') <> 'Approve'

SELECT DISTINCT #tmptable.LOAN_BRANCHCODE_TX
	,#tmptable.REQUIREDCOVERAGE_CODE_TX
	,#tmptable.VENDOR_NAME_TX
	,ISNULL(#tmptable.ESCROW_PAYEE_CODE_TX, '') AS ESCROW_PAYEE_CODE_TX
	,#tmptable.REPORT_GROUPBY_TX
	,#tmptable.VENDOR_ID
	,#tmptable.RADDR_ID
INTO #TTT
FROM #tmptable
GROUP BY #tmptable.LOAN_BRANCHCODE_TX
	,#tmptable.REQUIREDCOVERAGE_CODE_TX
	,#tmptable.ESCROW_PAYEE_CODE_TX
	,#tmptable.VENDOR_NAME_TX
	,#tmptable.REPORT_GROUPBY_TX
	,#tmptable.VENDOR_ID
	,#tmptable.RADDR_ID;

WITH TS (
	ROW_NO
	,LOAN_BRANCHCODE_TX
	,REQUIREDCOVERAGE_CODE_TX
	,ESCROW_PAYEE_CODE_TX
	,VENDOR_NAME_TX
	,REPORT_GROUPBY_TX
	,VENDOR_ID
	,RADDR_ID
	)
AS (
	SELECT ROW_NUMBER() OVER (
			ORDER BY #TTT.REQUIREDCOVERAGE_CODE_TX
				,#TTT.ESCROW_PAYEE_CODE_TX
				,#TTT.VENDOR_NAME_TX
				,#TTT.REPORT_GROUPBY_TX
				,#TTT.VENDOR_ID
				,#TTT.RADDR_ID
			) AS ROW_NO
		,#TTT.LOAN_BRANCHCODE_TX
		,#TTT.REQUIREDCOVERAGE_CODE_TX
		,#TTT.ESCROW_PAYEE_CODE_TX
		,VENDOR_NAME_TX
		,#TTT.REPORT_GROUPBY_TX
		,#TTT.VENDOR_ID
		,#TTT.RADDR_ID
	FROM #TTT
	)
UPDATE #tmptable
SET #tmptable.ROW_NO = RIGHT('000' + CAST(TS.ROW_NO AS NVARCHAR(max)), 3)
FROM #tmptable
JOIN TS ON #tmptable.LOAN_BRANCHCODE_TX = TS.LOAN_BRANCHCODE_TX
	AND #tmptable.REQUIREDCOVERAGE_CODE_TX = TS.REQUIREDCOVERAGE_CODE_TX
	AND ISNULL(#tmptable.ESCROW_PAYEE_CODE_TX, '') = ISNULL(TS.ESCROW_PAYEE_CODE_TX, '')
	AND #tmptable.VENDOR_NAME_TX = TS.VENDOR_NAME_TX
	AND #tmptable.REPORT_GROUPBY_TX = TS.REPORT_GROUPBY_TX
	AND #tmptable.VENDOR_ID = TS.VENDOR_ID
	AND #tmptable.RADDR_ID = TS.RADDR_ID;

WITH TS (
	SUB_ROW_NO
	,LOAN_BRANCHCODE_TX
	,REQUIREDCOVERAGE_CODE_TX
	,VENDOR_NAME_TX
	,ESCROW_PAYEE_CODE_TX
	,REPORT_GROUPBY_TX
	,VENDOR_ID
	,RADDR_ID
	,ROW_NO
	,OWNER_LASTNAME_TX
	,OWNER_FIRSTNAME_TX
	,LOAN_NUMBER_TX
	,BORRINSCOMPANY_POLICY_NO
	,ESCROW_ID
	)
AS (
	SELECT ROW_NUMBER() OVER (
			PARTITION BY ROW_NO ORDER BY ROW_NO
				,OWNER_LASTNAME_TX
				,OWNER_FIRSTNAME_TX
			) AS SUB_ROW_NO
		,#tmptable.LOAN_BRANCHCODE_TX
		,#tmptable.REQUIREDCOVERAGE_CODE_TX
		,#tmptable.VENDOR_NAME_TX
		,#tmptable.ESCROW_PAYEE_CODE_TX
		,#tmptable.REPORT_GROUPBY_TX
		,#tmptable.VENDOR_ID
		,#tmptable.RADDR_ID
		,#tmptable.ROW_NO
		,#tmptable.OWNER_LASTNAME_TX
		,#tmptable.OWNER_FIRSTNAME_TX
		,#tmptable.LOAN_NUMBER_TX
		,#tmptable.BORRINSCOMPANY_POLICY_NO
		,#tmptable.ESCROW_ID
	FROM #tmptable
	)
UPDATE #tmptable
SET #tmptable.SUB_ROW_NO = RIGHT('000' + CAST(TS.SUB_ROW_NO AS NVARCHAR(max)), 3)
FROM #tmptable
JOIN TS ON #tmptable.LOAN_BRANCHCODE_TX = TS.LOAN_BRANCHCODE_TX
	AND #tmptable.REQUIREDCOVERAGE_CODE_TX = TS.REQUIREDCOVERAGE_CODE_TX
	AND ISNULL(#tmptable.ESCROW_PAYEE_CODE_TX, '') = ISNULL(TS.ESCROW_PAYEE_CODE_TX, '')
	AND #tmptable.VENDOR_NAME_TX = TS.VENDOR_NAME_TX
	AND #tmptable.REPORT_GROUPBY_TX = TS.REPORT_GROUPBY_TX
	AND #tmptable.VENDOR_ID = TS.VENDOR_ID
	AND #tmptable.RADDR_ID = TS.RADDR_ID
	AND #tmptable.ROW_NO = TS.ROW_NO
	AND #tmptable.LOAN_NUMBER_TX = TS.LOAN_NUMBER_TX
	AND #tmptable.BORRINSCOMPANY_POLICY_NO = TS.BORRINSCOMPANY_POLICY_NO
	AND #tmptable.ESCROW_ID = TS.ESCROW_ID;

END

SELECT @RecordCount = COUNT(*) from #tmptable
print @RecordCount

IF @Report_History_ID IS NOT NULL
BEGIN

  Update [UNITRAC-REPORTS].[UNITRAC].DBO.REPORT_HISTORY_NOXML
  Set RECORD_COUNT_NO = @RecordCount
  where ID = @Report_History_ID
    
END

--SELECT * from #tmptable

--DROP TABLE #tmptable