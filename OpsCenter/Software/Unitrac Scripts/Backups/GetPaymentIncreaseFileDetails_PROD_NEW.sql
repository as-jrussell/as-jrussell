IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetPaymentIncreaseFileDetails]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GetPaymentIncreaseFileDetails]
GO


CREATE PROCEDURE [dbo].[GetPaymentIncreaseFileDetails] 
(
  @workItemId as bigint
)
AS
BEGIN	

	SET NOCOUNT ON
	
	Declare @processDefinitionsId as bigint
	Declare @processLogId as bigint
	Declare @startDate as datetime
	Declare @endDate as datetime	
	
	IF OBJECT_ID(N'tempdb..#tmpCycleLCGCT',N'U') IS NOT NULL
       DROP TABLE #tmpCycleLCGCT   
       
	CREATE TABLE #tmpCycleLCGCT
	(	
	  LCGCTId bigint
    )
    
    SELECT @processLogId = PL.ID , @processDefinitionsId = PL.PROCESS_DEFINITION_ID ,
    @startDate = PL.START_DT , @endDate = PL.END_DT
    FROM WORK_ITEM WI
    JOIN PROCESS_LOG PL ON PL.ID = WI.RELATE_ID AND PL.PURGE_DT IS NULL    
    JOIN WORKFLOW_DEFINITION WFD ON WFD.ID = WI.WORKFLOW_DEFINITION_ID AND WFD.PURGE_DT IS NULL
    AND WFD.NAME_TX = 'Cycle' 
    WHERE WI.RELATE_TYPE_CD = 'Osprey.ProcessMgr.ProcessLog'
    and WI.ID = @workItemId
    
	
	INSERT INTO #tmpCycleLCGCT (LCGCTId)
	select Cycle.Col.value('.','bigint') as LCGCTId 
	FROM PROCESS_DEFINITION PD
	CROSS APPLY PD.SETTINGS_XML_IM.nodes('/ProcessDefinitionSettings/LCGCTList/LCGCTId') as Cycle(Col)	
	WHERE PD.ID = @processDefinitionsId
	
	IF OBJECT_ID(N'tempdb..#tmpFPC',N'U') IS NOT NULL
       DROP TABLE #tmpFPC 
	
	CREATE TABLE #tmpFPC
	(
	  LOAN_ID bigint,
	  FPC_ID bigint,
	  NUMBER_TX varchar(20),
	  LOAN_NUMBER_TX varchar(20),
	  ISMULTI int
	)	
	
	INSERT INTO #tmpFPC
	(
	  LOAN_ID , FPC_ID , ISMULTI
	)
	SELECT DISTINCT FPC.LOAN_ID , FPR.FPC_ID , 0
	FROM FORCE_PLACED_CERTIFICATE FPC 
	JOIN FORCE_PLACED_CERT_REQUIRED_COVERAGE_RELATE FPR ON FPR.FPC_ID = FPC.ID AND FPR.PURGE_DT IS NULL
	JOIN REQUIRED_COVERAGE RC ON RC.ID = FPR.REQUIRED_COVERAGE_ID AND RC.PURGE_DT IS NULL
	JOIN #tmpCycleLCGCT TMP ON TMP.LCGCTId = RC.LCGCT_ID	
	WHERE FPC.PAYMENT_REPORT_DT IS NOT NULL
	AND DATEDIFF(s , @startDate , FPC.PAYMENT_REPORT_DT ) >= 0 
	AND DATEDIFF(s , FPC.PAYMENT_REPORT_DT , @endDate ) >= 0
	AND ISNULL(FPC.PAYMENT_REPORT_CD,'') <> ''
	AND FPC.PAYMENT_REPORT_CD NOT IN ('X')	
	AND FPC.PURGE_DT IS NULL	
	
	UPDATE #tmpFPC SET ISMULTI = 1 WHERE LOAN_ID IN 
	(
		SELECT LOAN_ID FROM #tmpFPC
		GROUP BY LOAN_ID HAVING COUNT(*) > 1	
	)
	
	IF OBJECT_ID(N'tempdb..#tmpMULTICPI',N'U') IS NOT NULL
       DROP TABLE #tmpMULTICPI 
	
	CREATE TABLE #tmpMULTICPI
	(
	    LOAN_ID bigint ,		
		FPC_ID bigint,	
		FPC_NUMBER varchar(18), 		
		ISSUE_DT datetime , 		
		FPC_CANCELLATION_DT datetime,
		FPC_EXPIRATION_DT datetime,
		ORIGINAL_PAYMENT_NO decimal(18,5) , 
		CURRENT_PAYMENT_NO decimal(18,5) , 
		PMT_INCR_NO decimal(18,5) , 
		NEW_CURRENT_PAYMENT_NO decimal(18,5),
		PRIOR_PAYMENT_NO decimal(18,5) , 
		NEW_PAYMENT_NO DECIMAL (18, 5) ,
		EARNED_PAYMENT_NO decimal(18,5)		
	)
	
	INSERT INTO #tmpMULTICPI
	(
		LOAN_ID , FPC_ID , FPC_NUMBER , ISSUE_DT , FPC_CANCELLATION_DT , FPC_EXPIRATION_DT,
		ORIGINAL_PAYMENT_NO , CURRENT_PAYMENT_NO , PMT_INCR_NO , NEW_CURRENT_PAYMENT_NO ,
		PRIOR_PAYMENT_NO , NEW_PAYMENT_NO , EARNED_PAYMENT_NO 
	)
	SELECT DISTINCT
		LOAN.ID , FPC.ID , FPC.NUMBER_TX ,
		FPC.ISSUE_DT , FPC.CANCELLATION_DT , FPC.EXPIRATION_DT,
		LOAN.ORIGINAL_PAYMENT_AMOUNT_NO , LOAN.PAYMENT_AMOUNT_NO , ACT.PAYMENT_CHANGE_AMOUNT_NO , 0 ,
		ACT.PRIOR_PAYMENT_AMOUNT_NO , ACT.NEW_PAYMENT_AMOUNT_NO , CXL.EARNED_PAYMENT_AMOUNT_NO 	
		FROM LOAN 
		JOIN FORCE_PLACED_CERTIFICATE FPC ON FPC.LOAN_ID = LOAN.ID AND FPC.PURGE_DT IS NULL	 
		JOIN CPI_ACTIVITY ACT ON ACT.CPI_QUOTE_ID = FPC.CPI_QUOTE_ID
		AND ACT.PURGE_DT IS NULL AND ACT.TYPE_CD = 'I'
		JOIN #tmpFPC ON #tmpFPC.FPC_ID = FPC.ID
		OUTER APPLY
		(
		   SELECT TOP 1 EARNED_PAYMENT_AMOUNT_NO FROM CPI_ACTIVITY ACT1
		   WHERE PURGE_DT IS NULL AND ACT1.CPI_QUOTE_ID = FPC.CPI_QUOTE_ID
		   AND TYPE_CD IN ('C' , 'MT' ) 
		   ORDER BY PROCESS_DT DESC
		) AS CXL
		WHERE ISMULTI = 1
	
	DECLARE @LOAN_ID as bigint
	DECLARE @FPC_ID as bigint
	DECLARE @PREV_LOAN_ID as bigint
	DECLARE @ORIGINAL_PAYMENT_NO as decimal(18, 5)
	DECLARE @CURRENT_PAYMENT_NO as decimal(18, 5)
	DECLARE @PMT_INCR_NO as decimal(18, 5)	
	DECLARE @EARNED_PAYMENT_NO as decimal(18, 5)
	DECLARE @NEW_PMT_INCR as decimal (18, 5)
	DECLARE @FPC_CANCELLATION_DT as datetime
	DECLARE @FPCCNT as int
	set @FPCCNT = 0
	set @PREV_LOAN_ID = 0

	DECLARE PMTCUR SCROLL CURSOR FOR
		SELECT  LOAN_ID, FPC_ID , ORIGINAL_PAYMENT_NO , CURRENT_PAYMENT_NO, 
			PMT_INCR_NO , EARNED_PAYMENT_NO , FPC_CANCELLATION_DT
			FROM #tmpMULTICPI ORDER BY LOAN_ID , ISSUE_DT

	OPEN PMTCUR

	FETCH FROM PMTCUR INTO @LOAN_ID, @FPC_ID , @ORIGINAL_PAYMENT_NO , @CURRENT_PAYMENT_NO, 
			@PMT_INCR_NO , @EARNED_PAYMENT_NO , @FPC_CANCELLATION_DT
		WHILE @@Fetch_Status = 0
		BEGIN
		
		   SET @NEW_PMT_INCR = 0 
		   
		   IF @EARNED_PAYMENT_NO > 0 AND @FPC_CANCELLATION_DT IS NOT NULL
			 SET @NEW_PMT_INCR = @EARNED_PAYMENT_NO
		   ELSE
			 SET @NEW_PMT_INCR = @PMT_INCR_NO
			 
		   IF @PREV_LOAN_ID <> @LOAN_ID
		     BEGIN
		       SET @PREV_LOAN_ID = @LOAN_ID
		       SET @FPCCNT = 1
		     END	
		   ELSE
		     SET @FPCCNT = @FPCCNT + 1
			 
		   IF (@FPCCNT = 1)
		     BEGIN
		       UPDATE #tmpMULTICPI SET NEW_CURRENT_PAYMENT_NO = ORIGINAL_PAYMENT_NO + @NEW_PMT_INCR
		         WHERE LOAN_ID = @LOAN_ID AND FPC_ID = @FPC_ID
		     END
		   ELSE
		     BEGIN		          
				   UPDATE TMP SET NEW_CURRENT_PAYMENT_NO =  		                      
									  CASE WHEN isnull(T1.NEW_CURRENT_PAYMENT_NO,0) = 0 
									  THEN TMP.ORIGINAL_PAYMENT_NO +  @NEW_PMT_INCR		
									  WHEN DATEDIFF (DAY , T1.FPC_EXPIRATION_DT , GETDATE()) > 0
									  AND T1.FPC_CANCELLATION_DT IS NULL  
									  THEN TMP.ORIGINAL_PAYMENT_NO +  @NEW_PMT_INCR										  						  
									  ELSE T1.NEW_CURRENT_PAYMENT_NO + @NEW_PMT_INCR END
				   FROM #tmpMULTICPI TMP JOIN  #tmpMULTICPI T1 ON T1.LOAN_ID = TMP.LOAN_ID
				   WHERE TMP.LOAN_ID = @LOAN_ID AND TMP.FPC_ID = @FPC_ID
				   AND T1.LOAN_ID = @LOAN_ID AND TMP.FPC_NUMBER <> T1.FPC_NUMBER 
				   AND T1.ISSUE_DT <= TMP.ISSUE_DT
			 END
			 
		   FETCH NEXT FROM PMTCUR INTO @LOAN_ID, @FPC_ID , @ORIGINAL_PAYMENT_NO , @CURRENT_PAYMENT_NO, 
				@PMT_INCR_NO , @EARNED_PAYMENT_NO , @FPC_CANCELLATION_DT
		END

	CLOSE PMTCUR
	DEALLOCATE PMTCUR	
		
	SELECT 
	---LOAN
	ISNULL(LOAN.NUMBER_TX,'') AS LOAN_NUMBER_TX,
	ISNULL(LOAN.ORIGINAL_PAYMENT_AMOUNT_NO,0) AS ORIGINAL_PAYMENT_AMOUNT_NO ,
	ISNULL(LOAN.PAYMENT_AMOUNT_NO,0) AS CURRENT_PAYMENT_AMOUNT_NO ,
	ISNULL(LOAN.CURRENT_PAYMENT_INCREASE_AMOUNT_NO,0) AS CURRENT_PAYMENT_INCREASE_AMOUNT_NO ,
	--
	--The following section of code duplicates a date calculation in ReportPaymentChanges.sql and any changes should
	--also be their.
	--************************
    NEXT_SCHEDULED_PAYMENT_DT = 
    CASE WHEN ISNULL(LENDER.CODE_TX,'') = '1962' THEN
    CASE              
	  WHEN NEXT_SCHEDULED_PAYMENT_DT IS NULL OR FPC.PAYMENT_REPORT_DT IS NULL THEN NULL
	  WHEN DAY(NEXT_SCHEDULED_PAYMENT_DT) < DAY(FPC.PAYMENT_REPORT_DT)  THEN
		  DATEADD(MONTH, 1  , 
		  CAST(CAST(DATEPART(YEAR, FPC.PAYMENT_REPORT_DT ) AS CHAR(4)) + '/' + 
		  CAST(DATEPART(MONTH, FPC.PAYMENT_REPORT_DT ) AS CHAR(2))+ '/' + 
		  CASE WHEN DAY(NEXT_SCHEDULED_PAYMENT_DT) > 
			   DAY(DATEADD(DAY, -DAY(DATEADD(MONTH, 1, FPC.PAYMENT_REPORT_DT)), DATEADD(MONTH, 1, FPC.PAYMENT_REPORT_DT)))
			   THEN CAST(DAY(DATEADD(DAY, -DAY(DATEADD(MONTH, 1, FPC.PAYMENT_REPORT_DT)), DATEADD(MONTH, 1, FPC.PAYMENT_REPORT_DT))) AS CHAR(2))
			   ELSE CAST(DATEPART(DAY, NEXT_SCHEDULED_PAYMENT_DT) AS CHAR(2)) END AS DATETIME))
	  WHEN DAY(NEXT_SCHEDULED_PAYMENT_DT) >= DAY(FPC.PAYMENT_REPORT_DT) THEN
		 CAST(CAST(DATEPART(YEAR, FPC.PAYMENT_REPORT_DT ) AS CHAR(4)) + '/' + 
		  CAST(DATEPART(MONTH, FPC.PAYMENT_REPORT_DT ) AS CHAR(2))+ '/' + 
		  CASE WHEN DAY(NEXT_SCHEDULED_PAYMENT_DT) > 
			   DAY(DATEADD(DAY, -DAY(DATEADD(MONTH, 1, FPC.PAYMENT_REPORT_DT)), DATEADD(MONTH, 1, FPC.PAYMENT_REPORT_DT)))
			   THEN CAST(DAY(DATEADD(DAY, -DAY(DATEADD(MONTH, 1, FPC.PAYMENT_REPORT_DT)), DATEADD(MONTH, 1, FPC.PAYMENT_REPORT_DT))) AS CHAR(2))
			   ELSE CAST(DATEPART(DAY, NEXT_SCHEDULED_PAYMENT_DT) AS CHAR(2)) END AS DATETIME)
	  ELSE NULL 
      END 
      ELSE
        ISNULL(LOAN.NEXT_SCHEDULED_PAYMENT_DT ,'')
      END, 
    --******************************
	ISNULL(LOAN.PAYMENT_FREQUENCY_CD,'') AS  PAYMENT_FREQUENCY_CD,	
	----OWNER
	ISNULL(OWN.LAST_NAME_TX,'') AS OWNER_LAST_NAME_TX ,
	ISNULL(OWN.FIRST_NAME_TX,'') AS OWNER_FIRST_NAME_TX,
	ISNULL(OWN.MIDDLE_INITIAL_TX,'') AS OWNER_MIDDLE_INITIAL_TX ,	
	---FPC
	ISNULL(FPC.NUMBER_TX,'') AS FPC_NUMBER_TX,
	ISNULL(FPC.EFFECTIVE_DT,'') AS  FPC_EFFECTIVE_DT,
	ISNULL(FPC.EXPIRATION_DT,'') AS  FPC_EXPIRATION_DT ,
	ISNULL(FPC.CANCELLATION_DT,'') AS FPC_CANCELLATION_DT ,
	ISNULL(FPC.PAYMENT_REPORT_CD,'') AS PAYMENT_REPORT_CD ,
	ISNULL(FPC.PAYMENT_REPORT_DT,'') AS FPC_PAYMENT_REPORT_DT ,	
	---CPIQUOTE
	ISNULL(QT.PAYMENT_INCREASE_METHOD_CD,'') AS  PAYMENT_INCREASE_METHOD_CD,
	ISNULL(QT.PAYMENT_INCREASE_METHOD_VALUE_NO,0) AS  PAYMENT_INCREASE_METHOD_VALUE_NO,	
	--- CPI_ACTIVITY
	ISNULL(ISS.PRIOR_PAYMENT_AMOUNT_NO,0) AS  ISSUE_PRIOR_PAYMENT_AMOUNT_NO, 
	ISNULL(ISS.NEW_PAYMENT_AMOUNT_NO,0) AS ISSUE_NEW_PAYMENT_AMOUNT_NO ,
	ISNULL(ISS.TOTAL_PREMIUM_NO,0) AS ISSUE_TOTAL_PREMIUM_NO,
	ISNULL(ISS.PAYMENT_CHANGE_AMOUNT_NO,0) AS ISSUE_PAYMENT_INCREASE_AMOUNT,
	ABS(ISNULL(CANCEL.CANCEL_TOTAL_PREMIUM_NO,0)) AS CANCEL_TOTAL_PREMIUM_NO,	
	ISNULL(CANCEL.PAYMENT_DECREASE_AMOUNT,0) AS CANCEL_PAYMENT_DECREASE_AMOUNT ,
	ISNULL(EARNED.EARNED_PAYMENT_AMOUNT_NO,0) AS EARNED_PAYMENT_AMOUNT_NO,
	ISNULL(#tmpFPC.ISMULTI,0) AS ISMULTI , 
	ISNULL(TMP.NEW_CURRENT_PAYMENT_NO,0) AS NEW_CALC_CURRENT_PAYMENT_NO,
	ISNULL(PMTDECR.PRIOR_PAYMENT_AMOUNT_NO,0) AS  CANCEL_PRIOR_PAYMENT_AMOUNT_NO, 
	ISNULL(PMTDECR.NEW_PAYMENT_AMOUNT_NO,0) AS CANCEL_NEW_PAYMENT_AMOUNT_NO ,	
	---LENDER
	ISNULL(LENDER.CODE_TX,'') AS LENDER_CODE_TX,
	---BRANCH
	ISNULL(LO_BRANCH.CODE_TX,'') AS BRANCH_CODE_TX,
	--- EARNED PMT
	ISNULL(DBO.CALCULATEEARNEDPAYMENT (FPC.ID),0) AS EARNED_PAYMENT_NO,	
	--- MISC
	PMT_DIVISION_NO = ISNULL(CASE WHEN  LOAN.NEXT_SCHEDULED_PAYMENT_DT IS NULL THEN 0
		   WHEN LOAN.PAYMENT_FREQUENCY_CD = 'W' THEN 
			DATEDIFF(WW, LOAN.NEXT_SCHEDULED_PAYMENT_DT,FPC.CANCELLATION_DT)   
		   --- BI-WEEKLY
           WHEN LOAN.PAYMENT_FREQUENCY_CD = 'B' THEN 
			CEILING((CAST(DATEDIFF( WW, LOAN.NEXT_SCHEDULED_PAYMENT_DT,FPC.CANCELLATION_DT) AS NUMERIC ) * 100 / 2) / 100) * 2   
		   --- SEMI-MONTHLY
	       WHEN LOAN.PAYMENT_FREQUENCY_CD = 'S' THEN    
			CEILING((CAST(DATEDIFF( DAY, LOAN.NEXT_SCHEDULED_PAYMENT_DT,FPC.CANCELLATION_DT) AS NUMERIC ) * 100 / 15) / 100) * 15
		   --- MONTHLY
		   WHEN LOAN.PAYMENT_FREQUENCY_CD = 'M' THEN DATEDIFF( MM, LOAN.NEXT_SCHEDULED_PAYMENT_DT,FPC.CANCELLATION_DT)   
           --- QUARTERLY		   
		   WHEN LOAN.PAYMENT_FREQUENCY_CD = 'Q' THEN 
			CEILING((CAST(DATEDIFF( MM,LOAN.NEXT_SCHEDULED_PAYMENT_DT,FPC.CANCELLATION_DT) AS NUMERIC ) * 100 / 3) / 100) * 3
		   --- SEMI-ANNUALLY
    	   WHEN LOAN.PAYMENT_FREQUENCY_CD = 'T' THEN 
		   CEILING((CAST(DATEDIFF( MM, LOAN.NEXT_SCHEDULED_PAYMENT_DT,FPC.CANCELLATION_DT) AS NUMERIC ) * 100 / 6) / 100) * 6    
		   --- ANNUALLY
		   WHEN LOAN.PAYMENT_FREQUENCY_CD = 'A' THEN 
			CEILING((CAST(DATEDIFF( MM, LOAN.NEXT_SCHEDULED_PAYMENT_DT,FPC.CANCELLATION_DT) AS NUMERIC ) * 100 / 12) / 100) * 12    
		   ELSE DATEDIFF( MM, LOAN.NEXT_SCHEDULED_PAYMENT_DT,FPC.CANCELLATION_DT) END, 0),
    REMAINING_TERM_NO = ISNULL(DATEDIFF(DAY,GETDATE(),FPC.CANCELLATION_DT),0) ,
    RC.TYPE_CD AS COV_TYPE_CD , COLLCODE.COLLATERAL_CODE_ID ,
    PROPERTY_TYPE_RCA.PROPERTY_TYPE_CD , ISNULL(PR.ADDRESS_ID , 0 ) AS PR_ADDRESS_ID
	FROM FORCE_PLACED_CERTIFICATE FPC 	
	JOIN #tmpFPC ON #tmpFPC.FPC_ID = FPC.ID
	LEFT JOIN #tmpMULTICPI TMP ON TMP.FPC_ID = FPC.ID
	JOIN CPI_QUOTE QT ON QT.ID = FPC.CPI_QUOTE_ID
	JOIN LOAN ON LOAN.ID = FPC.LOAN_ID
   JOIN FORCE_PLACED_CERT_REQUIRED_COVERAGE_RELATE REL ON REL.FPC_ID = FPC.ID
	AND REL.PURGE_DT IS NULL
	JOIN REQUIRED_COVERAGE RC ON RC.ID = REL.REQUIRED_COVERAGE_ID
	AND RC.PURGE_DT IS NULL	
	JOIN PROPERTY PR ON PR.ID = RC.PROPERTY_ID
	OUTER APPLY
	(
	  SELECT TOP 1  COLL.COLLATERAL_CODE_ID , CC.SECONDARY_CLASS_CD FROM COLLATERAL COLL	
	  JOIN COLLATERAL_CODE CC ON CC.ID = COLL.COLLATERAL_CODE_ID 
	  WHERE COLL.PURGE_DT IS NULL AND COLL.PRIMARY_LOAN_IN = 'Y' AND 
	  COLL.PROPERTY_ID = RC.PROPERTY_ID
	 ) AS COLLCODE
	 OUTER APPLY 
	 (
	    SELECT RCA.VALUE_TX AS PROPERTY_TYPE_CD
	    FROM REF_CODE_ATTRIBUTE RCA
	    JOIN REF_CODE RC
		ON (RCA.REF_CD = RC.CODE_CD AND RCA.DOMAIN_CD = RC.DOMAIN_CD)
	    WHERE RC.CODE_CD = COLLCODE.SECONDARY_CLASS_CD AND RC.DOMAIN_CD = 'SecondaryClassification' 
	    AND RCA.ATTRIBUTE_CD = 'PropertyType'
	  ) AS PROPERTY_TYPE_RCA
	JOIN LENDER ON LENDER.ID = LOAN.LENDER_ID
	JOIN CPI_ACTIVITY ISS ON ISS.CPI_QUOTE_ID = QT.ID AND ISS.TYPE_CD = 'I'
	OUTER APPLY (SELECT
		SUM(ISNULL(CPA.TOTAL_PREMIUM_NO,0)) AS CANCEL_TOTAL_PREMIUM_NO ,		
		SUM(ISNULL(CPA.PAYMENT_CHANGE_AMOUNT_NO,0)) AS PAYMENT_DECREASE_AMOUNT
		FROM CPI_ACTIVITY CPA
		WHERE TYPE_CD IN ('C', 'MT','R') AND
		CPA.CPI_QUOTE_ID = QT.ID) AS CANCEL		
    OUTER APPLY (SELECT
		TOP 1 CPA.EARNED_PAYMENT_AMOUNT_NO 
		FROM CPI_ACTIVITY CPA WHERE TYPE_CD IN ('C','MT')
		AND CPA.CPI_QUOTE_ID = QT.ID ORDER BY PROCESS_DT DESC
		) AS EARNED
	OUTER APPLY (SELECT
		TOP 1 CPA.PRIOR_PAYMENT_AMOUNT_NO , CPA.NEW_PAYMENT_AMOUNT_NO 
		FROM CPI_ACTIVITY CPA WHERE TYPE_CD IN ('C','MT')
		AND CPA.CPI_QUOTE_ID = QT.ID 
		AND CPA.PAYMENT_CHANGE_AMOUNT_NO <> 0
		ORDER BY PROCESS_DT DESC
		) AS PMTDECR
	JOIN OWNER_LOAN_RELATE OLR ON OLR.LOAN_ID = LOAN.ID and OLR.OWNER_TYPE_CD = 'B'
    JOIN OWNER OWN ON OWN.ID = OLR.OWNER_ID	
    LEFT JOIN LENDER_ORGANIZATION LO_BRANCH
		ON (LO_BRANCH.LENDER_ID = LOAN.LENDER_ID AND 
		LO_BRANCH.CODE_TX = LOAN.BRANCH_CODE_TX AND LO_BRANCH.TYPE_CD = 'BRCH')		
	ORDER BY LOAN.NUMBER_TX , FPC.NUMBER_TX
    FOR xml PATH ('PAYMENT_DATA'), ROOT ('PAYMENT_INCREASE_FILES')    


END

GO


