--***Lender File Processing Snapshot****

--1) Obtain all LFP Delivery Infos
SELECT DISTINCT DI.ID INTO #tmpLFPDI
FROM DELIVERY_INFO DI
INNER JOIN TRADING_PARTNER TP ON TP.ID = DI.TRADING_PARTNER_ID
WHERE TP.TYPE_CD = 'LFP_TP'


--2) Obtain all Inbound Messages for those Delivery Info IDs over the past x number of days
SELECT MESSAGE.ID AS MSG_ID, DELIVERY_INFO_ID as MSG_DELIVERY_INFO_ID, MESSAGE_DIRECTION_CD, CREATE_DT as MSG_CREATE_DT INTO #tmpLFPMSGIB
FROM MESSAGE
WHERE DELIVERY_INFO_ID IN (SELECT ID FROM #tmpLFPDI) AND MESSAGE_DIRECTION_CD = 'I'
AND CREATE_DT >= DATEADD(d, -1,CONVERT(DATE, getdate(), 101))


--3) Obtain Loan Txn Counts for each Message
SELECT DISTINCT MESSAGE_ID, COUNT(LETD.ID) as LoanTxns into #tmpLOANCOUNTS
FROM DOCUMENT DOC
INNER JOIN [TRANSACTION] TXN ON DOC.ID = TXN.DOCUMENT_ID
INNER JOIN LOAN_EXTRACT_TRANSACTION_DETAIL LETD ON TXN.ID = LETD.TRANSACTION_ID
WHERE MESSAGE_ID IN (SELECT MSG_ID FROM #tmpLFPMSGIB)
GROUP BY MESSAGE_ID


--4) Capture LFP OB Messages for all of above Inbound Messages
SELECT M.ID INTO #tmpOBMessages
FROM MESSAGE M
JOIN TRADING_PARTNER TP (NOLOCK) ON M.RECEIVED_FROM_TRADING_PARTNER_ID = TP.ID 
JOIN DELIVERY_INFO DI ON M.DELIVERY_INFO_ID = DI.ID
JOIN RELATED_DATA RD ON DI.ID = RD.RELATE_ID
JOIN RELATED_DATA_DEF RDD ON RDD.ID = RD.DEF_ID	AND RDD.NAME_TX = 'UniTracDeliveryType'
WHERE MESSAGE_DIRECTION_CD = 'O' and TYPE_CD = 'LFP_TP' and m.purge_dt is null and m.DELIVER_TO_TRADING_PARTNER_ID = '2046' AND RD.VALUE_TX = 'IMPORT' 
AND M.PROCESSED_IN = 'Y' AND M.RELATE_ID_TX IN (SELECT MSG_ID FROM #tmpLFPMSGIB)


--5) Posting Counts for Above
SELECT M.ID AS OB_MESSAGE_ID,M.RELATE_ID_TX AS IB_MESSAGE_ID,M.SENT_STATUS_CD,M.RECEIVED_STATUS_CD,M.UPDATE_USER_TX,M.UPDATE_DT AS MSG_COMP_DT,COUNT(PLI.ID) AS PLI_COUNT, MIN(PLI.CREATE_DT) AS START_DT, MAX(PLI.CREATE_DT) AS END_DT
INTO #tmpPOSTING
FROM MESSAGE M (NOLOCK) 
     JOIN DELIVERY_INFO DI (NOLOCK) ON M.DELIVERY_INFO_ID = DI.ID 
     JOIN WORK_ITEM wi (NOLOCK) ON (wi.RELATE_ID = M.RELATE_ID_TX AND wi.WORKFLOW_DEFINITION_ID = 1) 
     CROSS APPLY wi.CONTENT_XML.nodes('/Content/Information/ProcessLogs/ProcessLog') AS P (TAB) 
     JOIN PROCESS_LOG_ITEM PLI (NOLOCK) ON (P.TAB.value('@Id', 'BIGINT') = PLI.PROCESS_LOG_ID AND PLI.RELATE_TYPE_CD = 'Allied.UniTrac.Loan') 
     CROSS APPLY PLI.INFO_XML.nodes('/INFO_LOG/RELATE_INFO') AS PLI_INFO (TAB) 
WHERE M.ID IN (SELECT ID FROM #tmpOBMessages)
GROUP BY M.ID,M.RELATE_ID_TX,M.SENT_STATUS_CD,M.RECEIVED_STATUS_CD,M.UPDATE_USER_TX,M.UPDATE_DT 


--6) TP Log writes and Counts for all Inbound and Outbound LFP Messages
SELECT DISTINCT TP.ID AS TP_ID, TP.EXTERNAL_ID_TX, TP.NAME_TX, DOC.NAME_TX,MSG.MSG_ID, TPL.LOG_MESSAGE, TPL.CREATE_DT, TPL.UPDATE_USER_TX, WI.ID AS WI_ID, TLC.LoanTxns as ImportedLoanTxns, PST.PLI_COUNT AS Posting_Count, PST.START_DT AS POST_START_DT, PST.END_DT AS POST_END_DT, PST.UPDATE_USER_TX AS POST_UPDATE_USER_TX
FROM TRADING_PARTNER TP
INNER JOIN DELIVERY_INFO DI ON TP.ID = DI.TRADING_PARTNER_ID
INNER JOIN #tmpLFPMSGIB MSG ON DI.ID = MSG.MSG_DELIVERY_INFO_ID
INNER JOIN TRADING_PARTNER_LOG TPL ON MSG.MSG_ID = TPL.MESSAGE_ID AND TPL.PROCESS_CD = 'MS'
INNER JOIN DOCUMENT DOC ON MSG.MSG_ID = DOC.MESSAGE_ID
LEFT JOIN WORK_ITEM WI ON MSG.MSG_ID = WI.RELATE_ID  AND WI.RELATE_TYPE_CD = 'LDHLib.Message'
LEFT JOIN #tmpLOANCOUNTS TLC ON MSG.MSG_ID = TLC.MESSAGE_ID
LEFT JOIN #tmpPOSTING PST ON MSG.MSG_ID = PST.IB_MESSAGE_ID
WHERE TP.TYPE_CD = 'LFP_TP' --AND TP.EXTERNAL_ID_TX = '5350'
ORDER BY TPL.CREATE_DT


--DROP TABLE #tmpLFPDI
--DROP TABLE #tmpLFPMSGIB
--DROP TABLE #tmpOBMessages
--DROP TABLE #tmpLOANCOUNTS
--DROP TABLE #tmpPOSTING


--7) Inbound Currently Processing
SELECT 'INBOUND' as 'DIRECTION', TP.EXTERNAL_ID_TX,      TP.NAME_TX,        WI.ID AS WI_ID ,  M.* 
FROM message M (NOLOCK) 
JOIN TRADING_PARTNER TP (NOLOCK) ON M.RECEIVED_FROM_TRADING_PARTNER_ID = TP.ID 
JOIN DELIVERY_INFO DI ON M.DELIVERY_INFO_ID = DI.id 
JOIN RELATED_DATA RD ON DI.id = RD.RELATE_ID 
JOIN RELATED_DATA_DEF RDD ON RDD.id = RD.DEF_ID 
LEFT JOIN WORK_ITEM WI ON WI.RELATE_ID = M.ID AND WI.WORKFLOW_DEFINITION_ID = 1
WHERE M.PROCESSED_IN = 'N' AND M.RECEIVED_STATUS_CD = 'RCVD' AND M.MESSAGE_DIRECTION_CD = 'I' and TYPE_CD = 'LFP_TP' AND RDD.NAME_TX = 'UniTracDeliveryType' and m.DELIVER_TO_TRADING_PARTNER_ID = '2046' AND rd.VALUE_TX = 'IMPORT' AND M.PURGE_DT IS null
ORDER BY M.ID, EXTERNAL_ID_TX

--8) Outbound Currently Processing (within past 5 mins)

SELECT DISTINCT 'OUTBOUND' as 'DIRECTION', TP.EXTERNAL_ID_TX,      TP.NAME_TX,        WI.ID AS WI_ID ,  M.ID, M.RELATE_ID_TX ,PLI.UPDATE_USER_TX,MAX(PLI.CREATE_DT) as LAST_UPDATE_DT,MIN(PLI.CREATE_DT) as INITIAL_UPDATE_DT
FROM MESSAGE M
JOIN TRADING_PARTNER TP (NOLOCK) ON M.RECEIVED_FROM_TRADING_PARTNER_ID = TP.ID 
LEFT JOIN WORK_ITEM WI ON WI.RELATE_ID = M.RELATE_ID_TX AND WI.WORKFLOW_DEFINITION_ID = 1
     CROSS APPLY wi.CONTENT_XML.nodes('/Content/Information/ProcessLogs/ProcessLog') AS P (TAB) 
     JOIN PROCESS_LOG_ITEM PLI (NOLOCK) ON (P.TAB.value('@Id', 'BIGINT') = PLI.PROCESS_LOG_ID AND PLI.RELATE_TYPE_CD = 'Allied.UniTrac.Loan') 
WHERE MESSAGE_DIRECTION_CD = 'O' and TYPE_CD = 'LFP_TP'
AND M.PROCESSED_IN = 'N'
AND PLI.CREATE_DT >= DATEADD(m, -5,getdate())
GROUP BY M.ID,M.RELATE_ID_TX,TP.EXTERNAL_ID_TX,TP.NAME_TX,WI.ID,PLI.UPDATE_USER_TX

