<?xml version="1.0" encoding="utf-8"?>
<helpItems schema="maml">
  <!--Get-AppLockerFileInformation -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>
        Get-AppLockerFileInformation
      </command:name>
      <maml:description>
        <maml:para>Gets the AppLocker file information from a list of files or an event log.</maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para></maml:para>
      </maml:copyright>
      <command:verb>Get</command:verb>
      <command:noun>AppLockerFileInformation</command:noun>
      <dev:version></dev:version>
    </command:details>
    <maml:description>
      <maml:para>The Get-AppLockerFileInformation cmdlet retrieves the AppLocker file information from a list of files or from an event log. File information that is retrieved can include publisher information, file hash information, and file path information. File information from an event log may not contain all of these fields. Files that are not signed do not have any publisher information.</maml:para>
    </maml:description>
    <!-- Cmdlet syntax section-->
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-AppLockerFileInformation</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="0">
          <maml:name>Path</maml:name>
          <maml:description>
            <maml:para>List of paths to the files from which the file information is retrieved. Supports regular expressions.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Get-AppLockerFileInformation</maml:name>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1">
          <maml:name>Directory</maml:name>
          <maml:description>
            <maml:para>Specifies the directory containing the files from which the file information is retrieved. To search all subfolders and files in the directory, include the Recurse parameter.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>FileType</maml:name>
          <maml:description>
            <maml:para>Specifies the generic file type to search for. The file type options are: Exe, Script, WindowsInstaller, or Dll.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">AppLockerFileType[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Recurse</maml:name>
          <maml:description>
            <maml:para>Searches all subfolders and files in the directory specified by the Directory parameter.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Get-AppLockerFileInformation</maml:name>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>EventLog</maml:name>
          <maml:description>
            <maml:para>Specifies that the file information is retrieved from an event log.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>LogPath</maml:name>
          <maml:description>
            <maml:para>Specifies the log name or file path of the event log where the AppLocker events are located. If this parameter is not specified, the local Microsoft-Windows-AppLocker/EXE and DLL channel is used by default.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>EventType</maml:name>
          <maml:description>
            <maml:para>Filters the AppLocker events by the event type. The event type options are: Allowed, Denied, or Audited. The event types correspond to the Informational, Error, and Warning level events in the AppLocker event logs.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">AppLockerEventType[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Statistics</maml:name>
          <maml:description>
            <maml:para>Provides the number of times that a file is listed in the event log after applying the optional filters.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <!-- Cmdlet parameter section  -->
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
        <maml:name>Path</maml:name>
        <maml:description>
          <maml:para>List of paths to the files from which the file information is retrieved. Supports regular expressions.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri/>
        </dev:type>
        <dev:defaultValue></dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1">
        <maml:name>Directory</maml:name>
        <maml:description>
          <maml:para>Specifies the directory containing the files from which the file information is retrieved. To search all subfolders and files in the directory, include the Recurse parameter.</maml:para>

        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri/>
        </dev:type>
        <dev:defaultValue></dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>FileType</maml:name>
        <maml:description>
          <maml:para>Specifies the generic file type to search for. The file type options are: Exe, Script, WindowsInstaller, or Dll.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">AppLockerFileType[]</command:parameterValue>
        <dev:type>
          <maml:name>AppLockerFileType[]</maml:name>
          <maml:uri/>
        </dev:type>
        <dev:defaultValue>Exe, Script, WindowsInstaller, Dll</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Recurse</maml:name>
        <maml:description>
          <maml:para>Searches all subfolders and files in the directory specified by the Directory parameter.</maml:para>

        </maml:description>
        <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
        <dev:type>
          <maml:name>Boolean</maml:name>
          <maml:uri/>
        </dev:type>
        <dev:defaultValue></dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>EventLog</maml:name>
        <maml:description>
          <maml:para>Specifies that the file information is retrieved from an event log.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
        <dev:type>
          <maml:name>Boolean</maml:name>
          <maml:uri/>
        </dev:type>
        <dev:defaultValue></dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>LogPath</maml:name>
        <maml:description>
          <maml:para>Specifies the log name or file path of the event log where the AppLocker events are located. If this parameter is not specified, the local Microsoft-Windows-AppLocker/EXE and DLL channel is used by default.</maml:para>

        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri/>
        </dev:type>
        <dev:defaultValue>Microsoft-Windows-AppLocker/EXE and DLL</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>EventType</maml:name>
        <maml:description>
          <maml:para>Filters the AppLocker events by the event type. The event type options are: Allowed, Denied, or Audited. The event types correspond to the Informational, Error, and Warning level events in the AppLocker event logs.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">AppLockerEventType[]</command:parameterValue>
        <dev:type>
          <maml:name>AppLockerEventType[]</maml:name>
          <maml:uri/>
        </dev:type>
        <dev:defaultValue>Allowed, Denied, Audited</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Statistics</maml:name>
        <maml:description>
          <maml:para>Provides the number of times that a file is listed in the event log after applying the optional filters.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
        <dev:type>
          <maml:name>Boolean</maml:name>
          <maml:uri/>
        </dev:type>
        <dev:defaultValue></dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <!-- Input - Output section-->
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name></maml:name>
          <maml:uri/>
          <maml:description>
            <maml:para>
              <!-- description  -->

            </maml:para>
          </maml:description>
        </dev:type>
        <maml:description></maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>FileInformation[]</maml:name>
          <maml:uri/>
          <maml:description>
            <maml:para>
              <!-- description  -->

            </maml:para>
          </maml:description>
        </dev:type>
        <maml:description></maml:description>
      </command:returnValue>
    </command:returnValues>
    <!-- Notes section  -->
    <maml:alertSet>
      <maml:title></maml:title>
      <maml:alert>
        <maml:para>

        </maml:para>
      </maml:alert>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <!-- Example section  -->
    <!-- Example section  -->
    <command:examples>

      <command:example>
        <maml:title>
          -------------------------- EXAMPLE 1 --------------------------
        </maml:title>
        <maml:introduction>
          <maml:para>C:\PS&gt;</maml:para>
        </maml:introduction>
        <dev:code>Get-AppLockerFileInformation -Directory C:\Windows\System32\ -Recurse -FileType Exe, Script</dev:code>
        <dev:remarks>
          <maml:para>Gets the file information for all of the executable files and scripts in the directory C:\Windows\System32.</maml:para>
          <maml:para></maml:para>
          <maml:para></maml:para>
          <maml:para></maml:para>
          <maml:para></maml:para>
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText></command:commandText>
          </command:commandLine>
        </command:commandLines>
      </command:example>

      <command:example>
        <maml:title>
          -------------------------- EXAMPLE 2 --------------------------
        </maml:title>
        <maml:introduction>
          <maml:para>C:\PS&gt;</maml:para>
        </maml:introduction>
        <dev:code>Get-AppLockerFileInformation -Path "C:\Program Files\Microsoft Office\Winword.exe"</dev:code>
        <dev:remarks>
          <maml:para>Gets the file information for the Winword.exe file in the path C:\Program Files\Microsoft Office\.</maml:para>
          <maml:para></maml:para>
          <maml:para></maml:para>
          <maml:para></maml:para>
          <maml:para></maml:para>
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText></command:commandText>
          </command:commandLine>
        </command:commandLines>
      </command:example>

      <command:example>
        <maml:title>
          -------------------------- EXAMPLE 3 --------------------------
        </maml:title>
        <maml:introduction>
          <maml:para>C:\PS&gt;</maml:para>
        </maml:introduction>
        <dev:code>Get-AppLockerFileInformation -EventLog -LogPath "Microsoft-Windows-AppLocker/EXE and DLL" -EventType Audited</dev:code>
        <dev:remarks>
          <maml:para>Gets the file information for all of the audited events in the local Microsoft-Windows-AppLocker/EXE and DLL AppLocker event log.</maml:para>
          <maml:para></maml:para>
          <maml:para></maml:para>
          <maml:para></maml:para>
          <maml:para></maml:para>
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText></command:commandText>
          </command:commandLine>
        </command:commandLines>
      </command:example>

      <command:example>
        <maml:title>
          -------------------------- EXAMPLE 4 --------------------------
        </maml:title>
        <maml:introduction>
          <maml:para>C:\PS&gt;</maml:para>
        </maml:introduction>
        <dev:code>Get-AppLockerFileInformation -EventLog -LogPath "Microsoft-Windows-AppLocker/MSI and Script" -EventType Allowed -Statistics</dev:code>
        <dev:remarks>
          <maml:para>Gets the statistics for all of the allowed script events in the local Microsoft-Windows-AppLocker/MSI and Script event log. The cmdlet provides the number of times that a script or Windows Installer file is listed in the event log.</maml:para>
          <maml:para></maml:para>
          <maml:para></maml:para>
          <maml:para></maml:para>
          <maml:para></maml:para>
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText></command:commandText>
          </command:commandLine>
        </command:commandLines>
      </command:example>

      <command:example>
        <maml:title>
          -------------------------- EXAMPLE 5 --------------------------
        </maml:title>
        <maml:introduction>
          <maml:para>C:\PS&gt;</maml:para>
        </maml:introduction>
        <dev:code>Get-AppLockerFileInformation -EventLog -LogPath "Microsoft-Windows-AppLocker/EXE and DLL" -EventType Audited | New-AppLockerPolicy -RuleType Publisher, Hash, Path -User Everyone | Set-AppLockerPolicy -LDAP "LDAP://DC13.Contoso.com/CN={31B2F340-016D-11D2-945F-00C04FB984F9},CN=Policies,CN=System,DC=Contoso,DC=com"</dev:code>
        <dev:remarks>
          <maml:para>Gets the file information from all of the audited events in the local Microsoft-Windows-AppLocker/EXE and DLL event log, creates a new AppLocker policy for the files from the audited events, and then sets the AppLocker policy for the specified Group Policy Object (GPO).</maml:para>
          <maml:para></maml:para>
          <maml:para></maml:para>
          <maml:para></maml:para>
          <maml:para></maml:para>
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText></command:commandText>
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>

    <!-- Link section  -->
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online version:</maml:linkText>
        <maml:uri>http://go.microsoft.com/fwlink/?LinkID=144109</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-AppLockerPolicy</maml:linkText>
        <maml:uri/>
      </maml:navigationLink>

      <maml:navigationLink>
        <maml:linkText>Get-AppLockerPolicy</maml:linkText>
        <maml:uri/>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Set-AppLockerPolicy</maml:linkText>
        <maml:uri/>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-AppLockerPolicy</maml:linkText>
        <maml:uri/>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Test-AppLockerPolicy</maml:linkText>
        <maml:uri/>
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <!-- Get-AppLockerPolicy -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>
        Get-AppLockerPolicy
      </command:name>
      <maml:description>
        <maml:para>Gets the local, effective, or domain AppLocker policy.</maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para></maml:para>
      </maml:copyright>
      <command:verb>Get</command:verb>
      <command:noun>AppLockerPolicy</command:noun>
      <dev:version></dev:version>
    </command:details>
    <maml:description>
      <maml:para>
        The Get-AppLockerPolicy cmdlet gets the AppLocker policy from the local Group Policy object (GPO), from a specified GPO, or from the effective AppLocker policy on the computer. The output is an AppLockerPolicy object or an XML-formatted string.
      </maml:para>
    </maml:description>
    <!-- Cmdlet syntax section-->
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-AppLockerPolicy</maml:name>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Local</maml:name>
          <maml:description>
            <maml:para>Gets the AppLocker policy from the local GPO.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>XML</maml:name>
          <maml:description>
            <maml:para>Specifies that the AppLocker policy be output as an XML-formatted string.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Get-AppLockerPolicy</maml:name>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Domain</maml:name>
          <maml:description>
            <maml:para>Gets the AppLocker policy from the GPO that is specified by the path in the LDAP parameter.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>LDAP</maml:name>
          <maml:description>
            <maml:para>The LDAP path of the Group Policy object. Must specify a unique GPO.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>XML</maml:name>
          <maml:description>
            <maml:para>Specifies that the AppLocker policy be output as an XML-formatted string.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Get-AppLockerPolicy</maml:name>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Effective</maml:name>
          <maml:description>
            <maml:para>Gets the effective AppLocker policy on the local computer. The effective policy is the merge of the local AppLocker policy and any applied domain policies on the local computer.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>XML</maml:name>
          <maml:description>
            <maml:para>Specifies that the AppLocker policy be output as an XML-formatted string.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <!-- Cmdlet parameter section  -->
    <command:parameters>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Local</maml:name>
        <maml:description>
          <maml:para>Gets the AppLocker policy from the local GPO.</maml:para>

        </maml:description>
        <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
        <dev:type>
          <maml:name>Boolean</maml:name>
          <maml:uri/>
        </dev:type>
        <dev:defaultValue></dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Domain</maml:name>
        <maml:description>
          <maml:para>Gets the AppLocker policy from the GPO that is specified by the path in the LDAP parameter.</maml:para>

        </maml:description>
        <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
        <dev:type>
          <maml:name>Boolean</maml:name>
          <maml:uri/>
        </dev:type>
        <dev:defaultValue></dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Effective</maml:name>
        <maml:description>
          <maml:para>Gets the effective AppLocker policy on the local computer. The effective policy is the merge of the local AppLocker policy and any applied domain policies on the local computer.</maml:para>

        </maml:description>
        <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
        <dev:type>
          <maml:name>Boolean</maml:name>
          <maml:uri/>
        </dev:type>
        <dev:defaultValue></dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>LDAP</maml:name>
        <maml:description>
          <maml:para>The LDAP path of the Group Policy object. Must specify a unique GPO.</maml:para>

        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri/>
        </dev:type>
        <dev:defaultValue></dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>XML</maml:name>
        <maml:description>
          <maml:para>Specifies that the AppLocker policy be output as an XML-formatted string.</maml:para>

        </maml:description>
        <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
        <dev:type>
          <maml:name>Boolean</maml:name>
          <maml:uri/>
        </dev:type>
        <dev:defaultValue></dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <!-- Input - Output section-->
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name></maml:name>
          <maml:uri/>
          <maml:description>
            <maml:para>
              <!-- description  -->

            </maml:para>
          </maml:description>
        </dev:type>
        <maml:description></maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>By default, Get-AppLockerPolicy returns an AppLockerPolicy object. If you use the XML parameter, it will return the AppLocker policy as an XML-formatted string.</maml:name>
          <maml:uri/>
          <maml:description>
            <maml:para>

            </maml:para>
          </maml:description>
        </dev:type>
        <maml:description></maml:description>
      </command:returnValue>
    </command:returnValues>
    <!-- Notes section  -->
    <maml:alertSet>
      <maml:title></maml:title>
      <maml:alert>
        <maml:para>

        </maml:para>
      </maml:alert>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <!-- Example section  -->
    <command:examples>

      <command:example>
        <maml:title>
          -------------------------- EXAMPLE 1 --------------------------
        </maml:title>
        <maml:introduction>
          <maml:para>C:\PS&gt;</maml:para>
        </maml:introduction>
        <dev:code>Get-AppLockerPolicy -Local</dev:code>
        <dev:remarks>
          <maml:para>Gets the local AppLocker policy as an AppLockerPolicy object.</maml:para>
          <maml:para></maml:para>
          <maml:para></maml:para>
          <maml:para></maml:para>
          <maml:para></maml:para>
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText></command:commandText>
          </command:commandLine>
        </command:commandLines>
      </command:example>

      <command:example>
        <maml:title>
          -------------------------- EXAMPLE 2 --------------------------
        </maml:title>
        <maml:introduction>
          <maml:para>C:\PS&gt;</maml:para>
        </maml:introduction>
        <dev:code>Get-AppLockerPolicy -Domain -LDAP "LDAP://DC13.Contoso.com/CN={31B2F340-016D-11D2-945F-00C04FB984F9},CN=Policies,CN=System,DC=Contoso,DC=com" </dev:code>
        <dev:remarks>
          <maml:para>Gets the AppLocker policy of the unique GPO specified by the LDAP path as an AppLockerPolicy object.</maml:para>
          <maml:para></maml:para>
          <maml:para></maml:para>
          <maml:para></maml:para>
          <maml:para></maml:para>
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText></command:commandText>
          </command:commandLine>
        </command:commandLines>
      </command:example>

      <command:example>
        <maml:title>
          -------------------------- EXAMPLE 3 --------------------------
        </maml:title>
        <maml:introduction>
          <maml:para>C:\PS&gt;</maml:para>
        </maml:introduction>
        <dev:code>Get-AppLockerPolicy -Effective -XML &gt; C:\temp\Effective.xml</dev:code>
        <dev:remarks>
          <maml:para>Gets the effective policy on the computer, and then sends it in XML format to the specified file.</maml:para>
          <maml:para></maml:para>
          <maml:para></maml:para>
          <maml:para></maml:para>
          <maml:para></maml:para>
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText></command:commandText>
          </command:commandLine>
        </command:commandLines>
      </command:example>

      <command:example>
        <maml:title>
          -------------------------- EXAMPLE 4 --------------------------
        </maml:title>
        <maml:introduction>
          <maml:para>C:\PS&gt;</maml:para>
        </maml:introduction>
        <dev:code>Get-AppLockerPolicy -Local | Test-AppLockerPolicy -Path C:\Windows\System32\*.exe -User Everyone</dev:code>
        <dev:remarks>
          <maml:para>Gets the local AppLocker policy on the computer, and then tests the policy using Test-AppLockerPolicy to test whether the executables in C:\Windows\System32 will be allowed to run by the Everyone group.</maml:para>
          <maml:para></maml:para>
          <maml:para></maml:para>
          <maml:para></maml:para>
          <maml:para></maml:para>
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText></command:commandText>
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>
    <!-- Link section  -->
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online version:</maml:linkText>
        <maml:uri>http://go.microsoft.com/fwlink/?LinkID=144111</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Set-AppLockerPolicy</maml:linkText>
        <maml:uri/>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-AppLockerPolicy</maml:linkText>
        <maml:uri/>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Test-AppLockerPolicy</maml:linkText>
        <maml:uri/>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-AppLockerFileInformation</maml:linkText>
        <maml:uri/>
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <!-- Set-AppLockerPolicy -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>
        Set-AppLockerPolicy
      </command:name>
      <maml:description>
        <maml:para>Sets the AppLocker policy for the specified Group Policy object (GPO).</maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para></maml:para>
      </maml:copyright>
      <command:verb>Set</command:verb>
      <command:noun>AppLockerPolicy</command:noun>
      <dev:version></dev:version>
    </command:details>
    <maml:description>
      <maml:para>The Set-AppLockerPolicy cmdlet sets the specified GPO to contain the specified AppLocker policy. If no Lightweight Directory Access Protocol (LDAP) path is specified, the local GPO is the default setting. If the Merge parameter is not specified, the existing AppLocker policy in the target GPO will be overwritten by the new policy.</maml:para>
    </maml:description>
    <!-- Cmdlet syntax section-->
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Set-AppLockerPolicy</maml:name>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0">
          <maml:name>XMLPolicy</maml:name>
          <maml:description>
            <maml:para>Specifies the path where the AppLocker policy XML file is saved.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>LDAP</maml:name>
          <maml:description>
            <maml:para>Specifies the LDAP path of the GPO. It must specify a unique GPO. If this parameter is not specified, the local AppLocker policy is set.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Merge</maml:name>
          <maml:description>
            <maml:para>When the Merge parameter is used, rules in the specified AppLocker policy will be merged with the AppLocker rules in the target GPO specified in the LDAP path. The merging of policies will remove rules with duplicate rule IDs, and the enforcement setting specified by the AppLocker policy in the target GPO will be preserved. If the Merge parameter is not specified, then the new policy will overwrite the existing policy.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Confirm</maml:name>
          <maml:description>
            <maml:para>Prompts you for confirmation before executing the command.</maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>WhatIf</maml:name>
          <maml:description>
            <maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
          </maml:description>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Set-AppLockerPolicy</maml:name>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="0">
          <maml:name>PolicyObject</maml:name>
          <maml:description>
            <maml:para>Specifies the AppLockerPolicy object that contains the AppLocker policy. It can be obtained from Get-AppLockerPolicy and New-AppLockerPolicy.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">AppLockerPolicy</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>LDAP</maml:name>
          <maml:description>
            <maml:para>Specifies the LDAP path of the GPO. It must specify a unique GPO. If this parameter is not specified, the local AppLocker policy is set.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Merge</maml:name>
          <maml:description>
            <maml:para>When the Merge parameter is used, rules in the specified AppLocker policy will be merged with the AppLocker rules in the target GPO specified in the LDAP path. The merging of policies will remove rules with duplicate rule IDs, and the enforcement setting specified by the AppLocker policy in the target GPO will be preserved. If the Merge parameter is not specified, then the new policy will overwrite the existing policy.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Confirm</maml:name>
          <maml:description>
            <maml:para>Prompts you for confirmation before executing the command.</maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>WhatIf</maml:name>
          <maml:description>
            <maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
          </maml:description>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <!-- Cmdlet parameter section  -->
    <command:parameters>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0">
        <maml:name>XMLPolicy</maml:name>
        <maml:description>
          <maml:para>Specifies the path where the AppLocker policy XML file is saved.</maml:para>

        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri/>
        </dev:type>
        <dev:defaultValue></dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="0">
        <maml:name>PolicyObject</maml:name>
        <maml:description>
          <maml:para>Specifies the AppLockerPolicy object that contains the AppLocker policy. It can be obtained from Get-AppLockerPolicy and New-AppLockerPolicy.</maml:para>

        </maml:description>
        <command:parameterValue required="true" variableLength="false">AppLockerPolicy</command:parameterValue>
        <dev:type>
          <maml:name>AppLockerPolicy</maml:name>
          <maml:uri/>
        </dev:type>
        <dev:defaultValue></dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>LDAP</maml:name>
        <maml:description>
          <maml:para>Specifies the LDAP path of the GPO. It must specify a unique GPO. If this parameter is not specified, the local AppLocker policy is set.</maml:para>

        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri/>
        </dev:type>
        <dev:defaultValue></dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Merge</maml:name>
        <maml:description>
          <maml:para>When the Merge parameter is used, rules in the specified AppLocker policy will be merged with the AppLocker rules in the target GPO specified in the LDAP path. The merging of policies will remove rules with duplicate rule IDs, and the enforcement setting specified by the AppLocker policy in the target GPO will be preserved. If the Merge parameter is not specified, then the new policy will overwrite the existing policy.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
        <dev:type>
          <maml:name>Boolean</maml:name>
          <maml:uri/>
        </dev:type>
        <dev:defaultValue></dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>Confirm</maml:name>
        <maml:description>
          <maml:para>Prompts you for confirmation before executing the command.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri/>
        </dev:type>
        <dev:defaultValue/>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>WhatIf</maml:name>
        <maml:description>
          <maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri/>
        </dev:type>
        <dev:defaultValue/>
      </command:parameter>
    </command:parameters>
    <!-- Input - Output section-->
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>Set-AppLockerPolicy can take the AppLocker policy as an AppLockerPolicy object or as an XML file containing AppLocker policy.</maml:name>
          <maml:uri/>
          <maml:description>
            <maml:para>
              <!-- description  -->

            </maml:para>
          </maml:description>
        </dev:type>
        <maml:description></maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name></maml:name>
          <maml:uri/>
          <maml:description>
            <maml:para>
              <!-- description  -->

            </maml:para>
          </maml:description>
        </dev:type>
        <maml:description></maml:description>
      </command:returnValue>
    </command:returnValues>
    <!-- Notes section  -->
    <maml:alertSet>
      <maml:title></maml:title>
      <maml:alert>
        <maml:para>

        </maml:para>
      </maml:alert>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <!-- Example section  -->
    <command:examples>

      <command:example>
        <maml:title>
          -------------------------- EXAMPLE 1 --------------------------
        </maml:title>
        <maml:introduction>
          <maml:para>C:\PS&gt;</maml:para>
        </maml:introduction>
        <dev:code>Set-AppLockerPolicy -XMLPolicy C:\Policy.xml</dev:code>
        <dev:remarks>
          <maml:para>Sets the local AppLocker policy to the policy specified in C:\Policy.xml.</maml:para>
          <maml:para></maml:para>
          <maml:para></maml:para>
          <maml:para></maml:para>
          <maml:para></maml:para>
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText></command:commandText>
          </command:commandLine>
        </command:commandLines>
      </command:example>

      <command:example>
        <maml:title>
          -------------------------- EXAMPLE 2 --------------------------
        </maml:title>
        <maml:introduction>
          <maml:para>C:\PS&gt;</maml:para>
        </maml:introduction>
        <dev:code>Set-AppLockerPolicy -XMLPolicy C:\Policy.xml -LDAP "LDAP://DC13.Contoso.com/CN={31B2F340-016D-11D2-945F-00C04FB984F9},CN=Policies,CN=System,DC=Contoso,DC=com"</dev:code>
        <dev:remarks>
          <maml:para>Sets the GPO specified in the LDAP path to contain the AppLocker policy that is specified in C:\Policy.xml.</maml:para>
          <maml:para></maml:para>
          <maml:para></maml:para>
          <maml:para></maml:para>
          <maml:para></maml:para>
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText></command:commandText>
          </command:commandLine>
        </command:commandLines>
      </command:example>

      <command:example>
        <maml:title>
          -------------------------- EXAMPLE 3 --------------------------
        </maml:title>
        <maml:introduction>
          <maml:para>C:\PS&gt;</maml:para>
        </maml:introduction>
        <dev:code>Get-AppLockerPolicy -Local | Set-AppLockerPolicy -LDAP "LDAP://DC13.Contoso.com/CN={31B2F340-016D-11D2-945F-00C04FB984F9},CN=Policies,CN=System,DC=Contoso,DC=com" -Merge</dev:code>
        <dev:remarks>
          <maml:para>Gets the local AppLocker policy, and then merges the policy with the existing AppLocker policy in the GPO specified in the LDAP path. See the Merge parameter description for more details on how two policies are merged.</maml:para>
          <maml:para></maml:para>
          <maml:para></maml:para>
          <maml:para></maml:para>
          <maml:para></maml:para>
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText></command:commandText>
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>
    <!-- Link section  -->
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online version:</maml:linkText>
        <maml:uri>http://go.microsoft.com/fwlink/?LinkID=144110</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-AppLockerPolicy</maml:linkText>
        <maml:uri/>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-AppLockerPolicy</maml:linkText>
        <maml:uri/>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Test-AppLockerPolicy</maml:linkText>
        <maml:uri/>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-AppLockerFileInformation</maml:linkText>
        <maml:uri/>
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <!-- New-AppLockerPolicy -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>
        New-AppLockerPolicy
      </command:name>
      <maml:description>
        <maml:para>Creates a new AppLocker policy from a list of file information and other rule-creation options.</maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para></maml:para>
      </maml:copyright>
      <command:verb>New</command:verb>
      <command:noun>AppLockerPolicy</command:noun>
      <dev:version></dev:version>
    </command:details>
    <maml:description>
      <maml:para>The New-AppLockerPolicy cmdlet uses a list of file information to automatically generate rules for a given user or group. It can generate rules based on publisher, hash, or path information. Use Get-AppLockerFileInformation to create the list of file information.</maml:para>
    </maml:description>
    <!-- Cmdlet syntax section-->
    <command:syntax>
      <command:syntaxItem>
        <maml:name>New-AppLockerPolicy</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="0">
          <maml:name>FileInformation</maml:name>
          <maml:description>
            <maml:para>A file can contain publisher, path, and hash information. Some information may be missing, such as publisher information for an unsigned file.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">FileInformation[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>RuleType</maml:name>
          <maml:description>
            <maml:para>Specifies the type of rules to create from the file information.  Publisher, path, or hash rules can be created from the file information. Multiple rule types may be specified so that there are backup rule types if the necessary file information is not available. For example, you can specify -RuleType Publisher, Hash so that hash rules are applied when publisher information is not available. Publisher, Hash is the default value.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">RuleType[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>RuleNamePrefix</maml:name>
          <maml:description>
            <maml:para>Specifies a name to add as a prefix to each rule that is created.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>User</maml:name>
          <maml:description>
            <maml:para>
              Defines the user or group that the rules are applied to. You must provide the value in one of the following formats:
              DNS user name (domain\username)
              User Principal Name (username@domain.com)
              SAM user name (username)
              Security identifier (S-1-5-21-3165297888-301567370-576410423-1103)
            </maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Optimize</maml:name>
          <maml:description>
            <maml:para>Instructs similar rules to be grouped together.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IgnoreMissingFileInformation</maml:name>
          <maml:description>
            <maml:para>Instructs the cmdlet to continue to execute if a rule cannot be created for a file because file information is missing. A warning log of the files skipped is generated.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>XML</maml:name>
          <maml:description>
            <maml:para>Specifies the output of the new AppLocker policy as an XML-formatted string.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <!-- Cmdlet parameter section  -->
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="0">
        <maml:name>FileInformation</maml:name>
        <maml:description>
          <maml:para>A file can contain publisher, path, and hash information. Some information may be missing, such as publisher information for an unsigned file.</maml:para>

        </maml:description>
        <command:parameterValue required="true" variableLength="true">FileInformation[]</command:parameterValue>
        <dev:type>
          <maml:name>FileInformation[]</maml:name>
          <maml:uri/>
        </dev:type>
        <dev:defaultValue></dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>RuleType</maml:name>
        <maml:description>
          <maml:para>Specifies the type of rules to create from the file information.  Publisher, path, or hash rules can be created from the file information. Multiple rule types may be specified so that there are backup rule types if the necessary file information is not available. For example, you can specify -RuleType Publisher, Hash so that hash rules are applied when publisher information is not available. Publisher, Hash is the default value.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">RuleType[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri/>
        </dev:type>
        <dev:defaultValue>Publisher, Hash</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>RuleNamePrefix</maml:name>
        <maml:description>
          <maml:para>Specifies a name to add as a prefix to each rule that is created.</maml:para>

        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri/>
        </dev:type>
        <dev:defaultValue></dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>User</maml:name>
        <maml:description>
          <maml:para>
            Defines the user or group that the rules are applied to. You must provide the value in one of the following formats:
            DNS user name (domain\username)
            User Principal Name (username@domain.com)
            SAM user name (username)
            Security identifier (S-1-5-21-3165297888-301567370-576410423-1103)
          </maml:para>

        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri/>
        </dev:type>
        <dev:defaultValue>Everyone</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Optimize</maml:name>
        <maml:description>
          <maml:para>Instructs similar rules to be grouped together.</maml:para>

        </maml:description>
        <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
        <dev:type>
          <maml:name>Boolean</maml:name>
          <maml:uri/>
        </dev:type>
        <dev:defaultValue></dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>IgnoreMissingFileInformation</maml:name>
        <maml:description>
          <maml:para>Instructs the cmdlet to continue to execute if a rule cannot be created for a file because file information is missing. A warning log of the files skipped is generated.</maml:para>

        </maml:description>
        <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
        <dev:type>
          <maml:name>Boolean</maml:name>
          <maml:uri/>
        </dev:type>
        <dev:defaultValue></dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>XML</maml:name>
        <maml:description>
          <maml:para>Specifies the output of the new AppLocker policy as an XML-formatted string.</maml:para>

        </maml:description>
        <command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
        <dev:type>
          <maml:name>Boolean</maml:name>
          <maml:uri/>
        </dev:type>
        <dev:defaultValue></dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <!-- Input - Output section-->
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name></maml:name>
          <maml:uri/>
          <maml:description>
            <maml:para>
              <!-- description  -->

            </maml:para>
          </maml:description>
        </dev:type>
        <maml:description></maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>By default, New-AppLockerPolicy returns an AppLockerPolicy object. If you use the XML parameter, it will return the AppLocker policy as an XML string.</maml:name>
          <maml:uri/>
          <maml:description>
            <maml:para>
              <!-- description  -->

            </maml:para>
          </maml:description>
        </dev:type>
        <maml:description></maml:description>
      </command:returnValue>
    </command:returnValues>
    <!-- Notes section  -->
    <maml:alertSet>
      <maml:title></maml:title>
      <maml:alert>
        <maml:para>

        </maml:para>
      </maml:alert>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <!-- Example section  -->
    <command:examples>

      <command:example>
        <maml:title>
          -------------------------- EXAMPLE 1 --------------------------
        </maml:title>
        <maml:introduction>
          <maml:para>C:\PS&gt;</maml:para>
        </maml:introduction>
        <dev:code>Get-ChildItem C:\Windows\System32\*.exe | Get-AppLockerFileInformation | New-AppLockerPolicy -RuleType Publisher, Hash -User Everyone -RuleNamePrefix System32</dev:code>
        <dev:remarks>
          <maml:para>Creates an AppLocker policy containing allow rules for all of the executable files in C:\Windows\System32. The policy contains publisher rules for those files with publisher information and hash rules for those that do not.  The rules are prefixed with "System32:" and the rules apply to the Everyone group.</maml:para>
          <maml:para></maml:para>
          <maml:para></maml:para>
          <maml:para></maml:para>
          <maml:para></maml:para>
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText></command:commandText>
          </command:commandLine>
        </command:commandLines>
      </command:example>

      <command:example>
        <maml:title>
          -------------------------- EXAMPLE 2 --------------------------
        </maml:title>
        <maml:introduction>
          <maml:para>C:\PS&gt;</maml:para>
        </maml:introduction>
        <dev:code>Get-ChildItem C:\Windows\System32\*.exe | Get-AppLockerFileInformation | New-AppLockerPolicy -RuleType Path -User Everyone -Optimize -XML</dev:code>
        <dev:remarks>
          <maml:para>Creates an XML-formatted AppLocker policy for all of the executable files in C:\Windows\System32. The policy contains only path rules, the rules are applied to the Everyone group, and the Optimize parameter indicates that similar rules are grouped together where possible.</maml:para>
          <maml:para></maml:para>
          <maml:para></maml:para>
          <maml:para></maml:para>
          <maml:para></maml:para>
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText></command:commandText>
          </command:commandLine>
        </command:commandLines>
      </command:example>

      <command:example>
        <maml:title>
          -------------------------- EXAMPLE 3 --------------------------
        </maml:title>
        <maml:introduction>
          <maml:para>C:\PS&gt;</maml:para>
        </maml:introduction>
        <dev:code>Get-AppLockerFileInformation -EventLog -LogPath "Microsoft-Windows-AppLocker/EXE and DLL" -EventType Audited | New-AppLockerPolicy -RuleType Publisher,Hash -User domain\FinanceGroup -IgnoreMissingFileInformation | Set-AppLockerPolicy -LDAP "LDAP://DC13.TailspinToys.com/CN={31B2F340-016D-11D2-945F-00C04FB984F9},CN=Policies,CN=System,DC=WingTipToys,DC=com"</dev:code>
        <dev:remarks>
          <maml:para>Creates a new AppLocker policy from the audited events in the local Microsoft-Windows-AppLocker/EXE and DLL event log. All of the rules will be applied to the domain\FinanceGroup group. Publisher rules are created when the publisher information is available, and hash rules are created if the publisher information is not available. If only path information is available for a file, the file is skipped because the IgnoreMissingFileInformation parameter is specified, and the file is included in the warning log. If the IgnoreMissingFileInformation parameter is not specified, when file information is missing, the cmdlet exits because it cannot create the specified rule type. After the new AppLocker policy is created, the AppLocker policy of the specified Group Policy Object (GPO) is set. The existing AppLocker policy in the specified GPO will be overwritten.</maml:para>
          <maml:para></maml:para>
          <maml:para></maml:para>
          <maml:para></maml:para>
          <maml:para></maml:para>
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText></command:commandText>
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>
    <!-- Link section  -->
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online version:</maml:linkText>
        <maml:uri>http://go.microsoft.com/fwlink/?LinkID=144112</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-AppLockerPolicy</maml:linkText>
        <maml:uri/>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Set-AppLockerPolicy</maml:linkText>
        <maml:uri/>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Test-AppLockerPolicy</maml:linkText>
        <maml:uri/>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-AppLockerFileInformation</maml:linkText>
        <maml:uri/>
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <!-- Test-AppLockerPolicy -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>
        Test-AppLockerPolicy
      </command:name>
      <maml:description>
        <maml:para>Tests whether the input files are allowed to run for a given user based on the specified AppLocker policy.</maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para></maml:para>
      </maml:copyright>
      <command:verb>Test</command:verb>
      <command:noun>AppLockerPolicy</command:noun>
      <dev:version></dev:version>
    </command:details>
    <maml:description>
      <maml:para>The Test-AppLockerPolicy cmdlet uses the specified AppLocker policy to test whether a specified list of files are allowed to run on the local computer for a specific user.</maml:para>
    </maml:description>
    <!-- Cmdlet syntax section-->
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Test-AppLockerPolicy</maml:name>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="0">
          <maml:name>PolicyObject</maml:name>
          <maml:description>
            <maml:para>Specifies the policy object that contains the AppLocker policy. It can be obtained from Get-AppLockerPolicy or New-AppLockerPolicy.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">AppLockerPolicy</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Path</maml:name>
          <maml:description>
            <maml:para>Specifies the list of file paths to test. Supports regular expressions.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>User</maml:name>
          <maml:description>
            <maml:para>
              Defines the user or group to be used for testing the rules in the specified AppLocker policy. You must provide the value in one of the following formats:
              DNS user name (domain\username)
              User Principal Name (username@domain.com)
              SAM user name (username)
              Security identifier (S-1-5-21-3165297888-301567370-576410423-1103)
            </maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Filter</maml:name>
          <maml:description>
            <maml:para>Filters the output by the policy decision for each input file. The policy decision options include:  Allowed, Denied, DeniedByDefault, and AllowedByDefault. By default, all policy decisions are displayed.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">PolicyDecision[]</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Test-AppLockerPolicy</maml:name>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0">
          <maml:name>XMLPolicy</maml:name>
          <maml:description>
            <maml:para>The XML file path that contains AppLocker policy.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Path</maml:name>
          <maml:description>
            <maml:para>Specifies the list of file paths to test. Supports regular expressions.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>User</maml:name>
          <maml:description>
            <maml:para>
              Defines the user or group to be used for testing the rules in the specified AppLocker policy. You must provide the value in one of the following formats:
              DNS user name (domain\username)
              User Principal Name (username@domain.com)
              SAM user name (username)
              Security identifier (S-1-5-21-3165297888-301567370-576410423-1103)
            </maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Filter</maml:name>
          <maml:description>
            <maml:para>Filters the output by the policy decision for each input file. The policy decision options include:  Allowed, Denied, DeniedByDefault, and AllowedByDefault. By default, all policy decisions are displayed.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">PolicyDecision[]</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <!-- Cmdlet parameter section  -->
    <command:parameters>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
        <maml:name>PolicyObject</maml:name>
        <maml:description>
          <maml:para>Specifies the policy object that contains the AppLocker policy. It can be obtained from Get-AppLockerPolicy or New-AppLockerPolicy.</maml:para>

        </maml:description>
        <command:parameterValue required="true" variableLength="false">AppLockerPolicy</command:parameterValue>
        <dev:type>
          <maml:name>AppLockerObject</maml:name>
          <maml:uri/>
        </dev:type>
        <dev:defaultValue></dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1">
        <maml:name>XMLPolicy</maml:name>
        <maml:description>
          <maml:para>The XML file path that contains AppLocker policy.</maml:para>

        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri/>
        </dev:type>
        <dev:defaultValue></dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>Path</maml:name>
        <maml:description>
          <maml:para>Specifies the list of file paths to test. Supports regular expressions.</maml:para>

        </maml:description>
        <command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri/>
        </dev:type>
        <dev:defaultValue></dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>User</maml:name>
        <maml:description>
          <maml:para>
            Defines the user or group to be used for testing the rules in the specified AppLocker policy. You must provide the value in one of the following formats:
            DNS user name (domain\username)
            User Principal Name (username@domain.com)
            SAM user name (username)
            Security identifier (S-1-5-21-3165297888-301567370-576410423-1103)
          </maml:para>

        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri/>
        </dev:type>
        <dev:defaultValue>Everyone</dev:defaultValue>
      </command:parameter>

      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Filter</maml:name>
        <maml:description>
          <maml:para>Filters the output by the policy decision for each input file. The policy decision options include:  Allowed, Denied, DeniedByDefault, and AllowedByDefault. By default, all policy decisions are displayed.</maml:para>

        </maml:description>
        <command:parameterValue required="true" variableLength="false">PolicyDecision[]</command:parameterValue>
        <dev:type>
          <maml:name>PolicyDecision</maml:name>
          <maml:uri/>
        </dev:type>
        <dev:defaultValue>Allowed, Denied, DeniedByDefault, AllowedByDefault</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <!-- Input - Output section-->
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name></maml:name>
          <maml:uri/>
          <maml:description>
            <maml:para>
              <!-- description  -->

            </maml:para>
          </maml:description>
        </dev:type>
        <maml:description></maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>AppLockerPolicyDecision</maml:name>
          <maml:uri/>
          <maml:description>
            <maml:para>
              <!-- description  -->

            </maml:para>
          </maml:description>
        </dev:type>
        <maml:description></maml:description>
      </command:returnValue>
    </command:returnValues>
    <!-- Notes section  -->
    <maml:alertSet>
      <maml:title></maml:title>
      <maml:alert>
        <maml:para>To test AppLocker rules for a nested group, you should specify a representative member of the nested group for the User parameter. For example, a rule that allows the Everyone group to run calc.exe may not appear to apply correctly when you specify the nested Finance group for the User parameter. Instead, you should specify a representative member of the Finance group for the User parameter.</maml:para>
      </maml:alert>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <!-- Example section  -->
    <command:examples>

      <command:example>
        <maml:title>
          -------------------------- EXAMPLE 1 --------------------------
        </maml:title>
        <maml:introduction>
          <maml:para>C:\PS&gt;</maml:para>
        </maml:introduction>
        <dev:code>Test-AppLockerPolicy -XMLPath C:\Policy.xml -Path C:\Windows\System32\calc.exe,  C:\Windows\System32\notepad.exe -User Everyone</dev:code>
        <dev:remarks>
          <maml:para>Uses the AppLocker policy in C:\Policy.xml to test whether calc.exe and notepad.exe are allowed to run for users who are members of the Everyone group. If you do not specify a group, the Everyone group is used by default.</maml:para>
          <maml:para></maml:para>
          <maml:para></maml:para>
          <maml:para></maml:para>
          <maml:para></maml:para>
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText></command:commandText>
          </command:commandLine>
        </command:commandLines>
      </command:example>

      <command:example>
        <maml:title>
          -------------------------- EXAMPLE 2 --------------------------
        </maml:title>
        <maml:introduction>
          <maml:para>C:\PS&gt;</maml:para>
        </maml:introduction>
        <dev:code>Get-ChildItem C:\Windows\System32 -filter *.exe -recurse | Convert-Path | Test-AppLockerPolicy c:\Policy.xml -User S-1-5-21-3165297888-301567370-576410423-1103 -Filter DeniedByDefault</dev:code>
        <dev:remarks>
          <maml:para>Gets the list of all executable files under C:\Windows\System32, obtains the full path for each file using the Convert-Path cmdlet, and then uses the AppLocker policy specified in C:\Policy.xml to test whether the user with the specified SID is denied access to run the files by default. A policy decision of DeniedByDefault occurs when there are rules in the rule collection, but there are no explicit allow or deny rule that apply to the specified file and user.</maml:para>
          <maml:para></maml:para>
          <maml:para></maml:para>
          <maml:para></maml:para>
          <maml:para></maml:para>
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText></command:commandText>
          </command:commandLine>
        </command:commandLines>
      </command:example>

      <command:example>
        <maml:title>
          -------------------------- EXAMPLE 3 --------------------------
        </maml:title>
        <maml:introduction>
          <maml:para>C:\PS&gt;</maml:para>
        </maml:introduction>
        <dev:code>Get-AppLockerPolicy -Local | Test-AppLockerPolicy -Path C:\Windows\System32\*.exe -User domain\saradavis -Filter Denied | Format-List -Property Path &gt; C:\DeniedFiles.txt</dev:code>
        <dev:remarks>
          <maml:para>Gets the local AppLocker policy, uses the policy to determine which executables in C:\Windows\System32 Sara Davis is explicitly denied access to run, and then redirects the list to a text file.</maml:para>
          <maml:para></maml:para>
          <maml:para></maml:para>
          <maml:para></maml:para>
          <maml:para></maml:para>
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText></command:commandText>
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>

    <!-- Link section  -->

    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online version:</maml:linkText>
        <maml:uri>http://go.microsoft.com/fwlink/?LinkID=144113</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-AppLockerPolicy</maml:linkText>
        <maml:uri/>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Set-AppLockerPolicy</maml:linkText>
        <maml:uri/>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-AppLockerPolicy</maml:linkText>
        <maml:uri/>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-AppLockerFileInformation</maml:linkText>
        <maml:uri/>
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
</helpItems>
