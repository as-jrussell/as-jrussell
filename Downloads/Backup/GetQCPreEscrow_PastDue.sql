IF NOT EXISTS(SELECT 1 FROM SYS.OBJECTS WHERE NAME = 'GetQCPreEscrowPastDue')
	EXEC ('CREATE FUNCTION [dbo].[GetQCPreEscrowPastDue]() RETURNS @t TABLE (t int) AS BEGIN RETURN END')
GO

ALTER FUNCTION GetQCPreEscrowPastDue
(
	  @lenderIds NVARCHAR(MAX)
	 ,@lastRunDate datetime = null
)

RETURNS @t TABLE
(
	 LOAN_ID BIGINT
	,PROPERTY_ID BIGINT
	,REQUIRED_COVERAGE_ID BIGINT
)

AS
BEGIN

	DECLARE @WINDOW_PERIOD DATETIME = CAST(CAST(DATEADD(DAY, -30, GETDATE()) AS DATE) AS DATETIME)

	DECLARE @LenderList TABLE 
	(
		ID BIGINT
	)

	INSERT INTO @LenderList 
	SELECT ID FROM GetSelectedLenderIds(@lenderIds);

	WITH PAST_DUE_SET AS
	(
		SELECT 
			C.LOAN_ID
			,C.PROPERTY_ID
			,RC.ID AS [REQUIRED_COVERAGE_ID]
			,RE.ID AS [REQUIRED_ESCROW_ID]
		FROM LOAN L
			INNER JOIN COLLATERAL C ON C.LOAN_ID = L.ID
			INNER JOIN REQUIRED_COVERAGE RC ON RC.PROPERTY_ID = C.PROPERTY_ID
			INNER JOIN REQUIRED_ESCROW RE ON RE.REQUIRED_COVERAGE_ID = RC.ID
			INNER JOIN @LenderList LE ON LE.ID = L.LENDER_ID
			INNER JOIN PROPERTY_OWNER_POLICY_RELATE POPR ON POPR.PROPERTY_ID = C.PROPERTY_ID
			INNER JOIN OWNER_POLICY OP ON OP.ID = POPR.OWNER_POLICY_ID
		WHERE 
			1=1
			AND RE.SUB_STATUS_CD NOT IN ('RQC', 'PRD') 
			AND RE.STATUS_CD NOT IN ('CBP', 'CBR') 
			--AND L.STATUS_CD = 'A'
			AND L.RECORD_TYPE_CD = 'G'
			AND RE.PAID_THRU_DT < GETDATE()
			AND RE.PURGE_DT IS NULL
			AND RE.ACTIVE_IN = 'Y'
			AND RE.STATUS_CD = 'BM'
			AND C.PRIMARY_LOAN_IN = 'Y'
			AND RC.PURGE_DT IS NULL
			AND 
			(
				(RC.SUMMARY_SUB_STATUS_CD = 'C' and RC.SUMMARY_STATUS_CD NOT IN ('B', 'F', 'E'))
				OR
				(RC.SUMMARY_SUB_STATUS_CD <> 'C')
			)
			AND C.PURGE_DT IS NULL
			AND L.PURGE_DT IS NULL
			AND OP.PURGE_DT IS NULL
			AND POPR.PURGE_DT IS NULL
			AND NOT EXISTS
			(
				SELECT TOP(1)
					1
				FROM QUALITY_CONTROL_ITEM QCI
				WHERE 
					QCI.LOAN_ID = L.ID
					AND QCI.PROPERTY_ID = C.PROPERTY_ID
					AND QCI.REQUIRED_COVERAGE_ID = RC.ID
					AND QC_RULE_DEF_CD = 'PEPD'
					AND PURGE_DT IS NULL
					AND QCI.CREATE_DT >= @WINDOW_PERIOD
			)
	)

	INSERT INTO @t (LOAN_ID, PROPERTY_ID, REQUIRED_COVERAGE_ID)
	SELECT DISTINCT 
		RS.LOAN_ID
		,RS.PROPERTY_ID
		,RS.REQUIRED_COVERAGE_ID
	FROM PAST_DUE_SET RS
	
	RETURN
END
GO