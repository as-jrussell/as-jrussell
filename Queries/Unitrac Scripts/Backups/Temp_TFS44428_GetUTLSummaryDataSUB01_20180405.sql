USE [Unitrac_Reports]
GO

/****** Object:  StoredProcedure [dbo].[Temp_TFS44428_GetUTLSummaryData]    Script Date: 4/5/2018 10:19:38 AM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


ALTER PROCEDURE [dbo].[Temp_TFS44428_GetUTLSummaryData]

as

IF(NOT EXISTS (SELECT *
FROM INFORMATION_SCHEMA.TABLES 
WHERE TABLE_SCHEMA = 'DBO' 
AND  TABLE_NAME = 'Temp_TFS44428_UTL_MATCH_RESULT_SUMMARY_DATA'))
BEGIN

	CREATE TABLE Temp_TFS44428_UTL_MATCH_RESULT_SUMMARY_DATA (
		ID bigint IDENTITY(1,1) NOT FOR REPLICATION NOT NULL,
		LENDER_ID INT NOT NULL,
		LENDER_CODE_TX NVARCHAR(10) NOT NULL,
		MATCH_RESULT_CODE NVARCHAR(10) NOT NULL,
		UTL10Matches INT,
		UTL10AvgDaileyMatches NUMERIC(18,2),
		CONSTRAINT [PK_Temp_TFS44428_UTL_MATCH_RESULT_SUMMARY_DATA] PRIMARY KEY CLUSTERED 
		(
			[ID] ASC
		)
   	)
END


SELECT DISTINCT LENDER_ID, LENDER_CODE_TX
INTO #temp20Lenders
FROM Temp_TFS44428_UTL_MATCH_RESULT_SUMMARY_DATA

DECLARE @lenderId INT

DECLARE lender_cursor  CURSOR FOR

SELECT rd.RELATE_ID LenderId
FROM lender l
INNER JOIN RELATED_DATA rd ON rd.RELATE_ID = l.id
INNER JOIN RELATED_DATA_DEF rdd ON rdd.id = rd.DEF_ID
AND rdd.NAME_TX = 'UTL2.0' 
AND rd.VALUE_TX = 'true'
AND l.PURGE_DT IS null
        
OPEN lender_cursor
        
FETCH NEXT FROM lender_cursor 
INTO @lenderId
        
WHILE @@FETCH_STATUS = 0 
BEGIN
        
    IF( (SELECT COUNT(*) FROM Temp_TFS44428_UTL_MATCH_RESULT_SUMMARY_DATA umrsd WHERE umrsd.LENDER_ID = @lenderId) = 0) 
	BEGIN
		INSERT INTO Temp_TFS44428_UTL_MATCH_RESULT_SUMMARY_DATA(LENDER_ID, LENDER_CODE_TX, MATCH_RESULT_CODE, UTL10Matches, UTL10AvgDaileyMatches)
		SELECT le.id, le.CODE_TX, umr.MATCH_RESULT_CD, COUNT(*), CAST(COUNT(*)/CAST((DATEDIFF(DAY,  MIN(umr.CREATE_DT), GETDATE())) AS NUMERIC(18,5)) AS NUMERIC(18,5)) 
		FROM UTL_MATCH_RESULT umr
		INNER JOIN LOAN l ON umr.UTL_LOAN_ID = l.ID
		INNER JOIN LENDER le ON l.LENDER_ID = le.ID
		WHERE 
		le.id = @lenderId
		AND umr.UTL_VERSION_NO = 1
		AND umr.CREATE_DT > DATEADD(d,-30,GETDATE())
		GROUP BY le.id, le.CODE_TX,umr.MATCH_RESULT_CD
	END
        
	FETCH NEXT FROM lender_cursor 
	INTO @lenderId
        
END
        
CLOSE lender_cursor
DEALLOCATE lender_cursor



; WITH utl20 as
(
SELECT tl.LENDER_CODE_TX,  umr.MATCH_RESULT_CD, COUNT(*) UTL20Matches, CAST(COUNT(*)/CAST((DATEDIFF(DAY,  MIN(umr.CREATE_DT), GETDATE())) AS NUMERIC(18,5)) AS NUMERIC(18,5)) UTL20AvgDaileyMatches
FROM UTL_MATCH_RESULT umr
INNER JOIN LOAN l ON umr.UTL_LOAN_ID = l.ID
INNER JOIN #temp20Lenders tl ON tl.LENDER_ID = l.LENDER_ID
WHERE 
umr.UTL_VERSION_NO = 2
GROUP BY tl.LENDER_CODE_TX, umr.MATCH_RESULT_CD
)

SELECT 
	u1.ID
	,u1.LENDER_ID
	,u1.LENDER_CODE_TX
	,u1.MATCH_RESULT_CODE
	,u1.UTL10Matches
	,CAST(u1.UTL10AvgDaileyMatches AS NUMERIC(18,1)) UTL10AvgDaileyMatches
	,rd.create_dt UTL20LiveDate
	,u2.LENDER_CODE_TX
	,u2.MATCH_RESULT_CD
	,u2.UTL20Matches
	,CAST(u2.UTL20AvgDaileyMatches AS NUMERIC(18,1)) UTL20AvgDaileyMatches
	,CAST(u1.UTL10AvgDaileyMatches/u2.UTL20AvgDaileyMatches AS NUMERIC(18,1)) [u1.UTL10AvgDaileyMatches/u2.UTL20AvgDaileyMatches]
	,CAST(u2.UTL20AvgDaileyMatches/u1.UTL10AvgDaileyMatches AS NUMERIC(18,1)) [u2.UTL20AvgDaileyMatches/u1.UTL10AvgDaileyMatches]
FROM Temp_TFS44428_UTL_MATCH_RESULT_SUMMARY_DATA u1
right JOIN utl20 u2 ON u1.LENDER_CODE_TX = u2.LENDER_CODE_TX AND u1.MATCH_RESULT_CODE = u2.match_result_cd
INNER JOIN RELATED_DATA rd ON rd.RELATE_ID = u1.LENDER_ID
INNER JOIN RELATED_DATA_DEF rdd ON rdd.id = rd.DEF_ID
AND rdd.NAME_TX = 'UTL2.0' 
AND rd.VALUE_TX = 'true'
ORDER BY u1.LENDER_CODE_TX, u1.MATCH_RESULT_CODE

DROP TABLE #temp20Lenders



GO

