USE [UniTrac]
GO 
----REPLACE XXXXXXX WITH THE THE WI ID
SELECT  CONTENT_XML.value('(/Content/Lender/Code)[1]', 'varchar(10)') AS LENDER_CODE ,
        *

INTO    #TMPWI
FROM    WORK_ITEM
WHERE   WORKFLOW_DEFINITION_ID = 11
        AND STATUS_CD = 'INITIAL'
        AND ID IN ( 33556987, 33560123, 33596384, 33623793, 33628476, 33634587, 33642023, 33650141, 33663315, 33692699 , 33693005  )
--AND CONTENT_XML.value('(/Content/Lender/Code)[1]' , 'varchar(10)') = '2771'
-----

--SELECT * FROM #TMPWI

---- DROP TABLE #TMP_ESCROW
SELECT ISNULL(Content_xml.value('(/Content/Lender/Code)[1]','varchar(20)') , '') as LENDER_CODE ,
 #TMPWI.CREATE_DT , #TMPWI.UPDATE_DT , #TMPWI.STATUS_CD AS WI_STATUS_CD , #TMPWI.RELATE_ID AS PROCESS_LOG_ID , 
  #TMPWI.ID AS WORK_ITEM_ID , 
  ISNULL(PLI.INFO_XML.value('(/INFO_LOG/USER_ACTION)[1]','varchar(20)') , '') as 'USER_ACTION' ,
  LOAN.LENDER_ID , LOAN.NUMBER_TX , 
COLL.LOAN_ID , ESC.ID AS ESC_ID , ESC.BIC_ID , RQCOV.*  , ESC.STATUS_CD AS ESC_STATUS_CD , ESC.SUB_STATUS_CD AS ESC_SUB_STATUS_CD , 
RQCOV.STATUS_CD AS RE_STATUS_CD , RQCOV.SUB_STATUS_CD AS RE_SUB_STATUS_CD , ESC.REPORTED_DT ,
'Closed' AS STATUS_MEANING , 'Reported' AS SUB_STATUS_MEANING , CONVERT(VARCHAR(10) , GETDATE() , 101) AS STATUS_DT , 
0 as EXCLUDE
INTO #TMP_ESCROW
--- SELECT COUNT(*)
FROM WORK_ITEM_PROCESS_LOG_ITEM_RELATE WIPLIR 			 
 JOIN PROCESS_LOG_ITEM PLI ON PLI.ID = WIPLIR.PROCESS_LOG_ITEM_ID	
 AND PLI.PURGE_DT IS NULL AND WIPLIR.PURGE_DT IS NULL
 JOIN ESCROW ESC  ON ESC.ID = PLI.RELATE_ID AND PLI.RELATE_TYPE_CD = 'Allied.UniTrac.Escrow'	
 CROSS APPLY (
     SELECT TOP 1  RC1.TYPE_CD , RC1.ID AS RC_ID ,RC1.PROPERTY_ID ,RE1.STATUS_CD , RE1.SUB_STATUS_CD FROM REQUIRED_COVERAGE RC1 
     JOIN ESCROW_REQUIRED_COVERAGE_RELATE ER1 ON ER1.REQUIRED_COVERAGE_ID = RC1.ID
     JOIN REQUIRED_ESCROW RE1 ON RE1.REQUIRED_COVERAGE_ID = RC1.ID
     AND RE1.ACTIVE_IN = 'Y' 
     WHERE RE1.TYPE_CD = ESC.TYPE_CD AND RE1.SUB_TYPE_CD = ESC.SUB_TYPE_CD AND 
       RE1.EXCESS_IN = ESC.EXCESS_IN AND
       ER1.ESCROW_ID = ESC.ID AND (RC1.TYPE_CD = 'HAZARD' OR RC1.TYPE_CD = RC1.TYPE_CD)
     ORDER BY 
     Case when RC1.TYPE_CD = 'HAZARD' Then 0 else 1 end 
     asc
    )  RQCOV  
  JOIN COLLATERAL COLL ON COLL.PROPERTY_ID = RQCOV.PROPERTY_ID AND COLL.PRIMARY_LOAN_IN = 'Y'
  AND COLL.PURGE_DT IS NULL
  JOIN LOAN ON LOAN.ID = COLL.LOAN_ID 	
  JOIN #TMPWI ON #TMPWI.id = WIPLIR.WORK_ITEM_ID
--WHERE ISNULL(Content_xml.value('(/Content/Lender/Code)[1]','varchar(20)') , '')  IN ('2771')
ORDER BY LENDER_CODE
---- 
/*
SELECT * FROM #TMPWI T
LEFT JOIN #TMP_ESCROW TT ON T.ID = TT.WORK_ITEM_ID
WHERE T.ID IS NULL
*/




---PLEASE DO NOT PROCEED AFTER THIS IF IT RETURNS ANY RECORDS
----SEND THE LIST OF WI'S IF THIS RETURNS ANY RECORDS, TO APPLY THE ACTION
SELECT DISTINCT WORK_ITEM_ID FROM #TMP_ESCROW
WHERE USER_ACTION = ''

/*
---ENSURE WORK ITEMS ARE NOT PURGED 
SELECT T.ID [WI_ID],  WIPLI.ID [WIPLI_ID], WIPLI.PURGE_DT [WIPLI.PURGE_DT], PLI.ID [PLI_ID], PLI.PURGE_DT [PLI.PURGE_DT], 
wia.id [WIA ID], WIA.PURGE_DT [WIA.PURGE_DT]
INTO #TMP
 FROM #TMPWI T
INNER JOIN dbo.WORK_ITEM_ACTION WIA ON WIA.WORK_ITEM_ID = T.ID
INNER JOIN dbo.WORK_ITEM_PROCESS_LOG_ITEM_RELATE WIPLI ON WIPLI.WORK_ITEM_ID = T.ID
INNER JOIN dbo.PROCESS_LOG_ITEM PLI ON PLI.ID = WIPLI. PROCESS_LOG_ITEM_ID


SELECT * FROM #TMP


UPDATE dbo.WORK_ITEM_PROCESS_LOG_ITEM_RELATE
SET PURGE_DT = NULL
--SELECT * FROM dbo.WORK_ITEM_PROCESS_LOG_ITEM_RELATE
WHERE ID IN (SELECT WIPLI_ID FROM #TMP)


UPDATE dbo.PROCESS_LOG_ITEM
SET PURGE_DT = NULL
--SELECT * FROM dbo.PROCESS_LOG_ITEM
WHERE ID IN (SELECT PLI_ID FROM #TMP)

*/


----- DROP TABLE #TMP_ESCROW_01
SELECT * INTO #TMP_ESCROW_01 FROM #TMP_ESCROW WHERE WORK_ITEM_ID NOT IN 
(
SELECT DISTINCT WORK_ITEM_ID FROM #TMP_ESCROW
WHERE USER_ACTION = ''
)
----

---- drop table #TMP_ESCROW_02
SELECT * INTO #TMP_ESCROW_02 
FROM #TMP_ESCROW_01
WHERE USER_ACTION = 'APPROVE'
AND ESC_STATUS_CD = 'OPEN'
AND ESC_SUB_STATUS_CD = 'INWI'
------ 


SELECT * INTO #TMP_ESCROW_01A
FROM #TMP_ESCROW_01
WHERE USER_ACTION IN ('LenderReject' , 'Reject')
AND ESC_STATUS_CD = 'OPEN'
AND ESC_SUB_STATUS_CD = 'INPROC'
AND REPORTED_DT IS NOT NULL


UPDATE ESC SET REPORTED_DT = NULL , UPDATE_DT = GETDATE() ,
UPDATE_USER_TX = 'UNITRAC' , LOCK_ID = CASE WHEN ESC.LOCK_ID >= 255 THEN 1 ELSE ESC.LOCK_ID + 1 END
--- SELECT ESC.*   ---COUNT(*)
FROM ESCROW ESC JOIN #TMP_ESCROW_01A ON #TMP_ESCROW_01A.ESC_ID = ESC.ID


UPDATE ESC SET STATUS_CD = 'CLSE' , SUB_STATUS_CD = 'RPTD' ,
STATUS_DT = GETDATE() , UPDATE_DT = GETDATE() , REPORTED_DT = GETDATE() ,
UPDATE_USER_TX = 'UNITRAC' , LOCK_ID = CASE WHEN LOCK_ID >= 255 THEN 1 ELSE LOCK_ID + 1 END
--- SELECT ESC.*   ---COUNT(*)
FROM ESCROW ESC JOIN #TMP_ESCROW_02 ON #TMP_ESCROW_02.ESC_ID = ESC.ID
---- 

UPDATE RC SET GOOD_THRU_DT = NULL , UPDATE_DT = GETDATE() , 
UPDATE_USER_TX = 'UNITRAC' , LOCK_ID = CASE WHEN LOCK_ID >= 255 THEN 1 ELSE LOCK_ID + 1 END
--- SELECT COUNT(*)
FROM REQUIRED_COVERAGE RC JOIN #TMP_ESCROW ON #TMP_ESCROW.PROPERTY_ID = RC.PROPERTY_ID
---- 

---- DROP TABLE #TMP_IH
SELECT ESC.* , IH.ID AS IH_ID , IH.SPECIAL_HANDLING_XML
INTO #TMP_IH
FROM #TMP_ESCROW_02 ESC JOIN INTERACTION_HISTORY IH ON IH.PROPERTY_ID = ESC.PROPERTY_ID
WHERE IH.TYPE_CD = 'ESCROW' AND IH.RELATE_ID = ESC.ESC_ID 
AND IH.RELATE_CLASS_TX = 'ALLIED.UNITRAC.ESCROW'
---- 


UPDATE IH
set  SPECIAL_HANDLING_XML.modify('replace value of 
   (/SH/Status/text())[1] with sql:column("STATUS_MEANING")') ,
   UPDATE_DT = GETDATE() , 
   LOCK_ID = CASE WHEN LOCK_ID >= 255 THEN 1 ELSE LOCK_ID + 1 END ,
   UPDATE_USER_TX = 'UNITRAC'
   ---- SELECT STATUS_MEANING ----COUNT(*)
   from INTERACTION_HISTORY IH JOIN #TMP_IH ON #TMP_IH.IH_ID = IH.ID
 ----  
 
UPDATE IH
set  SPECIAL_HANDLING_XML.modify('replace value of 
   (/SH/SubStatus/text())[1] with sql:column("SUB_STATUS_MEANING")') ,   
   UPDATE_DT = GETDATE() , 
   LOCK_ID = CASE WHEN LOCK_ID >= 255 THEN 1 ELSE LOCK_ID + 1 END ,
   UPDATE_USER_TX = 'UNITRAC'
   ---- SELECT  SUB_STATUS_MEANING   ---COUNT(*)
   from INTERACTION_HISTORY IH JOIN #TMP_IH ON #TMP_IH.IH_ID = IH.ID
  ---- 
   
   
UPDATE IH
set  SPECIAL_HANDLING_XML.modify('replace value of 
   (/SH/StatusDate/text())[1] with sql:column("STATUS_DT")') ,
   UPDATE_DT = GETDATE() , 
   LOCK_ID = CASE WHEN LOCK_ID >= 255 THEN 1 ELSE LOCK_ID + 1 END ,
   UPDATE_USER_TX = 'UNITRAC',
   EFFECTIVE_DT = GETDATE() 
   ---- SELECT STATUS_DT   ---COUNT(*)
   from INTERACTION_HISTORY IH JOIN #TMP_IH ON #TMP_IH.IH_ID = IH.ID
---- 

---- DROP TABLE #TMP_ESCROW_03
SELECT * INTO #TMP_ESCROW_03 FROM #TMP_ESCROW_01
WHERE USER_ACTION = 'APPROVE'
---- 

INSERT INTO ESCROW_EVENT 
(
ESCROW_ID , ACTION_TAKEN_CD , EVENT_DT , CREATE_USER_TX , AMOUNT_NO ,  INFORMATION_TX , CREATE_DT , UPDATE_DT , UPDATE_USER_TX , LOCK_ID
)
SELECT DISTINCT TMP.ESC_ID ,'APPROVE' , GETDATE() ,   'UNITRAC' , 
ESC.TOTAL_AMOUNT_NO , 
'ProcessLogId: ' + CONVERT(VARCHAR(15) , TMP.PROCESS_LOG_ID ) + '  WorkItemId: ' + CONVERT(VARCHAR(15) , TMP.WORK_ITEM_ID ) , 
GETDATE() , GETDATE() , 'UNITRAC', 1
FROM #TMP_ESCROW_03 TMP JOIN ESCROW ESC ON ESC.ID = TMP.ESC_ID
---- 

---- 1053 IS FOR IMPUSER
INSERT INTO WORK_ITEM_ACTION 
(
WORK_ITEM_ID , ACTION_CD , FROM_STATUS_CD , TO_STATUS_CD , CURRENT_QUEUE_ID , CURRENT_OWNER_ID , 
ACTION_NOTE_TX , ACTIVE_IN , CREATE_DT , UPDATE_DT , UPDATE_USER_TX ,
LOCK_ID , ACTION_USER_ID
)
SELECT DISTINCT TMP.WORK_ITEM_ID , 'Complete' , 'Initial' , 'Complete' , WI.CURRENT_QUEUE_ID , 
WI.CURRENT_OWNER_ID , 'Completed by the system' , 
'Y' , GETDATE() , GETDATE()  , 'UNITRAC' , 1 , 1053
FROM #TMP_ESCROW_01 TMP 
JOIN WORK_ITEM WI ON WI.ID = TMP.WORK_ITEM_ID
---- 

---- DROP TABLE #TMP_ESCROW_04
SELECT DISTINCT WORK_ITEM_ID INTO #TMP_ESCROW_04 FROM #TMP_ESCROW_01
----

SELECT * FROM #TMP_ESCROW_04

UPDATE WI SET STATUS_CD = 'Complete' , UPDATE_DT = GETDATE() , 
UPDATE_USER_TX = 'UNITRAC' , LOCK_ID = CASE WHEN LOCK_ID >= 255 THEN 1 ELSE LOCK_ID + 1 END,
LAST_WORK_ITEM_ACTION_ID = (SELECT MAX(ID) FROM dbo.WORK_ITEM_ACTION WHERE   WORK_ITEM_ID IN ( SELECT * FROM #TMP_ESCROW_04 ))
---- SELECT COUNT(*)
FROM WORK_ITEM WI JOIN #TMP_ESCROW_04 TMP ON TMP.WORK_ITEM_ID = WI.ID
---- 

-------- If there are User Actions Remaining, can find Loan Number using below
SELECT * FROM #TMP_ESCROW WHERE USER_ACTION = ''



SELECT ID, STATUS_CD FROM dbo.WORK_ITEM
WHERE ID IN (SELECT ID FROM #TMPWI)


SELECT ACTION_CD, WORK_ITEM_ID FROM dbo.WORK_ITEM_ACTION
WHERE ID IN (SELECT ID FROM dbo.WORK_ITEM_ACTION
WHERE WORK_ITEM_ID IN (SELECT * FROM #TMP_ESCROW_04)
AND ACTION_CD = 'Complete')

SELECT * FROM dbo.WORK_ITEM
WHERE ID = '33628476'


SELECT * FROM dbo.WORK_ITEM_ACTION
WHERE ID = '70376707'


/*
DROP TABLE #TMP_ESCROW_04
DROP TABLE #TMP_ESCROW_02
DROP TABLE #TMP_ESCROW_01A
DROP TABLE #TMP_ESCROW_01
DROP TABLE #TMP_ESCROW
DROP TABLE #TMP_IH
DROP TABLE #TMP_ESCROW_03
DROP TABLE #TMPWI
*/