USE [Unitrac_Reports]
GO

/****** Object:  StoredProcedure [dbo].[Report_WvNonPay]    Script Date: 8/10/2017 6:51:40 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[Report_WvNonPay] 
	(@LenderCode as nvarchar(10)=NULL,
	@Branch as nvarchar(max)=NULL,
	@Division as nvarchar(10)=NULL,
	@Coverage as nvarchar(100)=NULL,
	@ReportType as nvarchar(50)=NULL,
	@GroupByCode as nvarchar(50)=NULL,
	@SortByCode as nvarchar(50)=NULL,
	@FilterByCode as nvarchar(50)=NULL,
	@SpecificReport as varchar(50)=NULL,
	@Report_History_ID as bigint=NULL)	
AS

BEGIN
SET NOCOUNT ON
--Get rid of residual #temp tables
IF OBJECT_ID(N'tempdb..#tmpfilter',N'U') IS NOT NULL
  DROP TABLE #tmpfilter
IF OBJECT_ID(N'tempdb..#tmptable',N'U') IS NOT NULL
  DROP TABLE #tmptable
IF OBJECT_ID(N'tempdb..#t1',N'U') IS NOT NULL
  DROP TABLE #t1
IF OBJECT_ID(N'tempdb..#t2',N'U') IS NOT NULL
  DROP TABLE #t2

DECLARE @RealSpecificReport as varchar(50)=@SpecificReport			
If @SpecificReport = '0000'					
BEGIN
	SET @RealSpecificReport = @ReportType
END

DECLARE @DEBUGGING AS VARCHAR(1) = 'F'
Declare @LenderID as bigint

Declare @sqlstring as nvarchar(3000)
DECLARE @CHECK_DT AS VARCHAR(1) = NULL			--WVNONPAYPNDPRM, WVNONPAYPNDPRM_NOBR, WVNONPAYPNDPRM1, WVNONPAYPNDPRMFLOOD, WVNOPAYPND
DECLARE @CHECK_BAL AS VARCHAR(1) = NULL			--WVNONPAYPNDPRM, WVNONPAYPNDPRM_NOBR, WVNONPAYPNDPRM1, WVNONPAYPNDPRMFLOOD
DECLARE @CHECK_OPT_NULL AS VARCHAR(1) = NULL	--WVNOPAYPND
DECLARE @CHECK_CPI_ST AS VARCHAR(1) = NULL		--WVNONPAYPNDPRM1
DECLARE @CHECK_RC_ST AS VARCHAR(1) = NULL		--WVNOPAYPND
DECLARE @RC_ST_NOTP AS VARCHAR(1) = NULL		--WVNONPAYPNDPRM, WVNONPAYPNDPRM_NOBR, WVNONPAYPNDPRM1, WVNONPAYPNDPRMFLOOD, WVNOPAYPND
DECLARE @RC_ST_P AS VARCHAR(1) = NULL			--WVNOPAYPRM, WVNOPAY
DECLARE @CHECK_MAX AS VARCHAR(1) = NULL			--WVNONPAYPNDPRM, WVNONPAYPNDPRM_NOBR, WVNONPAYPNDPRM1, WVNONPAYPNDPRMFLOOD, WVNOPAYPND
DECLARE @CHECK_ACT_W_DATES AS VARCHAR(1) = NULL	--WVNOPAYPRM, WVNOPAY
DECLARE @CHECK_ACT AS VARCHAR(1) = NULL			--WVNOPAYPND
DECLARE @SMP_REPORT_IN AS VARCHAR(1) = NULL		--WVNONPAYPNDPRM_SMP

DECLARE @ReportCreateDate as datetime2(7) = NULL

if @Report_History_ID is not NULL
Begin
	Select @ReportCreateDate = CREATE_DT from [UNITRAC-REPORTS].[UNITRAC].DBO.REPORT_HISTORY_NOXML where ID = @Report_History_ID
End

IF @ReportCreateDate IS NULL
BEGIN
	SET @ReportCreateDate = GETDATE()
END

DECLARE @BranchTable AS TABLE(ID int, STRVALUE nvarchar(30))
			INSERT INTO @BranchTable SELECT * FROM SplitFunction(@Branch, ',')  

CREATE TABLE [dbo].[#tmptable](
	[LOAN_BRANCHCODE_TX] [nvarchar](20) NULL,
	[LOAN_DIVISIONCODE_TX] [nvarchar](20) NULL,
	[LOAN_TYPE_TX] [nvarchar](1000) NULL,
	[REQUIREDCOVERAGE_CODE_TX] [nvarchar](30) NULL,
	[REQUIREDCOVERAGE_TYPE_TX] [nvarchar](1000) NULL,
--LOAN
	[LOAN_NUMBER_TX] [nvarchar](18) NOT NULL,
	[LOAN_NUMBERSORT_TX] [nvarchar](18) NULL,
	[LOAN_EFFECTIVE_DT] [datetime] NULL,
	[LOAN_MATURITY_DT] [datetime] NULL,
	[LOAN_BALANCE_NO] [decimal](19, 2) NULL,
	[LOAN_OFFICERCODE_TX] [nvarchar](20) NULL,
	[LOAN_CREDITSCORECODE_TX] [nvarchar](20) NULL,
--LENDER
	[LENDER_CODE_TX] [nvarchar](10) NULL,	
	[LENDER_NAME_TX] [nvarchar](40) NULL,	
--COLLATERAL
	[COLLATERAL_NUMBER_NO] [int] NULL,
	[COLLATERAL_CODE_TX] [nvarchar](10) NULL,
--OWNER
	[OWNER_LASTNAME_TX] [nvarchar](30) NULL,
	[OWNER_FIRSTNAME_TX] [nvarchar](30) NULL,
	[OWNER_MIDDLEINITIAL_TX] [char](1) NULL,
	[OWNER_LINE1_TX] [nvarchar](100) NULL,
	[OWNER_LINE2_TX] [nvarchar](100) NULL,
	[OWNER_STATE_TX] [nvarchar](30) NULL,
	[OWNER_CITY_TX] [nvarchar](40) NULL,
	[OWNER_ZIP_TX] [nvarchar](30) NULL,
--PROPERTY
	[COLLATERAL_YEAR_TX] [nvarchar](4) NULL,
	[COLLATERAL_MAKE_TX] [nvarchar](30) NULL,
	[COLLATERAL_MODEL_TX] [nvarchar](30) NULL,
	[COLLATERAL_VIN_TX] [nvarchar](18) NULL,
	[COLLATERAL_EQUIP_TX] [nvarchar](100) NULL,
	[COLLATERAL_LINE1_TX] [nvarchar](100) NULL,
	[COLLATERAL_LINE2_TX] [nvarchar](100) NULL,
	[COLLATERAL_STATE_TX] [nvarchar](30) NULL,
	[COLLATERAL_CITY_TX] [nvarchar](40) NULL,
	[COLLATERAL_ZIP_TX] [nvarchar](30) NULL,
--COVERAGE
	[COVERAGE_STATUS_TX] [nvarchar](1000) NULL,
--CPI
	[INSCOMPANY_NAME_TX] [nvarchar](50) NULL,
	[INSCOMPANY_POLICY_NO] [nvarchar](30) NULL,
	[INSCOMPANY_EFF_DT] [datetime2](7) NULL,
	[INSCOMPANY_EFFDTSORT_TX] [nvarchar](8) NULL,
	[INSCOMPANY_EXP_DT] [datetime2](7) NULL,
	[INSCOMPANY_CAN_DT] [datetime2](7) NULL,
	[INSCOMPANY_EXPCXL_DT] [datetime2](7) NULL,
	[INSCOMPANY_ISSUE_DT] [datetime2](7) NULL,
	[CPI_QUOTE_TERM_NO] [int] NULL,
	[CPI_ISSUEDPREMIUM_AMOUNT_NO] [decimal](18, 2) NULL,
	[CPI_CANCELLEDPREMIUM_AMOUNT_NO] [decimal](18, 2) NULL,
--IDs, STATUS
	[LOAN_ID] [bigint] NULL,
	[COLLATERAL_ID] [bigint] NULL,
	[PROPERTY_ID] [bigint] NULL,
	[REQUIREDCOVERAGE_ID] [bigint] NULL,
	[FPC_ID] [bigint] NULL,
	[LOAN_STATUSCODE] [nvarchar] (2) NULL,
	[LOAN_STATUSMEANING_TX] [nvarchar](1000) NULL,
	[COLLATERAL_STATUSCODE] [nvarchar] (2) NULL,
	[COLLATERAL_STATUSMEANING_TX] [nvarchar](1000) NULL,
	[REQUIREDCOVERAGE_STATUSCODE] [nvarchar] (2) NULL,
	[REQUIREDCOVERAGE_STATUSMEANING_TX] [nvarchar](1000) NULL,
	[REQUIREDCOVERAGE_SUBSTATUSCODE] [nvarchar] (2) NULL,
	[REQUIREDCOVERAGE_INSSTATUSCODE] [nvarchar] (2) NULL,
	[REQUIREDCOVERAGE_INSSTATUSMEANING_TX] [nvarchar](1000) NULL,
	[REQUIREDCOVERAGE_INSSUBSTATUSCODE] [nvarchar] (2) NULL,
	[REQUIREDCOVERAGE_INSSUBSTATUSMEANING_TX] [nvarchar](1000) NULL,
	[PROPERTY_DESCRIPTION] [nvarchar](200) NULL,
	[ISS_REASON_TX] [nvarchar](10) NOT NULL,
	[INS_CXL_DT] [datetime2](7) NULL,
	[I_TOT_PRM] [decimal](18, 2) NOT NULL,
	[PI_TOT_PRM] [decimal](18, 2) NOT NULL,
	[C_TOT_PRM] [decimal](18, 2) NOT NULL,
	[PC_TOT_PRM] [decimal](18, 2) NOT NULL,
	[OWNER_NAME] [nvarchar](64) NULL,
	[LOAN_LENDERNAME_TX] [nvarchar](40) NOT NULL,
	[INS_EXP_DT_RANGE] [nvarchar](13) NULL,
	[INS_ISS_DT_RANGE] [nvarchar](13) NULL,
	[PRIOR_CPI_CNT_NO] [int] NULL,
	[FPC_LOAN_ID] [bigint] NULL,
	[INS_PRINT_DT] [datetime] NULL,
	[OWNER_COSIGN_TX] [varchar](1) NOT NULL, 
	[CPI_BILL_DT] [datetime2] NULL,
	[CPI_PREM_DUE_NO] [int] NULL,
	[CPI_FPC_OPT_BILL_DUE_DAYS_NO] [int] NULL,
	[CPI_DUE_DAYS_NO] [int] NULL,
	[CPI_WNP_DT] [datetime2] NULL,
	[WV_START_DT] [datetime2] NULL,
	[CPI_BILL_CYCLE] [nvarchar] (2) NULL,
	[CPI_NETPREMIUM_AMOUNT_NO] [decimal](18, 2) NULL,
	[CPI_BILLED_NET_TOTAL_NO] [decimal](18, 2) NULL,
	[CPI_BILLED_DT] [datetime2] (7) NULL,
	[CPI_MAX_BILL_DATE_IN] [nvarchar] NULL,
	[CPI_BALANCE_NO] [decimal](18, 2) NULL,
	[CPI_FPC_NON_PAY_DAYS_NO] [int] NULL,
	[CPI_NEW_TXN_IN] [nvarchar] (1) NULL,
	[CPI_TXN_TYPE_CD]  [nvarchar] (10) NULL,								
	[CPI_NET_CHARGES] [decimal](18,2) NULL,	
	[CALC_WNON_PDT] [datetime2] NULL,
	[CALC_RPT_NON_PTD]	[datetime2] NULL,
	[CPI_FPC_OPT_RPT_NON_PAY_DAYS_NO] int NULL,
	[CPI_STATUS_CD] [nvarchar] (2) NULL,
	[CPI_HOLD_IN] [nvarchar] (1) NULL,
	[CPI_MONTHLY_BILLING_IN] [nvarchar] (1) NULL,	
--STD
	[REPORT_GROUPBY_TX] [nvarchar](1000) NULL,
	[REPORT_SORTBY_TX] [nvarchar](1000) NULL,
	[REPORT_HEADER_TX] [nvarchar](1000) NULL,
	[REPORT_FOOTER_TX] [nvarchar](1000) NULL
) ON [PRIMARY]

CREATE TABLE [dbo].[#tmpfilter](
	[ATTRIBUTE_CD] [nvarchar](50) NULL,
	[VALUE_TX] [nvarchar](50) NULL
) ON [PRIMARY]

Select @LenderID=ID from LENDER where CODE_TX = @LenderCode and PURGE_DT is null

Declare @GroupBySQL as varchar(1000)
Declare @SortBySQL as varchar(1000)
Declare @FilterBySQL as varchar(1000)
Declare @HeaderTx as varchar(1000)
Declare @FooterTx as varchar(1000)
Declare @FillerZero as varchar(18)
Declare @RecordCount as bigint

Set @FillerZero = '000000000000000000'
Set @RecordCount = 0

Insert into #tmpfilter (
	ATTRIBUTE_CD,
	VALUE_TX)

Select 
RAD.ATTRIBUTE_CD,
Case 
  when Custom.VALUE_TX is not NULL then Custom.VALUE_TX
  when RA.VALUE_TX is not NULL then RA.VALUE_TX
  else RAD.VALUE_TX
End as VALUE_TX
from REF_CODE RC 
Join REF_CODE_ATTRIBUTE RAD on RAD.DOMAIN_CD = RC.DOMAIN_CD and RAD.REF_CD = 'DEFAULT' and RAD.ATTRIBUTE_CD like 'FIL%'
left Join REF_CODE_ATTRIBUTE RA on RA.DOMAIN_CD = RC.DOMAIN_CD and RA.REF_CD = RC.CODE_CD and RA.ATTRIBUTE_CD = RAD.ATTRIBUTE_CD
left Join 
  (
  Select CODE_TX,REPORT_CD,REPORT_DOMAIN_CD,REPORT_REF_ATTRIBUTE_CD,VALUE_TX from REPORT_CONFIG RC
  Join REPORT_CONFIG_ATTRIBUTE RCA on RCA.REPORT_CONFIG_ID = RC.ID
  ) Custom
   on Custom.CODE_TX = @RealSpecificReport and Custom.REPORT_DOMAIN_CD = RAD.DOMAIN_CD and Custom.REPORT_REF_ATTRIBUTE_CD = RAD.ATTRIBUTE_CD and Custom.REPORT_CD = @ReportType
where RC.DOMAIN_CD = 'Report_WvNonPay' and RC.CODE_CD = @ReportType

Select @CHECK_DT =  ISNULL(Value_TX, 'N') from #tmpfilter where ATTRIBUTE_CD = 'FIL_CHECK_DT'				--WVNONPAYPNDPRM, WVNONPAYPNDPRM_NOBR, WVNONPAYPNDPRM1, WVNONPAYPNDPRMFLOOD, WVNOPAYPND
Select @CHECK_BAL =  ISNULL(Value_TX, 'N') from #tmpfilter where ATTRIBUTE_CD = 'FIL_CHECK_BAL'				--WVNONPAYPNDPRM, WVNONPAYPNDPRM_NOBR, WVNONPAYPNDPRM1, WVNONPAYPNDPRMFLOOD
Select @CHECK_OPT_NULL =  ISNULL(Value_TX, 'N') from #tmpfilter where ATTRIBUTE_CD = 'FIL_CHECK_OPT_NULL'	--WVNOPAYPND
Select @CHECK_CPI_ST =  ISNULL(Value_TX, 'N') from #tmpfilter where ATTRIBUTE_CD = 'FIL_CHECK_CPI_ST'		--WVNONPAYPNDPRM1
Select @CHECK_RC_ST =  ISNULL(Value_TX, 'N') from #tmpfilter where ATTRIBUTE_CD = 'FIL_CHECK_RC_ST'			--WVNOPAYPND
Select @RC_ST_NOTP =  ISNULL(Value_TX, 'N') from #tmpfilter where ATTRIBUTE_CD = 'FIL_RC_ST_NOTP'			--WVNONPAYPNDPRM, WVNONPAYPNDPRM_NOBR, WVNONPAYPNDPRM1, WVNONPAYPNDPRMFLOOD, WVNOPAYPND
Select @RC_ST_P =  ISNULL(Value_TX, 'N') from #tmpfilter where ATTRIBUTE_CD = 'FIL_RC_ST_P'					--WVNOPAYPRM, WVNOPAY
Select @CHECK_MAX =  ISNULL(Value_TX, 'N') from #tmpfilter where ATTRIBUTE_CD = 'FIL_CHECK_MAX'				--WVNONPAYPNDPRM, WVNONPAYPNDPRM_NOBR, WVNONPAYPNDPRM1, WVNONPAYPNDPRMFLOOD, WVNOPAYPND
Select @CHECK_ACT_W_DATES =  ISNULL(Value_TX, 'N') from #tmpfilter where ATTRIBUTE_CD = 'FIL_CHECK_ACT_W_DATES'	--WVNOPAYPRM, WVNOPAY
Select @CHECK_ACT =  ISNULL(Value_TX, 'N') from #tmpfilter where ATTRIBUTE_CD = 'FIL_CHECK_ACT'				--WVNOPAYPND
Select @SMP_REPORT_IN =  ISNULL(Value_TX, 'N') from #tmpfilter where ATTRIBUTE_CD = 'FIL_SMP_REPORT_IN'		--WVNONPAYPNDPRM_SMP

IF @CHECK_ACT_W_DATES = 'Y' 
BEGIN
	SET @CHECK_ACT = 'Y'
END

IF @DEBUGGING = 'T'
BEGIN
SELECT @CHECK_DT AS CHECK_DT, @CHECK_BAL AS CHECK_BAL, @CHECK_OPT_NULL AS CHECK_OPT_NULL, @CHECK_CPI_ST AS CHECK_CPI_ST, @RC_ST_NOTP AS RC_ST_NOTP, @RC_ST_P AS RC_ST_P, @CHECK_MAX AS CHECK_MAX, @CHECK_ACT_W_DATES AS CHECK_ACT_W_DATES, @CHECK_ACT AS CHECK_ACT
END


if @SpecificReport is NULL or @SpecificReport = '' or @SpecificReport = '0000'
  Begin
	IF @GroupByCode IS NULL OR @GroupByCode = ''
		SELECT @GroupBySQL=GROUP_TX FROM REPORT_CONFIG WHERE CODE_TX = @ReportType
	ELSE
		SELECT @GroupBySQL=DESCRIPTION_TX FROM REF_CODE WHERE DOMAIN_CD = 'Report_GroupBy' AND CODE_CD = @GroupByCode
	IF @SortByCode IS NULL OR @SortByCode = ''
		SELECT @SortBySQL=SORT_TX FROM REPORT_CONFIG WHERE CODE_TX = @ReportType
	ELSE
		SELECT @SortBySQL=DESCRIPTION_TX FROM REF_CODE WHERE DOMAIN_CD = 'Report_SortBy' AND CODE_CD = @SortByCode
	IF @FilterByCode IS NULL OR @FilterByCode = ''
		SELECT @FilterBySQL=FILTER_TX FROM REPORT_CONFIG WHERE CODE_TX = @ReportType
	Else
		SELECT @FilterBySQL=DESCRIPTION_TX FROM REF_CODE WHERE DOMAIN_CD = 'Report_FilterBy' AND CODE_CD = @FilterByCode

	Select @HeaderTx=HEADER_TX from REPORT_CONFIG where CODE_TX = @ReportType
	Select @FooterTx=FOOTER_TX from REPORT_CONFIG where CODE_TX = @ReportType
  End
else
  Begin
	IF @GroupByCode IS NULL OR @GroupByCode = ''
		SELECT @GroupBySQL=GROUP_TX FROM REPORT_CONFIG WHERE CODE_TX = @SpecificReport
	ELSE
		SELECT @GroupBySQL=DESCRIPTION_TX FROM REF_CODE WHERE DOMAIN_CD = 'Report_GroupBy' AND CODE_CD = @GroupByCode
	IF @SortByCode IS NULL OR @SortByCode = ''
		SELECT @SortBySQL=SORT_TX FROM REPORT_CONFIG WHERE CODE_TX = @SpecificReport
	ELSE
		SELECT @SortBySQL=DESCRIPTION_TX FROM REF_CODE WHERE DOMAIN_CD = 'Report_SortBy' AND CODE_CD = @SortByCode
	IF @FilterByCode IS NULL OR @FilterByCode = ''
		SELECT @FilterBySQL=FILTER_TX FROM REPORT_CONFIG WHERE CODE_TX = @SpecificReport
	Else
		SELECT @FilterBySQL=DESCRIPTION_TX FROM REF_CODE WHERE DOMAIN_CD = 'Report_FilterBy' AND CODE_CD = @FilterByCode

	Select @HeaderTx=HEADER_TX from REPORT_CONFIG where CODE_TX = @SpecificReport
	Select @FooterTx=FOOTER_TX from REPORT_CONFIG where CODE_TX = @SpecificReport
  End  


Insert into #tmptable (
LOAN_BRANCHCODE_TX, LOAN_DIVISIONCODE_TX, LOAN_TYPE_TX, REQUIREDCOVERAGE_CODE_TX, REQUIREDCOVERAGE_TYPE_TX, LOAN_NUMBER_TX, LOAN_NUMBERSORT_TX,
--LOAN
LOAN_EFFECTIVE_DT, LOAN_MATURITY_DT, LOAN_BALANCE_NO, LOAN_OFFICERCODE_TX, LOAN_CREDITSCORECODE_TX,
--LENDER
LENDER_CODE_TX, LENDER_NAME_TX,
--COLLATERAL
COLLATERAL_NUMBER_NO, 
COLLATERAL_CODE_TX, 
--OWNER
OWNER_LASTNAME_TX, OWNER_FIRSTNAME_TX, OWNER_MIDDLEINITIAL_TX,
OWNER_LINE1_TX, OWNER_LINE2_TX, OWNER_STATE_TX, OWNER_CITY_TX, OWNER_ZIP_TX,
--PROPERTY
COLLATERAL_YEAR_TX, COLLATERAL_MAKE_TX, COLLATERAL_MODEL_TX, COLLATERAL_VIN_TX, COLLATERAL_EQUIP_TX, 
COLLATERAL_LINE1_TX, COLLATERAL_LINE2_TX, COLLATERAL_STATE_TX, COLLATERAL_CITY_TX, COLLATERAL_ZIP_TX, 
--COVERAGE
COVERAGE_STATUS_TX,
--CPI
INSCOMPANY_NAME_TX, INSCOMPANY_POLICY_NO, INSCOMPANY_EFF_DT, INSCOMPANY_EFFDTSORT_TX, INSCOMPANY_EXP_DT, INSCOMPANY_CAN_DT, INSCOMPANY_EXPCXL_DT, 
INSCOMPANY_ISSUE_DT, CPI_QUOTE_TERM_NO, CPI_ISSUEDPREMIUM_AMOUNT_NO, CPI_CANCELLEDPREMIUM_AMOUNT_NO,
--IDs, STATUS
LOAN_ID, COLLATERAL_ID, PROPERTY_ID, REQUIREDCOVERAGE_ID, FPC_ID,
LOAN_STATUSCODE, LOAN_STATUSMEANING_TX, COLLATERAL_STATUSCODE, COLLATERAL_STATUSMEANING_TX,
REQUIREDCOVERAGE_STATUSCODE, REQUIREDCOVERAGE_STATUSMEANING_TX, REQUIREDCOVERAGE_SUBSTATUSCODE,
REQUIREDCOVERAGE_INSSTATUSCODE, REQUIREDCOVERAGE_INSSTATUSMEANING_TX,
REQUIREDCOVERAGE_INSSUBSTATUSCODE, REQUIREDCOVERAGE_INSSUBSTATUSMEANING_TX,
[PROPERTY_DESCRIPTION], [ISS_REASON_TX], [INS_CXL_DT], [I_TOT_PRM], [PI_TOT_PRM], [C_TOT_PRM], [PC_TOT_PRM], [OWNER_NAME], 
[LOAN_LENDERNAME_TX], [INS_EXP_DT_RANGE], [INS_ISS_DT_RANGE], [PRIOR_CPI_CNT_NO], [FPC_LOAN_ID], [INS_PRINT_DT], [OWNER_COSIGN_TX],
[CPI_BILL_DT], [CPI_PREM_DUE_NO], [CPI_FPC_OPT_BILL_DUE_DAYS_NO], [CPI_DUE_DAYS_NO], [CPI_WNP_DT], [WV_START_DT], [CPI_BILL_CYCLE], [CPI_NETPREMIUM_AMOUNT_NO], [CPI_BILLED_NET_TOTAL_NO], [CPI_BILLED_DT],
[CPI_MAX_BILL_DATE_IN], [CPI_BALANCE_NO], [CPI_FPC_NON_PAY_DAYS_NO], [CPI_NEW_TXN_IN], [CPI_TXN_TYPE_CD],
[CPI_NET_CHARGES], [CALC_WNON_PDT], [CALC_RPT_NON_PTD], [CPI_FPC_OPT_RPT_NON_PAY_DAYS_NO], [CPI_STATUS_CD], [CPI_HOLD_IN], [CPI_MONTHLY_BILLING_IN], [REPORT_GROUPBY_TX]) 

Select (CASE when L.BRANCH_CODE_TX is null or L.BRANCH_CODE_TX = '' then 'No Branch' else L.BRANCH_CODE_TX END) as LOAN_BRANCHCODE_TX,
	CASE WHEN ISNULL(L.DIVISION_CODE_TX,'') = ''
		THEN '0'
		ELSE L.DIVISION_CODE_TX
	END AS LOAN_DIVISIONCODE_TX,
	ISNULL(RC_DIVISION.DESCRIPTION_TX,RC_SC.DESCRIPTION_TX) AS LOAN_TYPE_TX,
	RC.TYPE_CD as REQUIREDCOVERAGE_CODE_TX,
	RC_COVERAGETYPE.MEANING_TX as REQUIREDCOVERAGE_TYPE_TX,
--LOAN
	L.NUMBER_TX AS LOAN_NUMBER_TX, 
	SUBSTRING(@FillerZero, 1, 18 - len(L.NUMBER_TX)) + CAST(L.NUMBER_TX AS nvarchar(18)) AS LOAN_NUMBERSORT_TX,
	L.EFFECTIVE_DT AS LOAN_EFFECTIVE_DT, 
	L.MATURITY_DT AS LOAN_MATURITY_DT, 
	C.LOAN_BALANCE_NO AS LOAN_BALANCE_NO, 
	L.OFFICER_CODE_TX AS LOAN_OFFICERCODE_TX, 
	L.CREDIT_SCORE_CD as [LOAN_CREDITSCORECODE_TX],
--LENDER
	LND.CODE_TX AS LENDER_CODE_TX, 
	LND.NAME_TX AS LENDER_NAME_TX,
--COLLATERAL
	C.COLLATERAL_NUMBER_NO AS COLLATERAL_NUMBER_NO,
	CC.CODE_TX as COLLATERAL_CODE_TX,
--OWNER
	 O.LAST_NAME_TX AS OWNER_LASTNAME_TX, 
	O.FIRST_NAME_TX AS OWNER_FIRSTNAME_TX, 
	O.MIDDLE_INITIAL_TX AS OWNER_MIDDLEINITIAL_TX,
	AO.LINE_1_TX as OWNER_LINE1_TX,	
	AO.LINE_2_TX as OWNER_LINE2_TX,
	AO.STATE_PROV_TX as OWNER_STATE_TX,
	AO.CITY_TX as OWNER_CITY_TX,
	AO.POSTAL_CODE_TX as OWNER_ZIP_TX,
--PROPERTY
	P.YEAR_TX AS COLLATERAL_YEAR_TX, 
	P.MAKE_TX AS COLLATERAL_MAKE_TX, 
	P.MODEL_TX AS COLLATERAL_MODEL_TX, 
	P.VIN_TX AS COLLATERAL_VIN_TX, 
	P.DESCRIPTION_TX AS COLLATERAL_EQUIP_TX, 
	AM.LINE_1_TX as COLLATERAL_LINE1_TX,
	AM.LINE_2_TX as COLLATERAL_LINE2_TX,
	AM.STATE_PROV_TX as COLLATERAL_STATE_TX,
	AM.CITY_TX as COLLATERAL_CITY_TX,
	AM.POSTAL_CODE_TX as COLLATERAL_ZIP_TX,
--COVERAGE
	CASE 
	WHEN RC.NOTICE_DT is not null and RC.NOTICE_SEQ_NO > 0 
		THEN cast(RC.NOTICE_SEQ_NO as char(1)) +  ' ' + NRef.MEANING_TX + ' ' + CONVERT(nvarchar(10), RC.NOTICE_DT, 101) 
	ELSE CASE 
		WHEN L.STATUS_CD in ('N','O','P') THEN LSRef.MEANING_TX
		WHEN C.STATUS_CD in ('R','S','X') THEN CSRef.MEANING_TX
		WHEN L.STATUS_CD = 'B' and C.STATUS_CD = 'Z' and RC.STATUS_CD in ('A','D') and RC.SUMMARY_STATUS_CD in ('A','N') 
				THEN LSRef.MEANING_TX + ' ' + CSRef.MEANING_TX + ' ' + RCISRef.MEANING_TX
		WHEN L.STATUS_CD = 'B' and C.STATUS_CD = 'Z' and RC.STATUS_CD in ('A','D') and RC.SUMMARY_STATUS_CD not in ('A','N') 
				THEN LSRef.MEANING_TX + ' ' + CSRef.MEANING_TX + ' ' + RCISSRef.MEANING_TX + ' ' + RCISRef.MEANING_TX
		WHEN L.STATUS_CD = 'B' and C.STATUS_CD = 'Z' and RC.STATUS_CD = 'T' and RC.SUMMARY_STATUS_CD in ('A','N') 
				THEN LSRef.MEANING_TX + ' ' + CSRef.MEANING_TX + ' ' + RCSRef.MEANING_TX + ' ' + RCISRef.MEANING_TX
		WHEN L.STATUS_CD = 'B' and C.STATUS_CD = 'Z' and RC.STATUS_CD = 'T' and RC.SUMMARY_STATUS_CD not in ('A','N') 
				THEN LSRef.MEANING_TX + ' ' + CSRef.MEANING_TX + ' ' + RCSRef.MEANING_TX + ' ' + RCISSRef.MEANING_TX + ' ' + RCISRef.MEANING_TX
		WHEN L.STATUS_CD = 'B' and C.STATUS_CD = 'Z' and RC.STATUS_CD not in ('A','D','T')
				THEN LSRef.MEANING_TX + ' ' + CSRef.MEANING_TX + ' ' + RCSRef.MEANING_TX
		WHEN C.STATUS_CD = 'Z' and RC.STATUS_CD in ('A','D') and RC.SUMMARY_STATUS_CD in ('A','N') 
				THEN CSRef.MEANING_TX + ' ' + RCISRef.MEANING_TX
		WHEN C.STATUS_CD = 'Z' and RC.STATUS_CD in ('A','D') and RC.SUMMARY_STATUS_CD not in ('A','N') 
				THEN CSRef.MEANING_TX + ' ' + RCISSRef.MEANING_TX + ' ' + RCISRef.MEANING_TX
		WHEN C.STATUS_CD = 'Z' and RC.STATUS_CD = 'T' and RC.SUMMARY_STATUS_CD in ('A','N') 
				THEN CSRef.MEANING_TX + ' ' + RCSRef.MEANING_TX + ' ' + RCISRef.MEANING_TX
		WHEN C.STATUS_CD = 'Z' and RC.STATUS_CD = 'T' and RC.SUMMARY_STATUS_CD not in ('A','N') 
				THEN CSRef.MEANING_TX + ' ' + RCSRef.MEANING_TX + ' ' + RCISSRef.MEANING_TX + ' ' + RCISRef.MEANING_TX
		WHEN C.STATUS_CD = 'Z' and RC.STATUS_CD not in ('A','D','T')
				THEN CSRef.MEANING_TX + ' ' + RCSRef.MEANING_TX
		WHEN L.STATUS_CD = 'A' and RC.STATUS_CD in ('A','D') and RC.SUMMARY_STATUS_CD in ('A','N') 
				THEN RCISRef.MEANING_TX
		WHEN L.STATUS_CD = 'A' and RC.STATUS_CD in ('A','D') and RC.SUMMARY_STATUS_CD not in ('A','N') 
				THEN RCISSRef.MEANING_TX + ' ' + RCISRef.MEANING_TX
		WHEN L.STATUS_CD = 'A' and RC.STATUS_CD = 'T' and RC.SUMMARY_STATUS_CD in ('A','N') 
				THEN RCSRef.MEANING_TX + ' ' + RCISRef.MEANING_TX
		WHEN L.STATUS_CD = 'A' and RC.STATUS_CD = 'T' and RC.SUMMARY_STATUS_CD not in ('A','N') 
				THEN RCSRef.MEANING_TX + ' ' + RCISSRef.MEANING_TX + ' ' + RCISRef.MEANING_TX
		WHEN L.STATUS_CD = 'A' and RC.STATUS_CD not in ('A','D','T')
				THEN RCSRef.MEANING_TX
		WHEN L.STATUS_CD = 'B' and RC.STATUS_CD in ('A','D') and RC.SUMMARY_STATUS_CD in ('A','N') 
				THEN LSRef.MEANING_TX + ' ' + RCISRef.MEANING_TX
		WHEN L.STATUS_CD = 'B' and RC.STATUS_CD in ('A','D') and RC.SUMMARY_STATUS_CD not in ('A','N') 
				THEN LSRef.MEANING_TX + ' ' + RCISSRef.MEANING_TX + ' ' + RCISRef.MEANING_TX
		WHEN L.STATUS_CD = 'B' and RC.STATUS_CD = 'T' and RC.SUMMARY_STATUS_CD in ('A','N') 
				THEN LSRef.MEANING_TX + ' ' + RCSRef.MEANING_TX + ' ' + RCISRef.MEANING_TX
		WHEN L.STATUS_CD = 'B' and RC.STATUS_CD = 'T' and RC.SUMMARY_STATUS_CD not in ('A','N') 
				THEN LSRef.MEANING_TX + ' ' + RCSRef.MEANING_TX + ' ' + RCISSRef.MEANING_TX + ' ' + RCISRef.MEANING_TX
		WHEN L.STATUS_CD = 'B' and RC.STATUS_CD not in ('A','D','T')
				THEN LSRef.MEANING_TX + ' ' + RCSRef.MEANING_TX
	   END
	END as COVERAGE_STATUS_TX,
--CPI
	CR.NAME_TX as INSCOMPANY_NAME_TX,
	FPC.NUMBER_TX as INSCOMPANY_POLICY_NO,
	FPC.EFFECTIVE_DT as INSCOMPANY_EFF_DT,
	CONVERT(nvarchar(8), FPC.EFFECTIVE_DT, 112) as INSCOMPANY_EFFDTSORT_TX,
	FPC.EXPIRATION_DT as INSCOMPANY_EXP_DT,
	FPC.CANCELLATION_DT as INSCOMPANY_CAN_DT,
	isnull(FPC.CANCELLATION_DT,FPC.EXPIRATION_DT) as INSCOMPANY_EXPCXL_DT,
	FPC.ISSUE_DT as INSCOMPANY_ISSUE_DT,
	CPQ.TERM_NO as CPI_QUOTE_TERM_NO,
	ISNULL(CPISQ.IPRM_AMOUNT_NO,0) as CPI_ISSUEDPREMIUM_AMOUNT_NO,
	ISNULL(CPISQ.CPRM_AMOUNT_NO,0) as CPI_CANCELLEDPREMIUM_AMOUNT_NO,
--IDs, STATUS
	L.ID as LOAN_ID,
	C.ID as COLLATERAL_ID,
	P.ID as PROPERTY_ID,
	RC.ID as REQUIREDCOVERAGE_ID,
	FPC.ID AS FPC_ID,
	L.STATUS_CD as LOAN_STATUSCODE,
	LSRef.MEANING_TX as LOAN_STATUSMEANING_TX,
	C.STATUS_CD as COLLATERAL_STATUSCODE,
	CSRef.MEANING_TX as COLLATERAL_STATUSMEANING_TX,
	RC.STATUS_CD as REQUIREDCOVERAGE_STATUSCODE,
	RCSRef.MEANING_TX as REQUIREDCOVERAGE_STATUSMEANING_TX,
	RC.SUB_STATUS_CD as REQUIREDCOVERAGE_SUBSTATUSCODE,
	RC.SUMMARY_STATUS_CD as REQUIREDCOVERAGE_INSSTATUSCODE,
	RCISRef.MEANING_TX as REQUIREDCOVERAGE_INSSTATUSMEANING_TX,
	RC.SUMMARY_SUB_STATUS_CD as REQUIREDCOVERAGE_INSSUBSTATUSCODE,
	RCISSRef.MEANING_TX as REQUIREDCOVERAGE_INSSUBSTATUSMEANING_TX,

	dbo.fn_GetPropertyDescriptionForReports(C.ID) AS PROPERTY_DESCRIPTION,
	
   CASE WHEN ISNULL(CPA_I.REASON_CD,'') = '' THEN 'NONE' ELSE CPA_I.REASON_CD END AS [ISS_REASON_TX],
	FPC.CANCELLATION_DT AS [INS_CXL_DT],
	(ISNULL(CPISQ.IPRM_AMOUNT_NO,0) + ISNULL(CPISQ.IFEE_AMOUNT_NO,0) + ISNULL(CPISQ.ITAX1_AMOUNT_NO,0) + ISNULL(CPISQ.ITAX2_AMOUNT_NO,0) + 
	 ISNULL(CPISQ.ITAX3_AMOUNT_NO,0) + ISNULL(CPISQ.ITAX4_AMOUNT_NO,0) + ISNULL(CPISQ.IOTH_AMOUNT_NO,0)) AS [I_TOT_PRM],
    ABS(ISNULL((SELECT SUM(ISNULL(FTXD.AMOUNT_NO,0)) FROM FINANCIAL_TXN_DETAIL FTXD JOIN FINANCIAL_TXN FTX ON FTXD.FINANCIAL_TXN_ID = FTX.ID and FTX.PURGE_DT IS NULL WHERE FTX.FPC_ID = FPC.ID AND FTXD.PURGE_DT IS NULL AND FTX.TXN_TYPE_CD = 'P'),0))  AS [PI_TOT_PRM],
    ISNULL(CPA_C.TOTAL_PREMIUM_NO,0) AS [C_TOT_PRM],
    0 AS [PC_TOT_PRM],
    CASE  WHEN O.FIRST_NAME_TX IS NULL THEN O.LAST_NAME_TX ELSE RTRIM(O.LAST_NAME_TX + ', ' + ISNULL(O.FIRST_NAME_TX,'') + ' ' + ISNULL(O.MIDDLE_INITIAL_TX,'')) END AS [OWNER_NAME],
    LND.NAME_TX AS	[LOAN_LENDERNAME_TX],
	CASE 
		WHEN DATEDIFF(dd,GETDATE(),FPC.EXPIRATION_DT) <= 30 THEN ' 0-30 Days'
		WHEN DATEDIFF(dd,GETDATE(),FPC.EXPIRATION_DT) <= 60 THEN '31-60 Days'
		WHEN DATEDIFF(dd,GETDATE(),FPC.EXPIRATION_DT) <= 90 THEN '61-90 Days'
		WHEN DATEDIFF(dd,GETDATE(),FPC.EXPIRATION_DT) <= 120 THEN '91-120 Days'
		ELSE 'Over 120 Days'
	END AS [INS_EXP_DT_RANGE],
	CASE
		WHEN DATEDIFF(dd,FPC.EFFECTIVE_DT,GETDATE()) <= 30 THEN ' 0-30 Days'
		WHEN DATEDIFF(dd,FPC.EFFECTIVE_DT,GETDATE()) <= 60 THEN '31- 60 Days'
		WHEN DATEDIFF(dd,FPC.EFFECTIVE_DT,GETDATE()) <= 90 THEN '61-90 Days'
		WHEN DATEDIFF(dd,FPC.EFFECTIVE_DT,GETDATE()) <= 120 THEN '91-120 Days'
		ELSE 'Over 120 Days'
	END AS [INS_ISS_DT_RANGE],
	0 AS [PRIOR_CPI_CNT_NO],
	FPC.LOAN_ID AS [FPC_LOAN_ID],
	RC.NOTICE_DT AS [INS_PRINT_DT],
	CASE WHEN SUBSTRING(OL.OWNER_TYPE_CD,1,1) = 'C' THEN 'C' ELSE '' END AS [OWNER_COSIGN_TX],
	BG_SD.STATEMENT_DT AS [CPI_BILL_DT],
	0 AS [CPI_PREM_DUE_NO],
	RC.ForcedPlcyOptReportNonPayDays AS [CPI_FPC_OPT_BILL_DUE_DAYS_NO],
	BG_SD.PAST_DUE_DAYS AS [CPI_DUE_DAYS_NO],
	RC.START_DT AS [CPI_WNP_DT],
	RC.START_DT AS [WV_START_DT],
	'XX' AS [CPI_BILL_CYCLE],
	ISNULL(CPISQ.IPRM_AMOUNT_NO,0) - ISNULL(CPISQ.CPRM_AMOUNT_NO,0) AS [CPI_NETPREMIUM_AMOUNT_NO],
	CUSTOM_FINANCIAL.NET_AMOUNT AS [CPI_BILLED_NET_TOTAL_NO],
	(SELECT MAX(TXN_DT) FROM FINANCIAL_TXN WHERE TXN_TYPE_CD = 'R' and PURGE_DT is null AND FINANCIAL_TXN.FPC_ID = FPC.ID) AS [CPI_BILLED_DT],
	CASE WHEN (CUSTOM_FINANCIAL.NET_AMOUNT) = 0 THEN '0' ELSE '1' END AS [CPI_MAX_BILL_DATE_IN],
	CUSTOM_FINANCIAL.NET_AMOUNT AS [CPI_BALANCE_NO],
	NULL AS [CPI_FPC_NON_PAY_DAYS_NO],
	CUSTOM_FINANCIAL.NEW_TXN_IN AS [CPI_NEW_TXN_IN],
	'' AS [CPI_TXN_TYPE_CD],
	ISNULL(CPA_I.TOTAL_PREMIUM_NO,0) - abs(ISNULL(CPA_C.TOTAL_PREMIUM_NO,0)) AS [CPI_NET_CHARGES],
	NULL AS [CALC_WNON_PDT],
	NULL AS [CALC_RPT_NON_PTD],
	NULL AS [CPI_FPC_OPT_RPT_NON_PAY_DAYS_NO],
	FPC.STATUS_CD AS [CPI_STATUS_CD],
	FPC.HOLD_IN AS [CPI_HOLD_IN],
	FPC.MONTHLY_BILLING_IN AS [CPI_MONTHLY_BILLING_IN],
	'' AS [REPORT_GROUPBY_CD]

FROM LOAN L
Join LENDER LND on LND.ID = L.LENDER_ID and LND.PURGE_DT IS NULL
Join COLLATERAL C on C.LOAN_ID = L.ID  AND C.PURGE_DT IS NULL
JOIN PROPERTY P ON P.ID = C.PROPERTY_ID AND P.PURGE_DT IS NULL
Join OWNER_LOAN_RELATE OL on OL.LOAN_ID = L.ID AND OL.PRIMARY_IN = 'Y' AND OL.PURGE_DT IS NULL
Join [OWNER] O on O.ID = OL.OWNER_ID AND O.PURGE_DT IS NULL
Join REQUIRED_COVERAGE RC on RC.PROPERTY_ID = P.ID AND RC.PURGE_DT IS NULL
LEFT JOIN COLLATERAL_CODE CC ON CC.ID = C.COLLATERAL_CODE_ID AND CC.PURGE_DT IS NULL
join FORCE_PLACED_CERT_REQUIRED_COVERAGE_RELATE FPCR on FPCR.REQUIRED_COVERAGE_ID = RC.ID AND FPCR.PURGE_DT IS NULL
Join FORCE_PLACED_CERTIFICATE FPC on FPC.ID = FPCR.FPC_ID AND FPC.PURGE_DT IS NULL AND ((FPC.ACTIVE_IN = 'Y' AND @CHECK_ACT = 'Y') OR @CHECK_ACT <> 'Y') and (FPC.LOAN_ID = L.ID or FPC.LOAN_ID is null)
left Join [OWNER_ADDRESS] AO on AO.ID = O.ADDRESS_ID AND AO.PURGE_DT IS NULL
left Join [OWNER_ADDRESS] AM on AM.ID = P.ADDRESS_ID AND AM.PURGE_DT IS NULL
left Join CARRIER CR on CR.ID = FPC.CARRIER_ID AND FPC.PURGE_DT IS NULL
left Join CPI_QUOTE CPQ ON CPQ.ID = FPC.CPI_QUOTE_ID AND CPQ.PURGE_DT IS NULL
LEFT JOIN CPI_ACTIVITY CPA_I ON CPA_I.CPI_QUOTE_ID = CPQ.ID AND CPA_I.TYPE_CD = 'I'	AND CPA_I.PURGE_DT IS NULL

OUTER APPLY (
SELECT PAST_DUE_DAYS, STATEMENT_DT
FROM dbo.GetPastDueDaysDaysAndDate(FPC.ID,RC.DelayedBilling, 
									RC.ForcedPlcyOptReportNonPayDays)
) BG_SD

OUTER APPLY 
(SELECT SUM(TOTAL_PREMIUM_NO) AS TOTAL_PREMIUM_NO, MAX(REASON_CD) AS REASON_CD FROM CPI_ACTIVITY C  
WHERE C.CPI_QUOTE_ID = CPQ.ID AND C.TYPE_CD IN ('C', 'R', 'MT') AND C.PURGE_DT IS NULL
) CPA_C

OUTER APPLY (
SELECT  
SUM(CASE WHEN CD_SQ.TYPE_CD = 'PRM' AND CPA_SQ.TYPE_CD = 'I' THEN CD_SQ.AMOUNT_NO ELSE 0 END) AS IPRM_AMOUNT_NO,
SUM(CASE WHEN CD_SQ.TYPE_CD = 'FEE' AND CPA_SQ.TYPE_CD = 'I' THEN CD_SQ.AMOUNT_NO ELSE 0 END) AS IFEE_AMOUNT_NO,
SUM(CASE WHEN CD_SQ.TYPE_CD = 'OTH' AND CPA_SQ.TYPE_CD = 'I' THEN CD_SQ.AMOUNT_NO ELSE 0 END) AS IOTH_AMOUNT_NO,
SUM(CASE WHEN CD_SQ.TYPE_CD = 'TAX1' AND CPA_SQ.TYPE_CD = 'I' THEN CD_SQ.AMOUNT_NO ELSE 0 END) AS ITAX1_AMOUNT_NO,
SUM(CASE WHEN CD_SQ.TYPE_CD = 'TAX2' AND CPA_SQ.TYPE_CD = 'I' THEN CD_SQ.AMOUNT_NO ELSE 0 END) AS ITAX2_AMOUNT_NO,
SUM(CASE WHEN CD_SQ.TYPE_CD = 'TAX3' AND CPA_SQ.TYPE_CD = 'I' THEN CD_SQ.AMOUNT_NO ELSE 0 END) AS ITAX3_AMOUNT_NO,
SUM(CASE WHEN CD_SQ.TYPE_CD = 'TAX4' AND CPA_SQ.TYPE_CD = 'I' THEN CD_SQ.AMOUNT_NO ELSE 0 END) AS ITAX4_AMOUNT_NO,
SUM(CASE WHEN CD_SQ.TYPE_CD = 'PRM' AND CPA_SQ.TYPE_CD = 'C' THEN CD_SQ.AMOUNT_NO ELSE 0 END) AS CPRM_AMOUNT_NO,
SUM(CASE WHEN CD_SQ.TYPE_CD = 'FEE' AND CPA_SQ.TYPE_CD = 'C' THEN CD_SQ.AMOUNT_NO ELSE 0 END) AS CFEE_AMOUNT_NO,
SUM(CASE WHEN CD_SQ.TYPE_CD = 'OTH' AND CPA_SQ.TYPE_CD = 'C' THEN CD_SQ.AMOUNT_NO ELSE 0 END) AS COTH_AMOUNT_NO, 
SUM(CASE WHEN CD_SQ.TYPE_CD = 'TAX1' AND CPA_SQ.TYPE_CD = 'C' THEN CD_SQ.AMOUNT_NO ELSE 0 END) AS CTAX1_AMOUNT_NO, 
SUM(CASE WHEN CD_SQ.TYPE_CD = 'TAX2' AND CPA_SQ.TYPE_CD = 'C' THEN CD_SQ.AMOUNT_NO ELSE 0 END) AS CTAX2_AMOUNT_NO,
SUM(CASE WHEN CD_SQ.TYPE_CD = 'TAX3' AND CPA_SQ.TYPE_CD = 'C' THEN CD_SQ.AMOUNT_NO ELSE 0 END) AS CTAX3_AMOUNT_NO, 
SUM(CASE WHEN CD_SQ.TYPE_CD = 'TAX4' AND CPA_SQ.TYPE_CD = 'C' THEN CD_SQ.AMOUNT_NO ELSE 0 END) AS CTAX4_AMOUNT_NO
FROM CPI_ACTIVITY CPA_SQ  
JOIN CERTIFICATE_DETAIL CD_SQ ON CD_SQ.CPI_ACTIVITY_ID = CPA_SQ.ID AND CPA_SQ.CPI_QUOTE_ID = CPQ.ID AND CD_SQ.PURGE_DT IS NULL
WHERE CPA_SQ.CPI_QUOTE_ID = CPQ.ID AND CPA_SQ.PURGE_DT IS NULL
) CPISQ
 
OUTER APPLY (
select sum(Amount_no) as NET_AMOUNT, min(FTX.TXN_DT) as MIN_DT, MAX(REASON_TX) AS REASON_TX, MAX(FTA.HOLD_IN) as HOLD_IN, MAX(FTA.NEW_TXN_IN) AS NEW_TXN_IN
from FINANCIAL_TXN FTX left join  
FINANCIAL_TXN_APPLY FTA on FTA.FINANCIAL_TXN_ID = FTX.ID and FTA.NEW_TXN_IN = 'Y' AND FTA.PURGE_DT IS NULL 
where FTX.FPC_ID = FPC.ID AND FTX.PURGE_DT IS NULL
) CUSTOM_FINANCIAL

left Join REF_CODE NRef on NRef.DOMAIN_CD = 'NoticeType' and NRef.CODE_CD = RC.NOTICE_TYPE_CD 
left Join REF_CODE LSRef on LSRef.DOMAIN_CD = 'LoanStatus' and LSRef.CODE_CD = L.STATUS_CD 
left Join REF_CODE CSRef on CSRef.DOMAIN_CD = 'CollateralStatus' and CSRef.CODE_CD = C.STATUS_CD 
left Join REF_CODE RCSRef on RCSRef.DOMAIN_CD = 'RequiredCoverageStatus' and RCSRef.CODE_CD = RC.STATUS_CD 
left Join REF_CODE RCISRef on RCISRef.DOMAIN_CD = 'RequiredCoverageInsStatus' and RCISRef.CODE_CD = RC.SUMMARY_STATUS_CD 
left Join REF_CODE RCISSRef on RCISSRef.DOMAIN_CD = 'RequiredCoverageInsSubStatus' and RCISSRef.CODE_CD = RC.SUMMARY_SUB_STATUS_CD 
left Join REF_CODE RC_DIVISION on RC_DIVISION.DOMAIN_CD = 'ContractType' and RC_DIVISION.CODE_CD = L.DIVISION_CODE_TX
left Join REF_CODE RC_COVERAGETYPE on RC_COVERAGETYPE.DOMAIN_CD = 'Coverage' and RC_COVERAGETYPE.CODE_CD = RC.TYPE_CD 
left Join REF_CODE RC_SC on RC_SC.DOMAIN_CD = 'SecondaryClassification' AND CC.SECONDARY_CLASS_CD = RC_SC.CODE_CD
left Join REF_CODE_ATTRIBUTE RCA_PROP on RC_SC.DOMAIN_CD = RCA_PROP.DOMAIN_CD and RC_SC.CODE_CD = RCA_PROP.REF_CD and RCA_PROP.ATTRIBUTE_CD = 'PropertyType'
CROSS APPLY dbo.fn_FilterCollateralByDivisionCd(C.ID, @Division) fn_FCBD
where 
--L.RECORD_TYPE_CD = 'G' and P.RECORD_TYPE_CD = 'G' and RC.RECORD_TYPE_CD = 'G' and
--L.EXTRACT_UNMATCH_COUNT_NO = 0 and C.EXTRACT_UNMATCH_COUNT_NO = 0 and
--L.STATUS_CD != 'U' and C.STATUS_CD != 'U' and

P.LENDER_ID = @LenderID
and
(L.BRANCH_CODE_TX IN (SELECT STRVALUE FROM @BranchTable) or @Branch = '1' or @Branch = '' or @Branch is NULL OR @Branch = 'ALL')
AND fn_FCBD.loanType IS NOT NULL
and
(RC.TYPE_CD = @Coverage or @Coverage = '1' or @Coverage is NULL)

UPDATE #tmptable 
SET  [CPI_FPC_NON_PAY_DAYS_NO] = 
	(SELECT TOP 1
	REQUIRED_COVERAGE.ForcedPlcyNonPayDays
	FROM REQUIRED_COVERAGE
	WHERE ID = #tmptable.REQUIREDCOVERAGE_ID),
	
	[CPI_FPC_OPT_RPT_NON_PAY_DAYS_NO] =
	(SELECT TOP 1
	REQUIRED_COVERAGE.ForcedPlcyOptReportNonPayDays
	FROM REQUIRED_COVERAGE
	WHERE ID = #tmptable.REQUIREDCOVERAGE_ID)


UPDATE #tmptable
SET [CALC_WNON_PDT] = DATEADD(d,ISNULL([CPI_FPC_NON_PAY_DAYS_NO],365), [CPI_BILL_DT]),
 [CALC_RPT_NON_PTD] = DATEADD(d,ISNULL([CPI_FPC_OPT_RPT_NON_PAY_DAYS_NO],0), [CPI_BILL_DT])
WHERE [CPI_BILL_DT] IS NOT NULL 


IF (@CHECK_DT = 'Y' OR @CHECK_BAL = 'Y' OR @CHECK_OPT_NULL = 'Y' OR @CHECK_CPI_ST = 'Y' OR @RC_ST_NOTP = 'Y' OR @RC_ST_P = 'Y' OR @CHECK_OPT_NULL = 'Y' OR @CHECK_MAX = 'Y' OR @CHECK_ACT_W_DATES = 'Y')
BEGIN
	IF @DEBUGGING = 'T' 
	BEGIN
		SELECT COUNT(*) AS PREX_CNT FROM #tmptable
	END
	BEGIN
		SELECT * INTO #T2 FROM #TMPTABLE 
		TRUNCATE TABLE #TMPTABLE
			  
		INSERT INTO #TMPTABLE SELECT * FROM dbo.#T2 WHERE 1=1
			AND ((DATEDIFF(DAY, [CALC_WNON_PDT], @ReportCreateDate) < 0 AND DATEDIFF(DAY,  @ReportCreateDate , [CALC_RPT_NON_PTD]) <= 0 AND [CPI_FPC_OPT_RPT_NON_PAY_DAYS_NO] IS NOT NULL AND @CHECK_DT = 'Y') OR @CHECK_DT = 'N')	
			AND ((ISNULL([CPI_BILLED_NET_TOTAL_NO], 0) > 0 AND @CHECK_BAL = 'Y') OR @CHECK_BAL = 'N')
			AND ((ISNULL([CPI_STATUS_CD],'') IN('U','C') AND @CHECK_CPI_ST = 'Y') OR @CHECK_CPI_ST = 'N')
			AND ((ISNULL([REQUIREDCOVERAGE_INSSTATUSCODE],'') IN('B','U') AND ISNULL([REQUIREDCOVERAGE_INSSUBSTATUSCODE],'') = 'C' AND @CHECK_RC_ST = 'Y') OR @CHECK_RC_ST = 'N')
			AND ((Not([CPI_FPC_OPT_RPT_NON_PAY_DAYS_NO] Is Null) AND @CHECK_OPT_NULL = 'Y') OR @CHECK_OPT_NULL = 'N')
			AND ((ISNULL([REQUIREDCOVERAGE_STATUSCODE],'') <> 'P' AND @RC_ST_NOTP = 'Y') OR @RC_ST_NOTP = 'N')
			AND ((ISNULL([REQUIREDCOVERAGE_STATUSCODE],'') = 'P' AND @RC_ST_P = 'Y') OR @RC_ST_P = 'N')
			AND ((ISNULL([CPI_NEW_TXN_IN],'N') = 'Y' AND ISNULL([CPI_HOLD_IN],'N') = 'N' AND 
					((@SMP_REPORT_IN = 'Y' AND ISNULL([CPI_MONTHLY_BILLING_IN],'N') = 'Y') OR (@SMP_REPORT_IN <> 'Y' AND ISNULL([CPI_MONTHLY_BILLING_IN],'N') = 'N')) 
				AND @CHECK_MAX = 'Y') OR @CHECK_MAX <> 'Y')
			AND (([INSCOMPANY_EXPCXL_DT] > [WV_START_DT] AND @CHECK_ACT_W_DATES = 'Y') OR @CHECK_ACT_W_DATES <> 'Y')
	END
	IF @DEBUGGING = 'T' 
	BEGIN
		SELECT COUNT(*) AS POSTX_CNT FROM #tmptable
	END
END


--Logic for SMP Reports
IF (@SMP_REPORT_IN = 'Y')
BEGIN

	   SELECT  t.*, 
				ft.term_no as SMP_TERM_NO,  
				ft.amount_no as SMP_TOTAL_AMT_NO, 
				CASE WHEN ISNULL(ft.term_no, 0) > 0 THEN 
					DATEADD(DAY,DATEDIFF(DAY,0,DATEADD(MONTH,ft.term_no - 1,CPIISSUE.ISSUE_DT)),0)
				END AS SMP_START_DT, --START_DTF
				CASE WHEN ISNULL(ft.term_no, 0) > 0 THEN 
					DATEADD(DAY,DATEDIFF(DAY,0,
					    CASE
						  WHEN ISNULL(FPC.CANCELLATION_DT, DATEADD(MONTH,ISNULL(ft.term_no, 0),CPIISSUE.ISSUE_DT)) >= DATEADD(MONTH,ISNULL(ft.term_no, 0)-1,CPIISSUE.ISSUE_DT) AND ISNULL(FPC.CANCELLATION_DT, DATEADD(MONTH,ISNULL(ft.term_no, 0),CPIISSUE.ISSUE_DT)) < DATEADD(MONTH,ISNULL(ft.term_no, 0),CPIISSUE.ISSUE_DT)
						  THEN ISNULL(FPC.CANCELLATION_DT, DATEADD(MONTH,ISNULL(ft.term_no, 0),CPIISSUE.ISSUE_DT))
						  ELSE DATEADD(MONTH,ISNULL(ft.term_no, 0),CPIISSUE.ISSUE_DT)
					   END
					),0)
				END AS SMP_END_DT,
				bg.STATEMENT_DT as SMP_BG_STATEMENT_DT
		INTO #tSMP	
	   FROM  #tmptable t
	    cross apply (SELECT * FROM dbo.fn_GetOutstandingFinancialTxns(t.FPC_ID, default)) as ft
	    join FORCE_PLACED_CERTIFICATE fpc on ft.FPC_ID = fpc.id and fpc.purge_dt is null 
		join FINANCIAL_TXN_APPLY fta on ft.ftx_id = fta.FINANCIAL_TXN_ID and fta.PURGE_DT is null and fta.NEW_TXN_IN = 'Y'
		join BILLING_GROUP bg on fta.BILLING_GROUP_ID = bg.ID and bg.PURGE_DT is null
		OUTER APPLY (
						   SELECT   DATEADD(DAY,DATEDIFF(DAY,0,START_DT), 0) AS ISSUE_DT
						   FROM     CPI_ACTIVITY CPI_ACTIVITY 
						   WHERE    CPI_ACTIVITY.TYPE_CD = 'I'
									AND CPI_ACTIVITY.CPI_QUOTE_ID = FPC.CPI_QUOTE_ID
									AND CPI_ACTIVITY.PURGE_DT IS NULL
						) AS CPIISSUE
     
	 --Update the fields that are used in the report with the new values
      UPDATE   #tSMP
      SET      CPI_BILLED_NET_TOTAL_NO = SMP_TOTAL_AMT_NO, 
               INSCOMPANY_EFF_DT = ISNULL(SMP_START_DT,INSCOMPANY_EFF_DT),
               INSCOMPANY_CAN_DT = ISNULL(SMP_END_DT,INSCOMPANY_CAN_DT),
               INSCOMPANY_EXP_DT = ISNULL(SMP_END_DT,INSCOMPANY_EXP_DT),
               INSCOMPANY_EXPCXL_DT = ISNULL(SMP_END_DT,INSCOMPANY_EXPCXL_DT),
               CPI_BILL_CYCLE = SMP_TERM_NO,
               CPI_DUE_DAYS_NO = DATEDIFF(d, SMP_BG_STATEMENT_DT, GETDATE())

      -- Remove the newly added columns 
      ALTER TABLE #tSMP DROP COLUMN SMP_TOTAL_AMT_NO, SMP_START_DT, SMP_END_DT, SMP_TERM_NO, SMP_BG_STATEMENT_DT
	  
	  
	  -- Insert the new values back to the original table
      TRUNCATE TABLE #tmptable
	  INSERT INTO #tmptable SELECT * FROM #tSMP

END


IF ISNULL(@GroupBySQL,'') <> ''
BEGIN
Set @sqlstring = N'Update #tmpTable Set [REPORT_GROUPBY_TX] = ' + @GroupBySQL
EXECUTE sp_executesql @sqlstring
END

IF @DEBUGGING = 'T'
BEGIN
	SELECT @SortByCode AS SBC, @SortBySQL AS SBS
END

IF ISNULL(@SortBySQL,'') <> ''
BEGIN
Set @sqlstring = N'Update #tmpTable Set [REPORT_SORTBY_TX] = ' + @SortBySQL
EXECUTE sp_executesql @sqlstring
END

If isnull(@HeaderTx,'') <> '' 
Begin
	Set @sqlstring = N'Update #tmpTable Set [REPORT_HEADER_TX] = ' + @HeaderTx
	EXECUTE sp_executesql @sqlstring
End

If isnull(@FooterTx,'') <> '' 
Begin
	Set @sqlstring = N'Update #tmpTable Set [REPORT_FOOTER_TX] = ' + @FooterTx
	EXECUTE sp_executesql @sqlstring
End

SELECT @RecordCount = COUNT(*) from #tmptable
--print @RecordCount

IF @Report_History_ID IS NOT NULL
BEGIN

  Update [UNITRAC-REPORTS].[UNITRAC].DBO.REPORT_HISTORY_NOXML
  Set RECORD_COUNT_NO = @RecordCount
  where ID = @Report_History_ID
    
END

IF NOT @DEBUGGING = 'T'
BEGIN
	Select * from #tmptable 
END
	
IF @DEBUGGING = 'T'
BEGIN
--FOR TESTING
SELECT [LOAN_NUMBER_TX], OWNER_NAME, LOAN_BALANCE_NO, INSCOMPANY_POLICY_NO, INSCOMPANY_EFF_DT, INSCOMPANY_ISSUE_DT, CPI_BALANCE_NO, I_TOT_PRM, ISS_REASON_TX, CPI_DUE_DAYS_NO, [REQUIREDCOVERAGE_STATUSCODE]
FROM #tmptable
--WHERE CPI_BALANCE_NO > 0
ORDER BY OWNER_LASTNAME_TX, OWNER_FIRSTNAME_TX, INSCOMPANY_POLICY_NO, [LOAN_NUMBERSORT_TX]
END

END


GO

