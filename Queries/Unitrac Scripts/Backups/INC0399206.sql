use unitrac

select * from process_definition 
where name_tx like '%1845%'​ and process_type_cd = 'CYCLEPRC' and active_in ='Y'


select fpc.* from loan l
join force_placed_certificate fpc on fpc.loan_id = l.id
join lender le on l.lender_id = le.id 
where le.code_tx = '1845' and l.number_tx = '902450-2'


select * from LENDER_ORGANIZATION lo
join lender le on lo.lender_id = le.id 
where le.code_tx = '1845'


select * from process_log
where process_definition_id = 13846
and update_dt >= '2018-12-01' and end_dt is not null


--DROP TABLE  #tmpPL
SELECT * FROM dbo.PROCESS_LOG_ITEM
WHERE process_log_id in (69825495)


SELECT RELATE_ID INTO #tmpRH FROM dbo.PROCESS_LOG_ITEM
WHERE process_log_id in (67036764,
67569478)
AND RELATE_TYPE_CD = 'Allied.UniTrac.ReportHistory'

--drop table #tmpRH
SELECT REPORT_DATA_XML.value( '(/ReportData/Report/Title/@value)[1]', 'varchar(500)' ) as TITLE,
REPORT_DATA_XML.value( '(/ReportData/Report/StartDate/@value)[1]', 'varchar(500)' ) AS StartDate,
REPORT_DATA_XML.value( '(/ReportData/Report/EndDate/@value)[1]', 'varchar(500)' ) AS EndDate,
 * FROM dbo.REPORT_HISTORY rh
join #tmpRH R on R.relate_ID = rh.id
 where REPORT_DATA_XML.value( '(/ReportData/Report/Title/@value)[1]', 'varchar(500)' ) like '%Payment Increase%'
 and report_id = 54

 select * from report
 where id in (54)


 --2018-12-05 03:16:37.8670000

 		SELECT fpc.id into #tmpFPCIDs
		FROM FORCE_PLACED_CERTIFICATE FPC
		JOIN LOAN L ON FPC.LOAN_ID = L.ID AND L.PURGE_DT IS NULL
		WHERE FPC.PURGE_DT IS NULL
		AND L.LENDER_ID = 322
		AND FPC.PAYMENT_REPORT_DT between '2018-11-21T03:25:18' and '2018-12-05T03:16:48' 
		and fpc.id = 7365158


		--126599113

		select L.BRANCH_CODE_TX, FPC.PAYMENT_REPORT_DT, fpc.* 
		from loan l
join force_placed_certificate fpc on fpc.loan_id = l.id
join lender le on l.lender_id = le.id 
where le.code_tx = '1845' and l.number_tx = '902450-2'





select *
FROM #tmpFPCIDs tmp
JOIN FORCE_PLACED_CERTIFICATE FPC on tmp.ID = FPC.ID
JOIN FORCE_PLACED_CERT_REQUIRED_COVERAGE_RELATE FPCRCR ON FPCRCR.FPC_ID = FPC.ID AND FPCRCR.PURGE_DT IS NULL
JOIN CARRIER CR ON FPC.CARRIER_ID = CR.ID AND CR.PURGE_DT IS NULL	
JOIN REQUIRED_COVERAGE RC ON FPCRCR.REQUIRED_COVERAGE_ID = RC.ID AND RC.PURGE_DT IS NULL					 
JOIN LOAN L ON L.ID = FPC.LOAN_ID AND L.PURGE_DT IS NULL 
JOIN LENDER LND ON LND.ID = L.LENDER_ID AND LND.PURGE_DT IS NULL
JOIN OWNER_LOAN_RELATE OLR ON OLR.LOAN_ID = L.ID AND OLR.PRIMARY_IN = 'Y' AND OLR.PURGE_DT IS NULL
JOIN [OWNER] O ON O.ID = OLR.OWNER_ID AND O.PURGE_DT IS NULL
JOIN PROPERTY P ON RC.PROPERTY_ID = P.ID AND P.PURGE_DT IS NULL											
JOIN COLLATERAL C ON P.ID = C.PROPERTY_ID AND C.PURGE_DT IS NULL AND C.LOAN_ID = L.ID 									
LEFT JOIN OWNER_ADDRESS AM ON AM.ID = P.ADDRESS_ID AND AM.PURGE_DT IS NULL
LEFT JOIN OWNER_ADDRESS AO ON AO.ID = O.ADDRESS_ID AND AO.PURGE_DT IS NULL
LEFT JOIN COLLATERAL_CODE CC ON CC.ID = C.COLLATERAL_CODE_ID AND CC.PURGE_DT IS NULL
LEFT JOIN REF_CODE RC_COVERAGETYPE ON RC_COVERAGETYPE.DOMAIN_CD = 'Coverage' and RC_COVERAGETYPE.CODE_CD = RC.TYPE_CD 
LEFT JOIN REF_CODE RC_DIVISION on RC_DIVISION.DOMAIN_CD = 'ContractType' and RC_DIVISION.CODE_CD = L.DIVISION_CODE_TX 
left Join REF_CODE RC_SC on RC_SC.DOMAIN_CD = 'SecondaryClassification' AND CC.SECONDARY_CLASS_CD = RC_SC.CODE_CD
left Join REF_CODE_ATTRIBUTE RCA_PROP on RC_SC.DOMAIN_CD = RCA_PROP.DOMAIN_CD and RC_SC.CODE_CD = RCA_PROP.REF_CD and RCA_PROP.ATTRIBUTE_CD = 'PropertyType'
LEFT JOIN CPI_QUOTE CPQ ON  CPQ.ID = FPC.CPI_QUOTE_ID AND CPQ.PURGE_DT IS NULL
LEFT JOIN CPI_ACTIVITY CPA_I on CPA_I.CPI_QUOTE_ID = CPQ.ID AND CPA_I.TYPE_CD = 'I'	AND CPA_I.PURGE_DT IS NULL

OUTER APPLY 
(SELECT SUM(TOTAL_PREMIUM_NO) AS TOTAL_PREMIUM_NO, MAX(REASON_CD) AS REASON_CD FROM CPI_ACTIVITY C  
WHERE C.CPI_QUOTE_ID = CPQ.ID AND C.TYPE_CD IN ('C', 'R', 'MT') AND C.PURGE_DT IS NULL
) CPA_C

CROSS APPLY
(
	SELECT 
	-- Note that some of the SUMs use EARNED_PAYMENT_AMOUNT_NO and others use NEW_PAYMENT_AMOUNT_NO or TOTAL_PREMIUM_NO
	-- 04292013 Anu Only use row for EARNED_PAYMENT_AMOUNT (EarnedPremium) for the max ProcessDate
	SUM(CASE WHEN CPI.TYPE_CD  IN('C','MT') AND CPI.PROCESS_DT = CPI_MX.PROCESS_DT THEN CPI.EARNED_PAYMENT_AMOUNT_NO ELSE 0 END) AS EarnedPremium,
	SUM(CASE WHEN CPI.TYPE_CD  IN('C','MT')  AND CPI.PROCESS_DT = CPI_MX.PROCESS_DT THEN CPI.PAYMENT_CHANGE_AMOUNT_NO ELSE 0 END) AS CalcPmtIncr,
	--For Payment decrease ï¿½ we can get the sum of NewPaymentAmount from CPIActivity ï¿½ for Types ï¿½ C, MT, R
	SUM(CASE WHEN CPI.TYPE_CD  IN('C','MT','R') THEN CPI.PAYMENT_CHANGE_AMOUNT_NO ELSE 0 END) AS PmtDecrAmount,
	SUM(CASE WHEN CPI.TYPE_CD  IN('I') THEN CPI.TOTAL_PREMIUM_NO ELSE 0 END) AS CalcIssTtlCharges,
	SUM(CASE WHEN CPI.TYPE_CD  IN('C','MT','R') THEN CPI.TOTAL_PREMIUM_NO ELSE 0 END) AS CalcCanTtlCharges,
	SUM(CASE WHEN CPI.TYPE_CD IN('I') THEN CPI.PRIOR_PAYMENT_AMOUNT_NO ELSE 0 END) AS CPII_PRIOR_PAYMENT_AMOUNT_NO,
	SUM(CASE WHEN CPI.TYPE_CD  IN('C','MT') AND CPI.PROCESS_DT = CPI_MX.PROCESS_DT THEN CPI.EARNED_PAYMENT_AMOUNT_NO ELSE 0 END) AS MAXDATE_CPICMT_EARNED_PAYMENT_AMOUNT_NO,
	SUM(CASE WHEN CPI.TYPE_CD IN('I') THEN CPI.NEW_PAYMENT_AMOUNT_NO ELSE 0 END) AS CPII_NEW_PAYMENT_AMOUNT_NO,
	SUM(CASE WHEN CPI.TYPE_CD  IN('I') THEN CPI.PAYMENT_CHANGE_AMOUNT_NO ELSE 0 END) AS CPII_PAYMENT_CHANGE_AMOUNT_NO,
	SUM(CASE WHEN CPI.TYPE_CD  IN('I') THEN CPI.TOTAL_PREMIUM_NO ELSE 0 END) AS CPII_TOTAL_PREMIUM_AMOUNT_NO,
	SUM(CASE WHEN CPI.TYPE_CD  IN('C','MT','R') THEN CPI.TOTAL_PREMIUM_NO ELSE 0 END) AS CPICMTR_TOTAL_PREMIUM_NO,
	SUM(CASE WHEN CPI.TYPE_CD  IN('C','MT') AND CPI.PROCESS_DT = CPI_MX.PROCESS_DT AND ISNULL(CPI.PRIOR_PAYMENT_AMOUNT_NO,0) <> 0 THEN CPI.PRIOR_PAYMENT_AMOUNT_NO ELSE 0 END) AS MAXDATE_CPICMT_PRIOR_PAYMENT_AMOUNT_NO,		
	SUM(CASE WHEN CPI.TYPE_CD  IN('C','MT') AND CPI.PROCESS_DT = CPI_MX.PROCESS_DT AND ISNULL(CPI.PRIOR_PAYMENT_AMOUNT_NO,0) <> 0 THEN CPI.NEW_PAYMENT_AMOUNT_NO ELSE 0 END) AS MAXDATE_CPICMT_NEW_PAYMENT_AMOUNT_NO,
	SUM(CASE WHEN CPI.TYPE_CD  IN('C','MT','R') THEN CPI.PRIOR_PAYMENT_AMOUNT_NO ELSE 0 END) AS CPICMTR_PRIOR_PAYMENT_AMOUNT_NO
	FROM CPI_ACTIVITY CPI

	CROSS APPLY 
	 (
		SELECT MAX(CPI1.PROCESS_DT) AS PROCESS_DT FROM CPI_ACTIVITY CPI1 
		WHERE CPI1.CPI_QUOTE_ID = CPQ.ID AND CPI1.TYPE_CD  IN('C','MT') AND CPI1.PURGE_DT IS NULL and CPI1.PAYMENT_CHANGE_AMOUNT_NO <> 0
	 ) CPI_MX
 
	WHERE CPI.CPI_QUOTE_ID = CPQ.ID AND CPI.PURGE_DT IS NULL
) CPI_ALL

--ADDED Anu 04/23/2013 to get IPRM_AMOUNT_NO for Increased By Calculation
OUTER APPLY (
	SELECT  
	SUM(CASE WHEN CD_SQ.TYPE_CD = 'PRM' AND CPA_SQ.TYPE_CD = 'I' THEN CD_SQ.AMOUNT_NO ELSE 0 END) AS IPRM_AMOUNT_NO,
	SUM(CASE WHEN CD_SQ.TYPE_CD = 'FEE' AND CPA_SQ.TYPE_CD = 'I' THEN CD_SQ.AMOUNT_NO ELSE 0 END) AS IFEE_AMOUNT_NO,
	SUM(CASE WHEN CD_SQ.TYPE_CD = 'OTH' AND CPA_SQ.TYPE_CD = 'I' THEN CD_SQ.AMOUNT_NO ELSE 0 END) AS IOTH_AMOUNT_NO,
	SUM(CASE WHEN CD_SQ.TYPE_CD = 'TAX1' AND CPA_SQ.TYPE_CD = 'I' THEN CD_SQ.AMOUNT_NO ELSE 0 END) AS ITAX1_AMOUNT_NO,
	SUM(CASE WHEN CD_SQ.TYPE_CD = 'TAX2' AND CPA_SQ.TYPE_CD = 'I' THEN CD_SQ.AMOUNT_NO ELSE 0 END) AS ITAX2_AMOUNT_NO,
	SUM(CASE WHEN CD_SQ.TYPE_CD = 'PRM' AND CPA_SQ.TYPE_CD = 'C' THEN CD_SQ.AMOUNT_NO ELSE 0 END) AS CPRM_AMOUNT_NO,
	SUM(CASE WHEN CD_SQ.TYPE_CD = 'FEE' AND CPA_SQ.TYPE_CD = 'C' THEN CD_SQ.AMOUNT_NO ELSE 0 END) AS CFEE_AMOUNT_NO,
	SUM(CASE WHEN CD_SQ.TYPE_CD = 'OTH' AND CPA_SQ.TYPE_CD = 'C' THEN CD_SQ.AMOUNT_NO ELSE 0 END) AS COTH_AMOUNT_NO, 
	SUM(CASE WHEN CD_SQ.TYPE_CD = 'TAX1' AND CPA_SQ.TYPE_CD = 'C' THEN CD_SQ.AMOUNT_NO ELSE 0 END) AS CTAX1_AMOUNT_NO, 
	SUM(CASE WHEN CD_SQ.TYPE_CD = 'TAX2' AND CPA_SQ.TYPE_CD = 'C' THEN CD_SQ.AMOUNT_NO ELSE 0 END) AS CTAX2_AMOUNT_NO
	FROM CPI_ACTIVITY CPA_SQ 
	JOIN CERTIFICATE_DETAIL CD_SQ ON CD_SQ.CPI_ACTIVITY_ID = CPA_SQ.ID AND CPA_SQ.CPI_QUOTE_ID = CPQ.ID AND CD_SQ.PURGE_DT IS NULL
	WHERE CPA_SQ.CPI_QUOTE_ID = CPQ.ID AND CPA_SQ.PURGE_DT IS NULL
) CPISQ

OUTER APPLY
(SELECT SUM(AMOUNT_NO) as NET_AMOUNT FROM FINANCIAL_TXN FTX WHERE FTX.FPC_ID = FPC.ID AND FTX.PURGE_DT IS NULL
) FTX
CROSS APPLY dbo.fn_FilterCollateralByDivisionCd(C.ID, '3') fn_FCBD

WHERE 1=1
AND L.RECORD_TYPE_CD = 'G' AND RC.RECORD_TYPE_CD = 'G' AND P.RECORD_TYPE_CD = 'G'
--AND L.EXTRACT_UNMATCH_COUNT_NO = 0 and C.EXTRACT_UNMATCH_COUNT_NO = 0
AND FPC.PURGE_DT IS NULL
AND (LND.ID = 322)
AND L.BRANCH_CODE_TX IN ('1845')
AND fn_FCBD.loanType IS NOT NULL
--AND (RC.TYPE_CD = @Coverage or @Coverage = '1' or @Coverage is NULL)
--AND (@FIL_DATERANGE = 'F' OR (@FIL_DATERANGE = 'T' AND FPC.ID in (select ID from #tmpFPCIDs)))
--AND (@FIL_DATERANGE_SPECIAL = 'F' OR (@FIL_DATERANGE_SPECIAL = 'T' AND FPC.ID in (select ID from #tmpFPCIDs) 
	AND ISNULL(FPC.HOLD_IN,'N') = 'N' AND FPC.MONTHLY_BILLING_IN = 'N' 
	--AND ((FTX.NET_AMOUNT IS NOT NULL AND FTX.NET_AMOUNT > 0) OR (FTX.NET_AMOUNT IS NULL AND ISNULL(CPA_I.TOTAL_PREMIUM_NO,0) - ABS(ISNULL(CPA_C.TOTAL_PREMIUM_NO,0)) > 0))

