--Payment Increase Notice History and Config Info

SELECT *
FROM LENDER
WHERE CODE_TX = '6155'

SELECT *
FROM LENDER_REPORT_CONFIG
WHERE LENDER_ID = 730 AND DESCRIPTION_TX like 'Payment Increase %'

SELECT *
FROM REPORT_CONFIG
WHERE CODE_TX = 'PI1LP-IN01-BLNK'

SELECT *
FROM REPORT_HISTORY
WHERE LENDER_ID = 730 AND CREATE_DT >= '2016-12-10' AND REPORT_ID = 58 AND ID = 9458598

SELECT *
FROM DOCUMENT_CONTAINER
WHERE ID = 59192893
--39827675

SELECT RELATE_ID INTO #tmpRH FROM dbo.PROCESS_LOG_ITEM
WHERE PROCESS_LOG_ID IN (40256362) AND RELATE_TYPE_CD LIKE '%reporthistory'

SELECT RELATE_ID INTO #tmpNN FROM dbo.PROCESS_LOG_ITEM
WHERE PROCESS_LOG_ID IN (39827675) AND RELATE_TYPE_CD LIKE '%cert%'


SELECT ID INTO #tmpPL FROM dbo.PROCESS_LOG
WHERE PROCESS_DEFINITION_ID IN ( 14151)AND UPDATE_DT >= '2016-11-01'
AND STATUS_CD = 'Complete'


SELECT rh.REPORT_DATA_XML.value( '(/ReportData/Report/WorkItemId/@value)[1]', 'varchar(500)' ) as [WI.ID],
	rh.REPORT_DATA_XML.value( '(/ReportData/Report/ProcessDefinitionID/@value)[1]', 'varchar(500)' ) as [PD.ID],
	rh.REPORT_DATA_XML.value( '(/ReportData/Report/ProcessLogID/@value)[1]', 'varchar(500)' ) as [ProcessLog.ID],
	rh.REPORT_DATA_XML.value( '(/ReportData/Report/Title/@value)[1]', 'varchar(500)' ) as TITLE, 
	rh.REPORT_DATA_XML.value( '(/ReportData/Report/ReportType/@value)[1]', 'varchar(500)' ) AS ReportType,
	rh.REPORT_DATA_XML.value( '(/ReportData/Report/Branches/Branch)[1]', 'varchar(500)' ) AS Branch,
	rh.REPORT_DATA_XML.value( '(/ReportData/Report/Division/@value)[1]', 'varchar(500)' ) AS Division,
	rh.REPORT_DATA_XML.value( '(/ReportData/Report/Coverage/@value)[1]', 'varchar(500)' ) AS Coverage,
	rh.REPORT_DATA_XML.value( '(/ReportData/Report/GroupByTx/@value)[1]', 'varchar(500)' ) AS GroupByTx,
	rh.REPORT_DATA_XML.value( '(/ReportData/Report/ReportConfig/@value)[1]', 'varchar(500)' ) AS ReportConfig,
		rh.REPORT_DATA_XML.value( '(/ReportData/Report/SortByTx/@value)[1]', 'varchar(500)' ) AS SortByCode,
		rh.REPORT_DATA_XML.value( '(/ReportData/Report/StartDate/@value)[1]', 'varchar(500)' ) AS StartDate,
		rh.REPORT_DATA_XML.value( '(/ReportData/Report/EndDate/@value)[1]', 'varchar(500)' ) AS EndDate,
	* FROM dbo.REPORT_HISTORY rh
WHERE rh.REPORT_DATA_XML.value( '(/ReportData/Report/ProcessLogID/@value)[1]', 'varchar(500)' ) IN (SELECT * FROM #tmpPL)
 AND REPORT_ID = 58
----------------------------------

UPDATE  [UniTrac].[dbo].[REPORT_HISTORY]
SET     STATUS_CD = 'PEND' ,
        RETRY_COUNT_NO = 0 ,
        MSG_LOG_TX = NULL ,
        RECORD_COUNT_NO = 0 ,
        ELAPSED_RUNTIME_NO = 0,
		UPDATE_DT = GETDATE(), DOCUMENT_CONTAINER_ID = NULL,
REPORT_DATA_XML.modify('replace value of (/ReportData/Report/StartDate/@value)[1] with "2016-11-26T02:36:48"') 
--	, REPORT_DATA_XML = ''
--		,REPORT_ID = '27'
--SELECT * FROM dbo.REPORT_HISTORY
WHERE   ID IN (SELECT * FROM #tmpRH) AND REPORT_ID = '58'


SELECT * FROM dbo.LENDER_REPORT_CONFIG
WHERE LENDER_ID = '386' AND DESCRIPTION_TX = 'Statement of Charges Earned (Cumulative)'

--Payment Increase Notice SP
exec Report_PaymentIncreaseNotices @LenderCode=N'6155',@Branch=N'',@Division=N'3',@Coverage=N'PHYS-DAMAGE',@ReportType=N'PI1LP-IN01-BLNK',@GroupByCode=N'',@SortByCode=N'PolicyNumber',@FilterByCode=N'PI1LP-IN01-BLNK',@ReportConfig=N'PI1LP-IN01-6155',@Report_History_ID=N''
-----------------------------------

--***********************************************************************************************
---If Missing, there are Two Reasons
--1) FPC.ISSUE_DT does not fall within last 30 day window
--2) FTX.NET_AMOUNT = 0
--***********************************************************************************************


---FPC Updates to ensure ISSUE_DT falls within 30 day window. 
--Date logic is in this query:
--		DATEADD(DAY, CASE WHEN FPC.QUICK_ISSUE_IN = 'Y' THEN 0 
--			ELSE ISNULL(RC.PmtOptIncrDelayedBilling,0) 
--			END, FPC.ISSUE_DT),RC.PmtOptIncrDelayedBilling
--DROP TABLE #tmp3
SELECT *
--,       ISSUE_DT , *
--  SELECT       * INTO UniTracHDStorage..INC0276323_2
FROM    FORCE_PLACED_CERTIFICATE
--WHERE ID IN (5576000,5595373,5595375,5595380,5595382)
WHERE   NUMBER_TX IN ( 'MQS0001843', 'AJX0655662', 'AJX0648682', 'AJX0655675',
                       'AJX0655461', 'AJX0655466', 'AJX0655465', 'AJX0655467',
                       'AJX0648652', 'AJX0648655', 'AJX0648656', 'AJX0648677',
                       'AJX0648497', 'AJX0655435', 'AJX0648498', 'AJX0655430',
                       'AJX0648468', 'AJX0648469', 'AJX0655315', 'AJX0648473',
                       'AJX0655338', 'AJX0659777', 'MQS0005211', 'AJX0669291',
                       'AJX0648548', 'AJX0655498', 'AJX0655502', 'AJX0648554',
                       'AJX0648588', 'AJX0655290', 'AJX0655292', 'AJX0655291',
                       'AJX0655237', 'AJX0655525', 'AJX0655522', 'AJX0655524',
                       'AJX0655526', 'AJX0655527', 'AJX0655542', 'AJX0655541',
                       'AJX0648438', 'AJX0655488', 'AJX0648537', 'AJX0655494',
                       'AJX0648547', 'AJX0648544', 'AJX0648540', 'AJX0648551',
                       'AJX0648710', 'AJX0648711', 'AJX0648712', 'AJX0655218',
                       'AJX0655459', 'AJX0648522', 'AJX0648517', 'AJX0655468',
                       'AJX0648590', 'AJX0648595', 'AJX0648599', 'AJX0648596',
                       'AJX0655455', 'AJX0655458', 'AJX0655460', 'AJX0655463',
                       'AJX0655301', 'AJX0655309', 'AJX0655310', 'AJX0655312',
                       'AJX0655429', 'AJX0655416', 'AJX0655431', 'AJX0648500',
                       'AJX0648483', 'AJX0648607', 'AJX0655548', 'AJX0655550',
                       'AJX0655553', 'AJX0648622', 'AJX0648629', 'AJX0655566',
                       'AJX0648609', 'AJX0648523', 'AJX0648521', 'AJX0648542',
                       'AJX0648556', 'AJX0648563', 'AJX0648578', 'AJX0648581',
                       'AJX0655561', 'AJX0655583', 'AJX0655588', 'AJX0655612',
                       'AJX0655543', 'AJX0648433', 'AJX0648453', 'AJX0648491',
                       'AJX0648676', 'AJX0648678', 'AJX0648683', 'AJX0648686',
                       'AJX0655506', 'AJX0655508', 'AJX0655510', 'AJX0655515',
                       'AJX0648639', 'AJX0648642', 'AJX0648648', 'AJX0655587',
                       'AJX0648511', 'AJX0648516', 'AJX0655453', 'AJX0648520',
                       'AJX0648501', 'AJX0655439', 'AJX0648503', 'AJX0648505',
                       'AJX0655603', 'AJX0655613', 'AJX0655618', 'AJX0655624',
                       'AJX0655420', 'AJX0655425', 'AJX0655427', 'AJX0655433',
                       'AJX0648615', 'AJX0648627', 'AJX0648632', 'AJX0648641',
                       'AJX0648499', 'AJX0648502', 'AJX0648507', 'AJX0648514',
                       'AJX0648633', 'AJX0655318', 'AJX0655325', 'AJX0655321',
                       'AJX0648439', 'AJX0648440', 'AJX0648441', 'AJX0648444',
                       'AJX0648475', 'AJX0648569', 'AJX0648576', 'AJX0655520',
                       'AJX0648671', 'AJX0648674', 'AJX0648673', 'AJX0648704',
                       'AJX0648566', 'AJX0655509', 'AJX0655512', 'AJX0655514',
                       'AJX0648526', 'AJX0648528', 'AJX0648527', 'AJX0648531',
                       'AJX0648693', 'AJX0655679', 'AJX0655687', 'AJX0655682',
                       'AJX0655482', 'AJX0655489', 'AJX0655491', 'AJX0655490',
                       'AJX0648699', 'AJX0648697', 'AJX0648703', 'AJX0648706',
                       'AJX0655322', 'AJX0655331', 'AJX0655329', 'AJX0655334',
                       'AJX0655628', 'AJX0655635', 'AJX0648668', 'AJX0648670',
                       'AJX0655240', 'AJX0655249', 'AJX0655253', 'AJX0655267',
                       'AJX0648423', 'AJX0648421', 'AJX0655223', 'AJX0648425',
                       'AJX0648427', 'AJX0655230', 'AJX0648435', 'AJX0655244',
                       'AJX0655271', 'AJX0655284', 'AJX0655287', 'AJX0655288',
                       'AJX0655544', 'AJX0655547', 'AJX0655554', 'AJX0655556',
                       'AJX0655434', 'AJX0655438', 'AJX0655448', 'AJX0655446',
                       'AJX0648696', 'AJX0648708', 'AJX0655693', 'AJX0648700',
                       'AJX0655519', 'AJX0648583', 'AJX0655528', 'AJX0648586',
                       'AJX0648601', 'AJX0648603', 'AJX0648616', 'AJX0648618',
                       'AJX0655316', 'AJX0655611', 'AJX0655615', 'AJX0655625',
                       'AJX0655629', 'AJX0655632', 'AJX0655709', 'MQS0002668',
                       'AJX0648550', 'AJX0655697', 'AJX0655707', 'MQS0001844',
                       'AJX0655716', 'AJX0655221', 'AJX0655227', 'AJX0655236',
                       'AJX0648485', 'AJX0655396', 'AJX0648494', 'AJX0655412',
                       'AJX0648695', 'AJX0648687', 'AJX0648690', 'AJX0648689',
                       'AJX0648649', 'AJX0655596', 'AJX0655608', 'AJX0655601',
                       'AJX0655352', 'AJX0655387', 'AJX0655406', 'AJX0655399',
                       'AJX0648585', 'AJX0648476', 'AJX0655330', 'AJX0655336',
                       'AJX0648479', 'AJX0648481', 'AJX0655345', 'AJX0648482',
                       'AJX0655496', 'AJX0655497', 'AJX0655499', 'AJX0655505',
                       'AJX0648519', 'AJX0648459', 'AJX0648463', 'AJX0655299',
                       'AJX0648504', 'AJX0655447', 'AJX0648508', 'AJX0648509',
                       'AJX0648445', 'AJX0655259', 'AJX0648449', 'AJX0648451' )
-- ID IN (SELECT * FROM #tmp) 
--AND cast(ISSUE_DT AS DATE) > CAST(GETDATE()-30 AS DATE)
ORDER BY FORCE_PLACED_CERTIFICATE.ID

--5576000	2016-03-25 02:27:26.8730000
--5595373	2016-04-08 02:20:09.5430000
--5595375	2016-04-08 02:20:15.1930000
--5595380	2016-04-08 02:20:29.8400000
--5595382	2016-04-08 02:20:30.5600000

--Update ISSUE_DT to comply
UPDATE FORCE_PLACED_CERTIFICATE
SET ISSUE_DT = '2016-12-10 02:27:26.8730000'
WHERE ID IN (SELECT * FROM #tmp3)

UPDATE FORCE_PLACED_CERTIFICATE
SET ISSUE_DT = '2016-04-08 02:20:09.5430000'
WHERE ID IN (5595373,5595375,5595380,5595382)
-------------------

--Calls out all specific certs by Number in #tmpSpecialFPCs
		SELECT FPC.ID, FPC.QUICK_ISSUE_IN, FPC.ISSUE_DT,fpc.NUMBER_TX,
		DATEADD(DAY, CASE WHEN FPC.QUICK_ISSUE_IN = 'Y' THEN 0 
			ELSE ISNULL(RC.PmtOptIncrDelayedBilling,0) 
			END, FPC.ISSUE_DT) [PmtOptIncrDelayedBilling]
			,
			
			RC.PmtOptIncrDelayedBilling
		FROM FORCE_PLACED_CERTIFICATE FPC
		JOIN LOAN L ON FPC.LOAN_ID = L.ID AND L.PURGE_DT IS NULL
		JOIN FORCE_PLACED_CERT_REQUIRED_COVERAGE_RELATE FPCRCR ON FPCRCR.FPC_ID = FPC.ID AND FPCRCR.PURGE_DT IS NULL
		JOIN REQUIRED_COVERAGE RC ON FPCRCR.REQUIRED_COVERAGE_ID = RC.ID AND RC.PURGE_DT IS NULL	
		WHERE 1=1
		AND FPC.PURGE_DT IS NULL
		AND L.LENDER_ID = 730 AND fpc.ID IN (SELECT * FROM #tmp3)
	--	CAST(FPC.ISSUE_DT AS DATE) >= CAST(GETDATE()-100 AS DATE)
		--AND FPC.ISSUE_DT between '2016-11-29 ' and '2016-12-16 ' --widens the start and end date by 100 days to only pull a subset of FPCs  (based on current date)
		
		 --ORDER BY FPC.ID
		AND 
      ((FPC.QUICK_ISSUE_IN = 'N' AND DATEADD(DAY,ISNULL(RC.PmtOptIncrDelayedBilling,0), FPC.ISSUE_DT)  BETWEEN  '2016-11-29' and '2016-12-16') OR --only pulls the FPC IDs that fall between the Start/End date and have the special logic  (based on current date)
      (FPC.QUICK_ISSUE_IN = 'Y' AND FPC.ISSUE_DT BETWEEN  '2016-11-29' and '2016-12-16')  ---use end date of prev & current cycle for QI  (based on current date)
      )
	  AND QUICK_ISSUE_IN ='Y'
---------------------------


---Actual Inserts for Main Query

CREATE TABLE #tmpSpecialFPCs ( 
	ID bigint,
	QUICK_ISSUE_IN varchar(1) NULL,
	ISSUE_DT DATETIME2(7) NULL,
	NEW_ISSUE_DT DATETIME2(7) NULL
) ON [PRIMARY]

CREATE TABLE #tmpFPCIDs ( 
	ID bigint PRIMARY KEY
) ON [PRIMARY]

	INSERT INTO #tmpSpecialFPCs (ID, QUICK_ISSUE_IN, ISSUE_DT, NEW_ISSUE_DT)
		SELECT FPC.ID, FPC.QUICK_ISSUE_IN, FPC.ISSUE_DT,
		DATEADD(DAY, CASE WHEN FPC.QUICK_ISSUE_IN = 'Y' THEN 0 
			ELSE ISNULL(RC.PmtOptIncrDelayedBilling,0) 
			END, FPC.ISSUE_DT)
		FROM FORCE_PLACED_CERTIFICATE FPC
		JOIN LOAN L ON FPC.LOAN_ID = L.ID AND L.PURGE_DT IS NULL
		JOIN FORCE_PLACED_CERT_REQUIRED_COVERAGE_RELATE FPCRCR ON FPCRCR.FPC_ID = FPC.ID AND FPCRCR.PURGE_DT IS NULL
		JOIN REQUIRED_COVERAGE RC ON FPCRCR.REQUIRED_COVERAGE_ID = RC.ID AND RC.PURGE_DT IS NULL	
		WHERE 1=1
		AND FPC.PURGE_DT IS NULL
		AND L.LENDER_ID = 2242
		AND FPC.ISSUE_DT between '2016-01-24' and '2016-09-11' --widens the start and end date by 100 days to only pull a subset of FPCs (based on current date)

	INSERT INTO #tmpFPCIDs (ID)	
		SELECT SFPC.ID 
		FROM #tmpSpecialFPCs SFPC
		WHERE 
      (
       (SFPC.QUICK_ISSUE_IN = 'N' AND SFPC.NEW_ISSUE_DT BETWEEN '2016-05-03' and '2016-06-03') OR --only pulls the FPC IDs that fall between the Start/End date and have the special logic (based on current date)
       (SFPC.QUICK_ISSUE_IN = 'Y' AND SFPC.NEW_ISSUE_DT BETWEEN '2016-05-02' and '2016-06-02')  ---use end date of prev & current cycle for QI (based on current date)
      )
		GROUP BY SFPC.ID


--Final FPCs for Query
SELECT *
FROM #tmpFPCIDs
-----

---Actual Query Results being pulled into Report
DECLARE	@Branch as nvarchar(max)
DECLARE	@Division as nvarchar(10)
DECLARE @Coverage as nvarchar(100)
DECLARE @FIL_DATERANGE AS varchar(1) = 'F'
DECLARE @FIL_DATERANGE_PIR AS varchar(1) = 'F'
DECLARE @FIL_DATERANGE_SPECIAL AS varchar(1) = 'T'
DECLARE @FIL_FUNDDT_RANGE AS varchar(1) = 'F'
DECLARE @FIL_DATERANGE_FILE AS varchar(1) = 'F'

SET @Branch = '1'
SET @Division = '1'
SET @Coverage=N'PHYS-DAMAGE'

DECLARE @BranchTable AS TABLE(ID int, STRVALUE nvarchar(30))
			INSERT INTO @BranchTable SELECT * FROM SplitFunction(@Branch, ',')  

SELECT *
FROM #tmpFPCIDs tmp
JOIN FORCE_PLACED_CERTIFICATE FPC on tmp.ID = FPC.ID
JOIN FORCE_PLACED_CERT_REQUIRED_COVERAGE_RELATE FPCRCR ON FPCRCR.FPC_ID = FPC.ID AND FPCRCR.PURGE_DT IS NULL
JOIN CARRIER CR ON FPC.CARRIER_ID = CR.ID AND CR.PURGE_DT IS NULL	
JOIN REQUIRED_COVERAGE RC ON FPCRCR.REQUIRED_COVERAGE_ID = RC.ID AND RC.PURGE_DT IS NULL					 
JOIN LOAN L ON L.ID = FPC.LOAN_ID AND L.PURGE_DT IS NULL 
JOIN LENDER LND ON LND.ID = L.LENDER_ID AND LND.PURGE_DT IS NULL
JOIN OWNER_LOAN_RELATE OLR ON OLR.LOAN_ID = L.ID AND OLR.PRIMARY_IN = 'Y' AND OLR.PURGE_DT IS NULL
JOIN [OWNER] O ON O.ID = OLR.OWNER_ID AND O.PURGE_DT IS NULL
JOIN PROPERTY P ON RC.PROPERTY_ID = P.ID AND P.PURGE_DT IS NULL											
JOIN COLLATERAL C ON C.LOAN_ID = L.ID AND C.PROPERTY_ID = P.ID AND C.PURGE_DT IS NULL
LEFT JOIN LENDER_ORGANIZATION LO ON L.BRANCH_CODE_TX = LO.CODE_TX AND L.LENDER_ID = LO.LENDER_ID AND LO.TYPE_CD = 'BRCH' AND LO.PURGE_DT IS NULL
LEFT JOIN [ADDRESS] LOPADDR ON LO.PHYSICAL_ADDRESS_ID = LOPADDR.ID AND LOPADDR.PURGE_DT IS NULL
LEFT JOIN [ADDRESS] LOMADDR ON LO.MAILING_ADDRESS_ID = LOMADDR.ID AND LOMADDR.PURGE_DT IS NULL
LEFT JOIN OWNER_ADDRESS AP ON AP.ID = P.ADDRESS_ID AND AP.PURGE_DT IS NULL
LEFT JOIN [OWNER_ADDRESS] AO ON AO.ID = O.ADDRESS_ID AND AO.PURGE_DT IS NULL
LEFT JOIN REF_CODE RC_COVERAGETYPE ON RC_COVERAGETYPE.DOMAIN_CD = 'Coverage' and RC_COVERAGETYPE.CODE_CD = RC.TYPE_CD 
LEFT JOIN REF_CODE RC_DIVISION on RC_DIVISION.DOMAIN_CD = 'ContractType' and RC_DIVISION.CODE_CD = L.DIVISION_CODE_TX 
LEFT JOIN COLLATERAL_CODE CC ON CC.ID = C.COLLATERAL_CODE_ID AND CC.PURGE_DT IS NULL
left Join REF_CODE RC_SC on RC_SC.DOMAIN_CD = 'SecondaryClassification' AND CC.SECONDARY_CLASS_CD = RC_SC.CODE_CD
left Join REF_CODE_ATTRIBUTE RCA_PROP on RC_SC.DOMAIN_CD = RCA_PROP.DOMAIN_CD and RC_SC.CODE_CD = RCA_PROP.REF_CD and RCA_PROP.ATTRIBUTE_CD = 'PropertyType'
LEFT JOIN SERVICE_CENTER_FUNCTION_LENDER_RELATE SCR ON SCR.LENDER_ID = LND.ID
LEFT JOIN SERVICE_CENTER_FUNCTION SCF ON SCF.ID = SCR.SERVICE_CENTER_FUNCTION_ID
LEFT JOIN SERVICE_CENTER SC ON SC.ID = SCF.SERVICE_CENTER_ID
LEFT JOIN CPI_QUOTE CPQ ON  CPQ.ID = FPC.CPI_QUOTE_ID AND CPQ.PURGE_DT IS NULL
LEFT JOIN CPI_ACTIVITY CPA_I on CPA_I.CPI_QUOTE_ID = CPQ.ID AND CPA_I.TYPE_CD = 'I'	AND CPA_I.PURGE_DT IS NULL AND CPA_I.CREATE_DT <= '2016-09-11'
OUTER APPLY 
(SELECT SUM(TOTAL_PREMIUM_NO) AS TOTAL_PREMIUM_NO, MAX(REASON_CD) AS REASON_CD, MAX(REPORTING_CANCEL_DT) AS REPORTING_CANCEL_DT 
FROM CPI_ACTIVITY C  
WHERE C.CPI_QUOTE_ID = CPQ.ID AND C.TYPE_CD IN ('C', 'R', 'MT') AND C.PURGE_DT IS NULL AND C.CREATE_DT <= '2016-09-11'
) CPA_C
CROSS APPLY
(
SELECT 
-- Note that some of the SUMs use EARNED_PAYMENT_AMOUNT_NO and others use NEW_PAYMENT_AMOUNT_NO or TOTAL_PREMIUM_NO
-- 04292013 Anu Only use row for EARNED_PAYMENT_AMOUNT (EarnedPremium) for the max ProcessDate
SUM(CASE WHEN CPI.TYPE_CD  IN('C','MT') AND CPI.PROCESS_DT = CPI_MX.PROCESS_DT THEN CPI.EARNED_PAYMENT_AMOUNT_NO ELSE 0 END) AS EarnedPremium,
-- (CalcPmtDecrease) C & MT
SUM(CASE WHEN CPI.TYPE_CD  IN('C','MT')  AND CPI.PROCESS_DT = CPI_MX.PROCESS_DT THEN CPI.PAYMENT_CHANGE_AMOUNT_NO ELSE 0 END) AS CalcPmtIncr,
--For Payment decrease � we can get the sum of NewPaymentAmount from CPIActivity � for Types � C, MT, R
SUM(CASE WHEN CPI.TYPE_CD  IN('C','MT','R') THEN CPI.PAYMENT_CHANGE_AMOUNT_NO ELSE 0 END) AS PmtDecrAmount,
SUM(CASE WHEN CPI.TYPE_CD  IN('I') THEN CPI.TOTAL_PREMIUM_NO ELSE 0 END) AS CalcIssTtlCharges,
SUM(CASE WHEN CPI.TYPE_CD  IN('C','MT','R') THEN CPI.TOTAL_PREMIUM_NO ELSE 0 END) AS CalcCanTtlCharges
FROM CPI_ACTIVITY CPI
CROSS APPLY 
 (
	SELECT MAX(CPI1.PROCESS_DT) AS PROCESS_DT FROM CPI_ACTIVITY CPI1 
	WHERE CPI1.CPI_QUOTE_ID = CPQ.ID AND CPI1.TYPE_CD  IN('C','MT') AND CPI1.PURGE_DT IS NULL AND CPI1.CREATE_DT <= '2016-09-11'
 ) CPI_MX
 WHERE CPI.CPI_QUOTE_ID = CPQ.ID AND CPI.PURGE_DT IS NULL AND CPI.CREATE_DT <= '2016-09-11'
) CPI_ALL
--ADDED Anu 04/23/2013 to get IPRM_AMOUNT_NO for Increased By Calculation
OUTER APPLY (
SELECT  
SUM(CASE WHEN CD_SQ.TYPE_CD = 'PRM' AND CPA_SQ.TYPE_CD = 'I' THEN CD_SQ.AMOUNT_NO ELSE 0 END) AS IPRM_AMOUNT_NO,
SUM(CASE WHEN CD_SQ.TYPE_CD = 'FEE' AND CPA_SQ.TYPE_CD = 'I' THEN CD_SQ.AMOUNT_NO ELSE 0 END) AS IFEE_AMOUNT_NO,
SUM(CASE WHEN CD_SQ.TYPE_CD = 'OTH' AND CPA_SQ.TYPE_CD = 'I' THEN CD_SQ.AMOUNT_NO ELSE 0 END) AS IOTH_AMOUNT_NO,
SUM(CASE WHEN CD_SQ.TYPE_CD = 'TAX1' AND CPA_SQ.TYPE_CD = 'I' THEN CD_SQ.AMOUNT_NO ELSE 0 END) AS ITAX1_AMOUNT_NO,
SUM(CASE WHEN CD_SQ.TYPE_CD = 'TAX2' AND CPA_SQ.TYPE_CD = 'I' THEN CD_SQ.AMOUNT_NO ELSE 0 END) AS ITAX2_AMOUNT_NO,
SUM(CASE WHEN CD_SQ.TYPE_CD = 'PRM' AND CPA_SQ.TYPE_CD = 'C' THEN CD_SQ.AMOUNT_NO ELSE 0 END) AS CPRM_AMOUNT_NO,
SUM(CASE WHEN CD_SQ.TYPE_CD = 'FEE' AND CPA_SQ.TYPE_CD = 'C' THEN CD_SQ.AMOUNT_NO ELSE 0 END) AS CFEE_AMOUNT_NO,
SUM(CASE WHEN CD_SQ.TYPE_CD = 'OTH' AND CPA_SQ.TYPE_CD = 'C' THEN CD_SQ.AMOUNT_NO ELSE 0 END) AS COTH_AMOUNT_NO, 
SUM(CASE WHEN CD_SQ.TYPE_CD = 'TAX1' AND CPA_SQ.TYPE_CD = 'C' THEN CD_SQ.AMOUNT_NO ELSE 0 END) AS CTAX1_AMOUNT_NO, 
SUM(CASE WHEN CD_SQ.TYPE_CD = 'TAX2' AND CPA_SQ.TYPE_CD = 'C' THEN CD_SQ.AMOUNT_NO ELSE 0 END) AS CTAX2_AMOUNT_NO
FROM CPI_ACTIVITY CPA_SQ 
JOIN CERTIFICATE_DETAIL CD_SQ ON CD_SQ.CPI_ACTIVITY_ID = CPA_SQ.ID AND CPA_SQ.CPI_QUOTE_ID = CPQ.ID AND CD_SQ.PURGE_DT IS NULL
WHERE CPA_SQ.CPI_QUOTE_ID = CPQ.ID AND CPA_SQ.PURGE_DT IS NULL AND CPA_SQ.CREATE_DT <= '2016-09-11'
) CPISQ

OUTER APPLY(SELECT SUM(AMOUNT_NO) as NET_AMOUNT FROM FINANCIAL_TXN FTX 
WHERE FTX.FPC_ID = FPC.ID AND FTX.PURGE_DT IS NULL
and TXN_DT <= '2016-09-11' and TXN_TYPE_CD != 'P'
) FTX
CROSS APPLY dbo.fn_FilterCollateralByDivisionCd(C.ID, @Division) fn_FCBD

WHERE 1=1
AND L.RECORD_TYPE_CD = 'G' AND RC.RECORD_TYPE_CD = 'G' AND P.RECORD_TYPE_CD = 'G'
--AND L.EXTRACT_UNMATCH_COUNT_NO = 0 and C.EXTRACT_UNMATCH_COUNT_NO = 0
AND FPC.PURGE_DT IS NULL
AND (LND.ID = 2242)
AND (L.BRANCH_CODE_TX IN (SELECT STRVALUE FROM @BranchTable) or @Branch = '1' or @Branch = '' or @Branch is NULL)
AND fn_FCBD.loanType IS NOT NULL
AND (RC.TYPE_CD = @Coverage or @Coverage = '1' or @Coverage is NULL)
AND (@FIL_DATERANGE_FILE = 'F' OR (@FIL_DATERANGE_FILE = 'T' AND (FPC.ID IN (SELECT ID FROM #tmpFPCIDs))))
AND (@FIL_DATERANGE = 'F' OR (@FIL_DATERANGE = 'T' AND FPC.ID in (select ID from #tmpFPCIDs)))
AND (@FIL_FUNDDT_RANGE = 'F' OR (@FIL_FUNDDT_RANGE = 'T' AND FPC.ID in (select ID from #tmpFPCIDs)))
AND (@FIL_DATERANGE_PIR = 'F' OR (@FIL_DATERANGE_PIR = 'T' AND FPC.ID in (select ID from #tmpFPCIDs)))
AND (@FIL_DATERANGE_SPECIAL = 'F' OR (@FIL_DATERANGE_SPECIAL = 'T' AND FPC.ID in (select ID from #tmpFPCIDs) 
	AND ISNULL(FPC.HOLD_IN,'N') = 'N' AND FPC.MONTHLY_BILLING_IN = 'N' 
	AND ((FTX.NET_AMOUNT IS NOT NULL AND FTX.NET_AMOUNT > 0) OR (FTX.NET_AMOUNT IS NULL AND ISNULL(CPA_I.TOTAL_PREMIUM_NO,0) - ABS(ISNULL(CPA_C.TOTAL_PREMIUM_NO,0)) > 0))
	))
AND [HOLD_IN] <> 'Y' AND [MONTHLY_BILLING_IN] <> 'Y' 
AND (FTX.NET_AMOUNT > 0 OR (CPA_I.TOTAL_PREMIUM_NO - CPA_C.TOTAL_PREMIUM_NO) > 0)
--AND [CPI_NETPREMIUM_AMOUNT_NO] > 0

------------------------------------------------------------




----If Certs are being Filtered out still, it is because the Net Premium is now Zero.
--To confirm : Pay special attention to FTX.NET_AMOUNT in Where clause

DECLARE	@Division as nvarchar(10)
set @Division = '1'
DECLARE @FIL_DATERANGE AS varchar(1) = 'F'
DECLARE @FIL_DATERANGE_PIR AS varchar(1) = 'F'
DECLARE @FIL_DATERANGE_SPECIAL AS varchar(1) = 'T'
DECLARE @FIL_FUNDDT_RANGE AS varchar(1) = 'F'
DECLARE @FIL_DATERANGE_FILE AS varchar(1) = 'F'

select FPC.ID,FPC.ISSUE_DT,FTX.NET_AMOUNT,CPA_I.TOTAL_PREMIUM_NO,CPA_C.TOTAL_PREMIUM_NO,FPC.*
from FORCE_PLACED_CERTIFICATE FPC
JOIN LOAN L ON L.ID = FPC.LOAN_ID AND L.PURGE_DT IS NULL 
JOIN LENDER LND ON LND.ID = L.LENDER_ID AND LND.PURGE_DT IS NULL
JOIN FORCE_PLACED_CERT_REQUIRED_COVERAGE_RELATE FPCRCR ON FPCRCR.FPC_ID = FPC.ID AND FPCRCR.PURGE_DT IS NULL
JOIN CARRIER CR ON FPC.CARRIER_ID = CR.ID AND CR.PURGE_DT IS NULL	
JOIN REQUIRED_COVERAGE RC ON FPCRCR.REQUIRED_COVERAGE_ID = RC.ID AND RC.PURGE_DT IS NULL	
JOIN PROPERTY P ON RC.PROPERTY_ID = P.ID AND P.PURGE_DT IS NULL	
JOIN COLLATERAL C ON C.LOAN_ID = L.ID AND C.PROPERTY_ID = P.ID AND C.PURGE_DT IS NULL
LEFT JOIN CPI_QUOTE CPQ ON  CPQ.ID = FPC.CPI_QUOTE_ID AND CPQ.PURGE_DT IS NULL	
LEFT JOIN CPI_ACTIVITY CPA_I on CPA_I.CPI_QUOTE_ID = CPQ.ID AND CPA_I.TYPE_CD = 'I'	AND CPA_I.PURGE_DT IS NULL  AND CPA_I.CREATE_DT <= '2016-09-11'
OUTER APPLY 
(SELECT SUM(TOTAL_PREMIUM_NO) AS TOTAL_PREMIUM_NO, MAX(REASON_CD) AS REASON_CD, MAX(REPORTING_CANCEL_DT) AS REPORTING_CANCEL_DT 
FROM CPI_ACTIVITY C  
WHERE C.CPI_QUOTE_ID = CPQ.ID AND C.TYPE_CD IN ('C', 'R', 'MT') AND C.PURGE_DT IS NULL AND C.CREATE_DT <= '2016-09-11'
) CPA_C
OUTER APPLY(SELECT SUM(AMOUNT_NO) as NET_AMOUNT FROM FINANCIAL_TXN FTX 
WHERE FTX.FPC_ID = FPC.ID AND FTX.PURGE_DT IS NULL
and TXN_DT <= '2016-09-11' and TXN_TYPE_CD != 'P'
) FTX
CROSS APPLY dbo.fn_FilterCollateralByDivisionCd(C.ID, @Division) fn_FCBD
WHERE FPC.NUMBER_TX IN ('SC80480193','SC80480205','SC80473372','SC80480191','SC80480196','SC80480199','SC80480201','SC80480202','SC80473377','SC80480181','SC80480198','SC80480186','SC80480200','SC80480188','SC80480180','SC80473375','SC80480185','SC80480197','SC80480184','SC80480189','SC80480183','SC80480208','SC80480192','SC80473371','SC80467500','SC80480206','SC80480203','SC80480204','SC80480190')
AND L.RECORD_TYPE_CD = 'G' AND RC.RECORD_TYPE_CD = 'G' AND P.RECORD_TYPE_CD = 'G'
AND (LND.ID = 2242)
AND (FTX.NET_AMOUNT > 0 OR (CPA_I.TOTAL_PREMIUM_NO - CPA_C.TOTAL_PREMIUM_NO) > 0)
--AND (L.BRANCH_CODE_TX IN (SELECT STRVALUE FROM @BranchTable) or @Branch = '1' or @Branch = '' or @Branch is NULL)
AND fn_FCBD.loanType IS NOT NULL
AND (@FIL_DATERANGE_FILE = 'F' OR (@FIL_DATERANGE_FILE = 'T' AND (FPC.ID IN (SELECT ID FROM #tmpFPCIDs))))
AND (@FIL_DATERANGE = 'F' OR (@FIL_DATERANGE = 'T' AND FPC.ID in (select ID from #tmpFPCIDs)))
AND (@FIL_FUNDDT_RANGE = 'F' OR (@FIL_FUNDDT_RANGE = 'T' AND FPC.ID in (select ID from #tmpFPCIDs)))
AND (@FIL_DATERANGE_PIR = 'F' OR (@FIL_DATERANGE_PIR = 'T' AND FPC.ID in (select ID from #tmpFPCIDs)))
AND (@FIL_DATERANGE_SPECIAL = 'F' OR (@FIL_DATERANGE_SPECIAL = 'T' AND FPC.ID in (select ID from #tmpFPCIDs)
	AND ISNULL(FPC.HOLD_IN,'N') = 'N' AND FPC.MONTHLY_BILLING_IN = 'N' 
	--AND ((FTX.NET_AMOUNT IS NOT NULL AND FTX.NET_AMOUNT > 0) OR (FTX.NET_AMOUNT IS NULL AND ISNULL(CPA_I.TOTAL_PREMIUM_NO,0) - ABS(ISNULL(CPA_C.TOTAL_PREMIUM_NO,0)) > 0))
	))
ORDER BY FTX.NET_AMOUNT,FPC.ID
----------------------------------

---FPCs being Excluded
select FPC.NUMBER_TX,FPC.ISSUE_DT,L.NUMBER_TX,P.YEAR_TX,P.MAKE_TX,P.MODEL_TX,P.VIN_TX, FTX.NET_AMOUNT--,CPA_I.TOTAL_PREMIUM_NO,CPA_C.TOTAL_PREMIUM_NO,FPC.*
from FORCE_PLACED_CERTIFICATE FPC
JOIN LOAN L ON L.ID = FPC.LOAN_ID AND L.PURGE_DT IS NULL 
JOIN FORCE_PLACED_CERT_REQUIRED_COVERAGE_RELATE FPCRCR ON FPCRCR.FPC_ID = FPC.ID AND FPCRCR.PURGE_DT IS NULL
JOIN REQUIRED_COVERAGE RC ON FPCRCR.REQUIRED_COVERAGE_ID = RC.ID AND RC.PURGE_DT IS NULL	
JOIN PROPERTY P ON RC.PROPERTY_ID = P.ID AND P.PURGE_DT IS NULL	
JOIN FINANCIAL_TXN FTX ON FTX.FPC_ID = FPC.ID
WHERE FPC.ID IN (5984244,
5984249)

FPC.NUMBER_TX IN ('SC80480193','SC80480205','SC80473372','SC80480191','SC80480196','SC80480199','SC80480201','SC80480202','SC80473377','SC80480181','SC80480198','SC80480186','SC80480200','SC80480188','SC80480180','SC80473375','SC80480185','SC80480197','SC80480184','SC80480189','SC80480183','SC80480208','SC80480192','SC80473371','SC80467500','SC80480206','SC80480203','SC80480204','SC80480190')
AND FPC.ID IN (5576000,5595375,5615477,5615480,5615485,5615486,5615495,5615499,5615503,5615504)
-------------

--Financial Txn Info to Confirm
SELECT AMOUNT_NO, *
FROM FINANCIAL_TXN
WHERE FPC_ID IN (5984244,
5984249)AND AMOUNT_NO = '0'
and TXN_DT <= '2016-09-11' and TXN_TYPE_CD != 'P'
ORDER BY FPC_ID
-------------








UPDATE FPC
SET FPC.ISSUE_DT =  FPX.ISSUE_DT
--SELECT *
FROM dbo.FORCE_PLACED_CERTIFICATE FPC
JOIN UniTracHDStorage..INC0276323_FPC FPX ON FPC.ID = FPX.ID



SELECT * FROM UniTracHDStorage..INC0276323_2