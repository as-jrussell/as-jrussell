USE UnitracArchive
GO

--Create Partition Functions & Schemes
CREATE PARTITION FUNCTION [IHDATERANGEPF](datetime) AS RANGE RIGHT FOR VALUES (N'2006-01-01T00:00:00.000',N'2007-01-01T00:00:00.000',N'2008-01-01T00:00:00.000', 
N'2009-01-01T00:00:00.000', N'2010-01-01T00:00:00.000', N'2011-01-01T00:00:00.000', N'2012-01-01T00:00:00.000', N'2013-01-01T00:00:00.000', N'2014-01-01T00:00:00.000', 
N'2015-01-01T00:00:00.000', N'2016-01-01T00:00:00.000', N'2017-01-01T00:00:00.000', N'2018-01-01T00:00:00.000', N'2019-01-01T00:00:00.000', N'2020-01-01T00:00:00.000', 
N'2021-01-01T00:00:00.000', N'2022-01-01T00:00:00.000', N'2023-01-01T00:00:00.000', N'2024-01-01T00:00:00.000', N'2025-01-01T00:00:00.000')
GO

CREATE PARTITION SCHEME [IHDATERANGEPS] 
AS PARTITION [IHDATERANGEPF] 
ALL TO ([PRIMARY])
GO

CREATE PARTITION FUNCTION [CONVERTIHPF] (varchar(20))
AS RANGE RIGHT FOR VALUES ('CAS','CASHistory', 'CET', 'CETHistory',
'CML', 'CMLHistory', 'CST', 'CSTHistory', 'EST', 'ESTHistory', 'MID', 'MidHistory',
'MST', 'MSTHistory', 'OSC', 'OSCHistory', 'PST','PSTHistory', 'WES', 'WESHistory');
GO

CREATE PARTITION SCHEME CONVERTIHPF
AS PARTITION CONVERTIHPF
ALL TO ([PRIMARY]);
GO

--Create archive mapping tables
IF NOT EXISTS (SELECT
			*
		FROM INFORMATION_SCHEMA.TABLES t
		WHERE t.TABLE_NAME = 'convertIH')
BEGIN
CREATE TABLE convertIH(
REGION_NM VARCHAR(20) NOT NULL,
TABLE_NAME_TX VARCHAR(20) NOT NULL ,
IntID INT NOT NULL ,
cvtFlag BIT NOT NULL DEFAULT 0,
LOAN_ID	BIGINT NULL,
PROPERTY_ID BIGINT NULL,
RC_ID BIGINT NULL,
CREATE_DT	DATETIME NOT NULL,
SORT_CREATED_DT	DATETIME	NOT NULL,
MEMO	VARCHAR(500) NULL,
TEMPEST_ID	VARCHAR(500) NULL,
INHOUSEONLY_IN	INT	NOT NULL
CONSTRAINT PK_convertIH PRIMARY KEY CLUSTERED (REGION_NM,TABLE_NAME_TX, IntID))
ON CONVERTIHPF (REGION_NM)
WITH (DATA_COMPRESSION = PAGE)
END
GO

IF NOT EXISTS (SELECT
			*
		FROM INFORMATION_SCHEMA.TABLES t
		WHERE t.TABLE_NAME = 'ArchiveIH')
BEGIN
CREATE TABLE [dbo].[ArchiveIH](
	[ID] [bigint] NOT NULL,
	[archiveflag] [bit] NOT NULL DEFAULT ((0)),
	CreateDate [DATETIME] NOT NULL DEFAULT GETDATE(),
	UpdateDate [DATETIME] NOT NULL DEFAULT GETDATE()
) ON [PRIMARY]
END
GO

IF NOT EXISTS (SELECT
			*
		FROM INFORMATION_SCHEMA.TABLES t
		WHERE t.TABLE_NAME = 'ArchiveCH')
BEGIN
	CREATE TABLE [dbo].[ArchiveCH] (
		[ID] [BIGINT] NOT NULL
	,	[archiveflag] [BIT] NOT NULL DEFAULT ((0))
	,   [CreateDate] [DATETIME] NOT NULL
	,   [UpdateDate] [DATETIME] NOT NULL
	) ON [PRIMARY]

END
GO


IF NOT EXISTS (SELECT
			*
		FROM INFORMATION_SCHEMA.TABLES t
		WHERE t.TABLE_NAME = 'ArchivePC')
BEGIN
	CREATE TABLE [dbo].[ArchivePC] (
		[ID] [BIGINT] NOT NULL
	,	[archiveflag] [BIT] NOT NULL DEFAULT ((0))
	,   [CreateDate] [DATETIME] NOT NULL
	,   [UpdateDate] [DATETIME] NOT NULL
	) ON [PRIMARY]

END
GO


--Create new InteractionHistory Archive table 
IF NOT EXISTS (SELECT
			*
		FROM INFORMATION_SCHEMA.TABLES t
		WHERE t.TABLE_NAME = 'INTERACTION_HISTORY')
BEGIN
CREATE TABLE [dbo].[INTERACTION_HISTORY](
	   [ID] [BIGINT] IDENTITY(1,1),
       [CREATE_DT] [datetime] NOT NULL,
	   [SOURCE_ID] BIGINT NOT NULL,
       [SOURCE_REGION_CD]   [nvarchar](20) NOT NULL,
       [TYPE_CD] [nvarchar](15) NOT NULL,
       [LOAN_ID] [bigint] NULL,
       [PROPERTY_ID] [bigint] NULL,
       [REQUIRED_COVERAGE_ID] [bigint] NULL,
       [DOCUMENT_ID] [bigint] NULL,
       [EFFECTIVE_DT] [datetime] NULL,
       [EFFECTIVE_ORDER_NO] [decimal](18, 2) NULL,
       [ISSUE_DT] [datetime] NULL,
       [NOTE_TX] [nvarchar](max) NULL,
       [SPECIAL_HANDLING_XML] [xml] NULL,
       [ALERT_IN] [char](1) NOT NULL,
       [PENDING_IN] [char](1) NOT NULL,
       [IN_HOUSE_ONLY_IN] [char](1) NOT NULL,
       [RELATE_CLASS_TX] [varchar](100) NULL,
       [RELATE_ID] [bigint] NULL,
       [CREATE_USER_TX] [nvarchar](50) NOT NULL,
       [UPDATE_DT] [datetime] NOT NULL,
       [UPDATE_USER_TX] [nvarchar](50) NOT NULL,
       [PURGE_DT] [datetime] NULL,
       [LOCK_ID] [tinyint] NOT NULL,
       [DELETE_ID] [bigint] NULL,
       [ARCHIVED_IN] [char](1) NOT NULL,
CONSTRAINT PK_INTERACTION_HISTORY PRIMARY KEY CLUSTERED (CREATE_DT, SOURCE_ID, SOURCE_REGION_CD))
ON IHDATERANGEPS (CREATE_DT)
WITH (DATA_COMPRESSION = PAGE)
END
GO

IF NOT EXISTS (SELECT
			*
		FROM sys.indexes i
		WHERE i.name = 'IX_InteractionHistory_LoanID'
			AND i.object_id = OBJECT_ID('INTERACTION_HISTORY'))
BEGIN
CREATE NONCLUSTERED INDEX IX_InteractionHistory_LoanID
    ON dbo.INTERACTION_HISTORY (LOAN_ID, TYPE_CD)
    WITH (DATA_COMPRESSION = PAGE)
	ON IHDATERANGEPS (CREATE_DT)
END
GO

IF NOT EXISTS (SELECT
			*
		FROM sys.indexes i
		WHERE i.name = 'IX_InteractionHistory_PropertyID'
			AND i.object_id = OBJECT_ID('INTERACTION_HISTORY'))
BEGIN
CREATE NONCLUSTERED INDEX IX_InteractionHistory_PropertyID
    ON dbo.INTERACTION_HISTORY (PROPERTY_ID, TYPE_CD)
    WITH (DATA_COMPRESSION = PAGE)
	ON IHDATERANGEPS (CREATE_DT)
END
GO


--Create new Change Archive table 
IF NOT EXISTS (SELECT
			*
		FROM INFORMATION_SCHEMA.TABLES t
		WHERE t.TABLE_NAME = 'CHANGE')
BEGIN
	CREATE TABLE [dbo].[CHANGE] (
		[ID] [BIGINT] NOT NULL
	,	[ENTITY_NAME_TX] [VARCHAR](100) NULL
	,	[ENTITY_ID] [BIGINT] NULL
	,	[NOTE_TX] [NVARCHAR](100) NULL
	,	[TICKET_TX] [NVARCHAR](20) NULL
	,	[USER_TX] [NVARCHAR](15) NULL
	,	[ATTACHMENT_IN] [CHAR](1) NULL
	,	[CREATE_DT] [DATETIME] NOT NULL DEFAULT GETDATE()
	,	[AGENCY_ID] [BIGINT] NULL
	,	[DESCRIPTION_TX] [NVARCHAR](MAX) NULL
	,	[DETAILS_IN] [CHAR](1) NOT NULL
	,	[FORMATTED_IN] [CHAR](1) NOT NULL
	,	[LOCK_ID] [TINYINT] NOT NULL
	,	[PARENT_NAME_TX] [VARCHAR](100) NULL
	,	[PARENT_ID] [BIGINT] NULL
	,	[TRANS_STATUS_CD] [VARCHAR](4) NULL
	,	[TRANS_STATUS_DT] [DATETIME] NULL
	,	CONSTRAINT [PK_CHANGE] PRIMARY KEY CLUSTERED ([CREATE_DT], [ID] ASC)) 
	ON IHDATERANGEPS (CREATE_DT)
	WITH (DATA_COMPRESSION = PAGE)
END
GO

IF NOT EXISTS (SELECT
			*
		FROM sys.indexes i
		WHERE i.name = 'IDX_CHANGE_CREATE_DATE_USER'
			AND i.object_id = OBJECT_ID('CHANGE'))
BEGIN
	CREATE NONCLUSTERED INDEX [IDX_CHANGE_CREATE_DATE_USER] 
	ON [dbo].[CHANGE] ([CREATE_DT] ASC,[USER_TX] ASC) 
	WITH (DATA_COMPRESSION = PAGE)
	ON IHDATERANGEPS (CREATE_DT)
END
GO

IF NOT EXISTS (SELECT
			*
		FROM sys.indexes i
		WHERE i.name = 'IDX_CHANGE_ENTITY'
			AND i.object_id = OBJECT_ID('CHANGE'))
BEGIN
	CREATE NONCLUSTERED INDEX [IDX_CHANGE_ENTITY] 
	ON [dbo].[CHANGE] 	([ENTITY_ID] ASC,[ENTITY_NAME_TX] ASC) 
	WITH (DATA_COMPRESSION = PAGE)
	ON IHDATERANGEPS (CREATE_DT)
END
GO

IF NOT EXISTS (SELECT
			*
		FROM sys.indexes i
		WHERE i.name = 'IDX_CHANGE_PARENT'
			AND i.object_id = OBJECT_ID('CHANGE'))
BEGIN
	CREATE NONCLUSTERED INDEX [IDX_CHANGE_PARENT] 
	ON [dbo].[CHANGE] ([PARENT_ID] DESC,[PARENT_NAME_TX] ASC) 
	WITH (DATA_COMPRESSION = PAGE)
	ON IHDATERANGEPS (CREATE_DT)
END
GO


--Create new Change_Update Archive table
IF NOT EXISTS (SELECT
			*
		FROM INFORMATION_SCHEMA.TABLES t
		WHERE t.TABLE_NAME = 'CHANGE_UPDATE')
BEGIN
	CREATE TABLE [dbo].[CHANGE_UPDATE] (
		[CHANGE_ID] [BIGINT] NULL
	,	[TABLE_NAME_TX] [VARCHAR](50) NULL
	,	[TABLE_ID] [BIGINT] NULL
	,	[QUALIFIER_TX] [NVARCHAR](500) NULL
	,	[COLUMN_NM] [VARCHAR](50) NULL
	,	[FROM_VALUE_TX] [NVARCHAR](MAX) NULL
	,	[TO_VALUE_TX] [NVARCHAR](MAX) NULL
	,	[DATATYPE_NO] [TINYINT] NULL
	,	[CREATE_DT] [DATETIME] NULL
	,	[AREA_TX] [NVARCHAR](500) NULL
	,	[FORMAT_FROM_VALUE_TX] [NVARCHAR](MAX) NULL
	,	[FORMAT_TO_VALUE_TX] [NVARCHAR](MAX) NULL
	,	[DISPLAY_IN] [CHAR](1) NOT NULL DEFAULT ('Y')
	,	[OPERATION_CD] [CHAR](1) NOT NULL
	) ON IHDATERANGEPS (CREATE_DT)
	WITH (DATA_COMPRESSION = PAGE)
END
GO

IF NOT EXISTS (SELECT
			*
		FROM sys.indexes i
		WHERE i.name = 'IDX_CHANGE_UPDATE_ID'
			AND i.object_id = OBJECT_ID('CHANGE_UPDATE'))
BEGIN
	CREATE NONCLUSTERED INDEX [IDX_CHANGE_UPDATE_ID] 
	ON [dbo].[CHANGE_UPDATE] ([CHANGE_ID] ASC) 
	WITH (DATA_COMPRESSION = PAGE)
	ON IHDATERANGEPS (CREATE_DT)
END
GO


IF NOT EXISTS (SELECT
			*
		FROM sys.indexes i
		WHERE i.name = 'IDX_CHANGE_UPDATE_TABLE'
			AND i.object_id = OBJECT_ID('CHANGE_UPDATE'))
BEGIN
	CREATE NONCLUSTERED INDEX [IDX_CHANGE_UPDATE_TABLE] 
	ON [dbo].[CHANGE_UPDATE] ([TABLE_ID] ASC) 
	WITH (DATA_COMPRESSION = PAGE)
	ON IHDATERANGEPS (CREATE_DT)
END
GO 

--Create new Property_Change Archive table 
IF NOT EXISTS (SELECT
			*
		FROM INFORMATION_SCHEMA.TABLES t
		WHERE t.TABLE_NAME = 'PROPERTY_CHANGE')
BEGIN
	CREATE TABLE [dbo].[PROPERTY_CHANGE] (
		[ID] [BIGINT] NOT NULL
	,	[ENTITY_NAME_TX] [VARCHAR](100) NULL
	,	[ENTITY_ID] [BIGINT] NULL
	,	[NOTE_TX] [NVARCHAR](MAX) NULL
	,	[TICKET_TX] [NVARCHAR](20) NULL
	,	[USER_TX] [NVARCHAR](15) NULL
	,	[ATTACHMENT_IN] [CHAR](1) NULL
	,	[CREATE_DT] [DATETIME] NOT NULL DEFAULT GETDATE()
	,	[AGENCY_ID] [BIGINT] NULL
	,	[DESCRIPTION_TX] [NVARCHAR](MAX) NULL
	,	[DETAILS_IN] [CHAR](1) NOT NULL
	,	[FORMATTED_IN] [CHAR](1) NOT NULL
	,	[LOCK_ID] [TINYINT] NOT NULL
	,	[PARENT_NAME_TX] [VARCHAR](100) NULL
	,	[PARENT_ID] [BIGINT] NULL
	,	[TRANS_STATUS_CD] [VARCHAR](4) NULL
	,	[TRANS_STATUS_DT] [DATETIME] NULL
	,	[UTL_IN] [CHAR](1) NULL
	,	[SUPPORT_TRIGGER_IN] [BIT] NULL
	, CONSTRAINT [PK_PROPERTY_CHANGE] PRIMARY KEY CLUSTERED ([CREATE_DT], [ID] ASC)) 
	ON IHDATERANGEPS (CREATE_DT)
	WITH (DATA_COMPRESSION = PAGE)
END
GO


IF NOT EXISTS (SELECT
			*
		FROM sys.indexes i
		WHERE i.name = 'IDX_PROPERTY_CHANGE_CREATE_DATE_USER'
			AND i.object_id = OBJECT_ID('PROPERTY_CHANGE'))
BEGIN
	CREATE NONCLUSTERED INDEX [IDX_PROPERTY_CHANGE_CREATE_DATE_USER] 
	ON [dbo].[PROPERTY_CHANGE] ([CREATE_DT] ASC,[USER_TX] ASC) 
	WITH (DATA_COMPRESSION = PAGE)
	ON IHDATERANGEPS (CREATE_DT)
END
GO

IF NOT EXISTS (SELECT
			*
		FROM sys.indexes i
		WHERE i.name = 'IDX_PROPERTY_CHANGE_ENTITY'
			AND i.object_id = OBJECT_ID('PROPERTY_CHANGE'))
BEGIN
	CREATE NONCLUSTERED INDEX [IDX_PROPERTY_CHANGE_ENTITY] 
	ON [dbo].[PROPERTY_CHANGE] 	([ENTITY_ID] ASC,[ENTITY_NAME_TX] ASC) 
	WITH (DATA_COMPRESSION = PAGE)
	ON IHDATERANGEPS (CREATE_DT)
END
GO

--Create new Property_Change_Update Archive table 
IF NOT EXISTS (SELECT
			*
		FROM INFORMATION_SCHEMA.TABLES t
		WHERE t.TABLE_NAME = 'PROPERTY_CHANGE_UPDATE')
BEGIN
	CREATE TABLE [dbo].[PROPERTY_CHANGE_UPDATE] (
		[CHANGE_ID] [BIGINT] NULL
	,	[TABLE_NAME_TX] [VARCHAR](50) NULL
	,	[TABLE_ID] [BIGINT] NULL
	,	[QUALIFIER_TX] [NVARCHAR](500) NULL
	,	[COLUMN_NM] [VARCHAR](50) NULL
	,	[FROM_VALUE_TX] [NVARCHAR](MAX) NULL
	,	[TO_VALUE_TX] [NVARCHAR](MAX) NULL
	,	[DATATYPE_NO] [TINYINT] NULL
	,	[CREATE_DT] [DATETIME] NULL
	,	[AREA_TX] [NVARCHAR](500) NULL
	,	[FORMAT_FROM_VALUE_TX] [NVARCHAR](MAX) NULL
	,	[FORMAT_TO_VALUE_TX] [NVARCHAR](MAX) NULL
	,	[DISPLAY_IN] [CHAR](1) NOT NULL DEFAULT ('Y')
	,	[OPERATION_CD] [CHAR](1) NOT NULL
	) ON IHDATERANGEPS (CREATE_DT)
	WITH (DATA_COMPRESSION = PAGE)
END
GO

IF NOT EXISTS (SELECT
			*
		FROM sys.indexes i
		WHERE i.name = 'IDX_PROPERTY_CHANGE_DETAIL_ID'
			AND i.object_id = OBJECT_ID('PROPERTY_CHANGE_UPDATE'))
BEGIN
	CREATE NONCLUSTERED INDEX [IDX_PROPERTY_CHANGE_DETAIL_ID] 
	ON [dbo].[PROPERTY_CHANGE_UPDATE] ([CHANGE_ID] ASC) 
	WITH (DATA_COMPRESSION = PAGE)
	ON IHDATERANGEPS (CREATE_DT)
END
GO

IF NOT EXISTS (SELECT
			*
		FROM sys.indexes i
		WHERE i.name = 'IDX_PROPERTY_CHANGE_UPDATE_TABLE'
			AND i.object_id = OBJECT_ID('PROPERTY_CHANGE_UPDATE'))
BEGIN
	CREATE NONCLUSTERED INDEX [IDX_PROPERTY_CHANGE_UPDATE_TABLE] 
	ON [dbo].[PROPERTY_CHANGE_UPDATE] ([TABLE_ID] ASC,[TABLE_NAME_TX] ASC) 
	WITH (DATA_COMPRESSION = PAGE)
	ON IHDATERANGEPS (CREATE_DT)
END
GO


--Create the Unitrac Process Definition entries for the archive processes.
USE UNITRAC
GO

IF NOT EXISTS (SELECT
			*
		FROM PROCESS_DEFINITION pd
		WHERE pd.PROCESS_TYPE_CD = 'CH_ARCHIVE')
BEGIN

	INSERT INTO [dbo].[PROCESS_DEFINITION] ([NAME_TX]
										,	[DESCRIPTION_TX]
										,	[EXECUTION_FREQ_CD]
										,	[PROCESS_TYPE_CD]
										,	[PRIORITY_NO]
										,	[ACTIVE_IN]
										,	[CREATE_DT]
										,	[UPDATE_DT]
										,	[UPDATE_USER_TX]
										,	[LOCK_ID]
										,	[SETTINGS_XML_IM]
										,	[INCLUDE_WEEKENDS_IN]
										,	[INCLUDE_HOLIDAYS_IN]
										,	[DAYS_OF_WEEK_XML]
										,	[LAST_SCHEDULED_DT]
										,	[OVERRIDE_DT]
										,	[SCHEDULE_GROUP]
										,	[STATUS_CD]
										,	[ONHOLD_IN]
										,	[FREQ_MULTIPLIER_NO]
										,	[CHECKED_OUT_OWNER_ID]
										,	[CHECKED_OUT_DT]
										,	[LAST_RUN_DT]
										,	[USE_LAST_SCHEDULED_DT_IN]
										,	[PURGE_DT])
		VALUES
		(	'Change History Archive'
		,	'Change History Archive'
		,	'WEEK'
		,	'CH_ARCHIVE'
		,	1
		,	'Y'
		,	GETDATE()
		,	GETDATE()
		,	'cberry'
		,	1
		,	CAST('<Settings CreateDateOffset="1095" BatchSize="1000" />' AS XML)
		,	'Y'
		,	'Y'
		,	NULL
		,	NULL
		,	NULL
		,	NULL
		,	'Complete'
		,	'N'
		,	1
		,	NULL
		,	NULL
		,	NULL
		,	'Y'
		,	NULL)

END
GO

IF NOT EXISTS (SELECT
			*
		FROM PROCESS_DEFINITION pd
		WHERE pd.PROCESS_TYPE_CD = 'PC_ARCHIVE')
BEGIN

	INSERT INTO [dbo].[PROCESS_DEFINITION] ([NAME_TX]
										,	[DESCRIPTION_TX]
										,	[EXECUTION_FREQ_CD]
										,	[PROCESS_TYPE_CD]
										,	[PRIORITY_NO]
										,	[ACTIVE_IN]
										,	[CREATE_DT]
										,	[UPDATE_DT]
										,	[UPDATE_USER_TX]
										,	[LOCK_ID]
										,	[SETTINGS_XML_IM]
										,	[INCLUDE_WEEKENDS_IN]
										,	[INCLUDE_HOLIDAYS_IN]
										,	[DAYS_OF_WEEK_XML]
										,	[LAST_SCHEDULED_DT]
										,	[OVERRIDE_DT]
										,	[SCHEDULE_GROUP]
										,	[STATUS_CD]
										,	[ONHOLD_IN]
										,	[FREQ_MULTIPLIER_NO]
										,	[CHECKED_OUT_OWNER_ID]
										,	[CHECKED_OUT_DT]
										,	[LAST_RUN_DT]
										,	[USE_LAST_SCHEDULED_DT_IN]
										,	[PURGE_DT])
		VALUES
		(	'Property Change History Archive'
		,	'Property Change History Archive'
		,	'WEEK'
		,	'PC_ARCHIVE'
		,	1
		,	'Y'
		,	GETDATE()
		,	GETDATE()
		,	'cberry'
		,	1
		,	CAST('<Settings CreateDateOffset="1095" BatchSize="1000" />' AS XML)
		,	'Y'
		,	'Y'
		,	NULL
		,	NULL
		,	NULL
		,	NULL
		,	'Complete'
		,	'N'
		,	1
		,	NULL
		,	NULL
		,	NULL
		,	'Y'
		,	NULL)

END
GO

IF NOT EXISTS (SELECT
			*
		FROM PROCESS_DEFINITION pd
		WHERE pd.PROCESS_TYPE_CD = 'IH_ARCHIVE')
BEGIN

INSERT INTO [dbo].[PROCESS_DEFINITION]
           ([NAME_TX]
           ,[DESCRIPTION_TX]
           ,[EXECUTION_FREQ_CD]
           ,[PROCESS_TYPE_CD]
           ,[PRIORITY_NO]
           ,[ACTIVE_IN]
           ,[CREATE_DT]
           ,[UPDATE_DT]
           ,[UPDATE_USER_TX]
           ,[LOCK_ID]
           ,[SETTINGS_XML_IM]
           ,[INCLUDE_WEEKENDS_IN]
           ,[INCLUDE_HOLIDAYS_IN]
           ,[DAYS_OF_WEEK_XML]
           ,[LAST_SCHEDULED_DT]
           ,[OVERRIDE_DT]
           ,[SCHEDULE_GROUP]
           ,[STATUS_CD]
           ,[ONHOLD_IN]
           ,[FREQ_MULTIPLIER_NO]
           ,[CHECKED_OUT_OWNER_ID]
           ,[CHECKED_OUT_DT]
           ,[LAST_RUN_DT]
           ,[USE_LAST_SCHEDULED_DT_IN]
           ,[PURGE_DT])
     VALUES
           ('ArchiveInteractionHistory'
           ,'InteractionHistory Archive'
           ,'WEEK'
           ,'IH_ARCHIVE'
           ,1
           ,'Y'
           ,GETDATE()
           ,GETDATE()
           ,'cberry'
           ,1
           ,CAST('<Settings CreateDateOffset="1095" BatchSize="2000" />' AS XML) 
           ,'Y'
           ,'Y'
           ,NULL
           ,NULL
           ,NULL
           ,NULL
           ,'Complete'
           ,'N'
           ,1
           ,NULL
           ,NULL
           ,NULL
           ,'Y'
           ,NULL)
END
GO