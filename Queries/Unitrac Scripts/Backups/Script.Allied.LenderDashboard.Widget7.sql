IF NOT EXISTS (
		SELECT
			*
		FROM
			dbo.SECURITY_FUNCTION sf
		WHERE
			sf.CODE_TX = 'WDT_NCMLD' AND
			sf.CATEGORY_CD = 'WIDGET'
	)
BEGIN
	INSERT INTO dbo.SECURITY_FUNCTION
		(
			CODE_TX
			,DESCRIPTION_TX
			,CREATE_DT
			,UPDATE_DT
			,PURGE_DT
			,UPDATE_USER_TX
			,LOCK_ID
			,CATEGORY_CD
			,DISPLAY_TX
			,ENABLE_ATTRIBUTE_1_IN
			,ENABLE_ATTRIBUTE_2_IN
			,ENABLE_ATTRIBUTE_3_IN
			,ENABLE_ATTRIBUTE_4_IN
			,ENABLE_ATTRIBUTE_5_IN
		)
		VALUES
		(
			N'WDT_NCMLD'
			,N'Notices and Certs Mailed'
			,GETDATE()
			,GETDATE()
			,NULL
			,N'SCRIPT'
			,1
			,'WIDGET'
			,N''
			,'Y'
			,'Y'
			,DEFAULT
			,DEFAULT
			,DEFAULT
		);
END

-- allow for identity specification 

SET IDENTITY_INSERT WIDGET ON;



-- Requirement 7
-- WIDGET 70

WITH WIDGET_MERGE
	(
	ID,
	NAME_TX,
	DESCRIPTION_TX,
	WIDGET_TYPE_ID,
	DISPLAY_REFRESH_RATE_CD,
	STYLE_SETTINGS_XML,
	LAYOUT_SETTINGS_XML,
	SECURITY_FUNCTION_CD,
	HEIGHT_NO,
	WIDTH_NO,
	CREATE_DT,
	UPDATE_DT,
	UPDATE_USER_TX,
	LOCK_ID
	)
AS
(
SELECT	70 as ID,
	'Notices and Certs Mailed'	AS NAME_TX
	,NULL				AS DESCRIPTION_TX
	,(SELECT
		ID
	FROM WIDGET_TYPE
	WHERE NAME_TX = 'mscolumn2d')
	AS WIDGET_TYPE_ID
	,'HOUR'			AS DISPLAY_REFRESH_RATE_CD,
	'<Style>
		<BackgroundColor>#e4e4e4</BackgroundColor>
		<SeriesColors>#28903a,#0071bc,#00adef,#f7931d</SeriesColors>
		<Font minOccurs="1" maxOccurs="1">
			<Name>Segoe UI</Name>
			<Size>10</Size>
			<Color>#000000</Color>
			<Title>
				<Name>Segoe UI</Name>
				<Size>15</Size>
				<Color>#606161</Color>
			</Title>
			<Value>
				<Name>Segoe UI</Name>
				<Size>10</Size>
				<Color>#000000</Color>
			</Value>
			<Legend>
				<Name>Segoe UI</Name>
				<Size>11</Size>
				<Color>#000000</Color>
			</Legend>
		</Font>
		<ChartType>mscolumn2d</ChartType>
		<Legend>
			<Hide>1</Hide>
			<NumberOfColumns></NumberOfColumns>
		</Legend>
	</Style>'			as STYLE_SETTINGS_XML,
	'<WidgetOption>
		<Options>
			<ShowDescription>true</ShowDescription>
			<Slideshow>true</Slideshow>
		</Options>
	</WidgetOption>'				AS LAYOUT_SETTINGS_XML
	,'WDT_NCMLD' AS SECURITY_FUNCTION_CD
	,500				AS HEIGHT_NO
	,500				AS WIDTH_NO
	,GETDATE()			AS CREATE_DT
	,GETDATE()			AS UPDATE_DT
	,'SCRIPT'			AS UPDATE_USER_TX
	,1					AS LOCK_ID
)
MERGE	Widget
USING	WIDGET_MERGE
ON	WIDGET_MERGE.id = Widget.id
WHEN MATCHED THEN
	update	set
		NAME_TX				= WIDGET_MERGE.NAME_TX,
		DESCRIPTION_TX			= WIDGET_MERGE.DESCRIPTION_TX,
		WIDGET_TYPE_ID			= WIDGET_MERGE.WIDGET_TYPE_ID,
		DISPLAY_REFRESH_RATE_CD		= WIDGET_MERGE.DISPLAY_REFRESH_RATE_CD,
		STYLE_SETTINGS_XML		= WIDGET_MERGE.STYLE_SETTINGS_XML,
		LAYOUT_SETTINGS_XML		= WIDGET_MERGE.LAYOUT_SETTINGS_XML,
		SECURITY_FUNCTION_CD = WIDGET_MERGE.SECURITY_FUNCTION_CD,
		HEIGHT_NO			= WIDGET_MERGE.HEIGHT_NO,
		WIDTH_NO			= WIDGET_MERGE.WIDTH_NO,
		CREATE_DT			= WIDGET_MERGE.CREATE_DT,
		UPDATE_DT			= WIDGET_MERGE.UPDATE_DT,
		UPDATE_USER_TX			= WIDGET_MERGE.UPDATE_USER_TX,
		LOCK_ID				= WIDGET_MERGE.LOCK_ID
WHEN NOT MATCHED BY TARGET THEN
	insert	(
		ID,
		NAME_TX,
		DESCRIPTION_TX,
		WIDGET_TYPE_ID,
		DISPLAY_REFRESH_RATE_CD,
		STYLE_SETTINGS_XML,
		LAYOUT_SETTINGS_XML,
		SECURITY_FUNCTION_CD,
		HEIGHT_NO,
		WIDTH_NO,
		CREATE_DT,
		UPDATE_DT,
		UPDATE_USER_TX,
		LOCK_ID
		)
	values	(
		WIDGET_MERGE.ID,
		WIDGET_MERGE.NAME_TX,
		WIDGET_MERGE.DESCRIPTION_TX,
		WIDGET_MERGE.WIDGET_TYPE_ID,
		WIDGET_MERGE.DISPLAY_REFRESH_RATE_CD,
		WIDGET_MERGE.STYLE_SETTINGS_XML,
		WIDGET_MERGE.LAYOUT_SETTINGS_XML,
		WIDGET_MERGE.SECURITY_FUNCTION_CD,
		WIDGET_MERGE.HEIGHT_NO,
		WIDGET_MERGE.WIDTH_NO,
		WIDGET_MERGE.CREATE_DT,
		WIDGET_MERGE.UPDATE_DT,
		WIDGET_MERGE.UPDATE_USER_TX,
		WIDGET_MERGE.LOCK_ID
		)
OUTPUT	$action, inserted.*, deleted.*;


SET IDENTITY_INSERT WIDGET OFF;

update	WIDGET_DATASOURCE_RELATE
set	purge_dt = getdate()
where	WIDGET_ID = 70;


WITH WIDGET_DATASOURCE_RELATE_MERGE
	(
	[WIDGET_ID]
           ,[DATASOURCE_ID]
           ,[NAME_TX]
           ,[PARAMETER_SETTINGS_XML]
           ,[CREATE_DT]
           ,[UPDATE_DT]
           ,[PURGE_DT]
           ,[UPDATE_USER_TX]
           ,[LOCK_ID]
	)
AS
(
select	70	as widget_id	--'Notices and Certs Mailed'
	,(SELECT
		ID
	FROM dbo.DATASOURCE d
	WHERE d.TYPE_CD = '3MONTH_MAILED_LETTERCNT_BYBRANCH_BYTYPE')
	,N'Notices and Certs Mailed'
	,N'<Parameter>
			<Param Type="SQL">
			<Script>
						SELECT
							DATENAME(MONTH, dc.RECORD_DATE)
							,dc.STATUS_CD
							,SUM(dc.COUNT_NO)
							,MONTH(dc.RECORD_DATE)
							,YEAR(dc.RECORD_DATE)
							FROM dbo.DATASOURCE_CACHE dc (NOLOCK)
							JOIN dbo.DATASOURCE d (NOLOCK) ON dc.DATASOURCE_ID = d.ID
						WHERE d.TYPE_CD = ''3MONTH_MAILED_LETTERCNT_BYBRANCH_BYTYPE'' 
                        AND dc.PURGE_DT IS NULL
                        AND dc.SOURCE_CD = ''Vehicle''
                        AND dc.ASSOCIATION_CD = ''{0}''
						GROUP BY	DATENAME(MONTH, dc.RECORD_DATE)
									,dc.STATUS_CD
									,YEAR(dc.RECORD_DATE)
									,MONTH(dc.RECORD_DATE)
							ORDER BY YEAR(dc.RECORD_DATE), MONTH(dc.RECORD_DATE),
							CASE 
								WHEN dc.STATUS_CD = ''Notice 1'' THEN 1
								WHEN dc.STATUS_CD = ''Notice 2'' THEN 2
								WHEN dc.STATUS_CD = ''Issue Certificate'' THEN 3
								ELSE 4
							END
							</Script>
         <Filter Name="AGENCY" ColumnName="ASSOCIATION_CD" Required="Y" SourceClassName="Osprey.Dashboard.Agency" SourceMethodName="GetRelatedDataForDefinition" SourceParameter="UT_LENDER_CD" />
			</Param>
		</Parameter>'
	,GETDATE()
	,GETDATE()
	,NULL
	,'SCRIPT'
	,0
)
MERGE	WIDGET_DATASOURCE_RELATE
USING	WIDGET_DATASOURCE_RELATE_MERGE
ON	WIDGET_DATASOURCE_RELATE_MERGE.WIDGET_ID		= WIDGET_DATASOURCE_RELATE.WIDGET_ID
	AND WIDGET_DATASOURCE_RELATE_MERGE.DATASOURCE_ID	= WIDGET_DATASOURCE_RELATE.DATASOURCE_ID
WHEN MATCHED THEN
	UPDATE
	SET	[NAME_TX]			= WIDGET_DATASOURCE_RELATE_MERGE.[NAME_TX]
		,[PARAMETER_SETTINGS_XML]	= WIDGET_DATASOURCE_RELATE_MERGE.[PARAMETER_SETTINGS_XML]
		,[UPDATE_DT]			= WIDGET_DATASOURCE_RELATE_MERGE.[UPDATE_DT]
      ,[PURGE_DT]					= WIDGET_DATASOURCE_RELATE_MERGE.[PURGE_DT]
WHEN NOT MATCHED BY TARGET THEN
	INSERT	(
		[WIDGET_ID]
		,[DATASOURCE_ID]
		,[NAME_TX]
		,[PARAMETER_SETTINGS_XML]
		,[CREATE_DT]
		,[UPDATE_DT]
		,[PURGE_DT]
		,[UPDATE_USER_TX]
		,[LOCK_ID]
		)
	VALUES	(
		WIDGET_DATASOURCE_RELATE_MERGE.[WIDGET_ID]
		,WIDGET_DATASOURCE_RELATE_MERGE.[DATASOURCE_ID]
		,WIDGET_DATASOURCE_RELATE_MERGE.[NAME_TX]
		,WIDGET_DATASOURCE_RELATE_MERGE.[PARAMETER_SETTINGS_XML]
		,WIDGET_DATASOURCE_RELATE_MERGE.[CREATE_DT]
		,WIDGET_DATASOURCE_RELATE_MERGE.[UPDATE_DT]
		,WIDGET_DATASOURCE_RELATE_MERGE.[PURGE_DT]
		,WIDGET_DATASOURCE_RELATE_MERGE.[UPDATE_USER_TX]
		,WIDGET_DATASOURCE_RELATE_MERGE.[LOCK_ID]
		)
OUTPUT	$action, inserted.*, deleted.*;


