USE [Unitrac_Reports]
GO

/****** Object:  StoredProcedure [dbo].[Report_PaymentIncreaseNotices]    Script Date: 12/29/2016 2:22:17 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO




CREATE PROCEDURE [dbo].[Report_PaymentIncreaseNotices] 
	(@LenderCode AS nvarchar(20)=NULL,
	@Branch as nvarchar(max)=NULL,
	@Division as nvarchar(10)=NULL,
	@Coverage as nvarchar(100)=NULL,
	@ReportType as nvarchar(50)=NULL,
	@GroupByCode as nvarchar(50)=NULL,
	@SortByCode as nvarchar(50)=NULL,
	@FilterByCode as nvarchar(50)=NULL,
	@ReportConfig as varchar(50)=NULL,
	@Report_History_ID as bigint=NULL)
	
AS

DECLARE @TEMPLATE_XML AS XML=NULL
DECLARE @P1 AS NVARCHAR(max)=NULL
DECLARE @P2 AS NVARCHAR(max)=NULL
DECLARE @P3 AS NVARCHAR(max)=NULL
DECLARE @P4 AS NVARCHAR(max)=NULL
DECLARE @P5 AS NVARCHAR(max)=NULL
DECLARE @P6 AS NVARCHAR(max)=NULL
DECLARE @P7 AS NVARCHAR(max)=NULL
DECLARE @PSAL AS NVARCHAR(max)=NULL
DECLARE @PCLOSE AS NVARCHAR(max)=NULL
DECLARE @SALUTATION_TX AS NVARCHAR(max)=NULL
DECLARE @CLOSING_TX AS NVARCHAR(max)=NULL
DECLARE @PWK AS NVARCHAR(max)=NULL
DECLARE @WKXML AS XML= NULL
DECLARE @3216_ADDRESS1 AS NVARCHAR(max)=''
DECLARE @3216_ADDRESS2 AS NVARCHAR(max)=''
DECLARE @3216_ADDRESS3 AS NVARCHAR(max)=''
DECLARE @3216_ADDRESS4 AS NVARCHAR(max)=''
DECLARE @3216_ADDRESS5 AS NVARCHAR(max)=''
DECLARE @3216_ADDRESS6 AS NVARCHAR(max)=''
DECLARE @6487_ADDRESS1 AS NVARCHAR(max)=''
DECLARE @6487_ADDRESS AS NVARCHAR(max)=''

BEGIN
SET NOCOUNT ON
--Get rid of residual #temp tables
IF OBJECT_ID(N'tempdb..#tmptable',N'U') IS NOT NULL
  DROP TABLE #tmptable
IF OBJECT_ID(N'tempdb..#tmpfilter',N'U') IS NOT NULL
  DROP TABLE #tmpfilter
IF OBJECT_ID(N'tempdb..#t1',N'U') IS NOT NULL
  DROP TABLE #t1
IF OBJECT_ID(N'tempdb..#t2',N'U') IS NOT NULL
  DROP TABLE #t2
IF OBJECT_ID(N'tempdb..#tmpSpecialFPCs',N'U') IS NOT NULL
  DROP TABLE #tmpSpecialFPCs
IF OBJECT_ID(N'tempdb..#tmpFPCIDs',N'U') IS NOT NULL
  DROP TABLE #tmpFPCIDs

DECLARE @AP_ID AS bigint=NULL
DECLARE @AccountPeriod AS NVARCHAR(20)=NULL


BEGIN 

DECLARE @LenderID AS bigint
DECLARE @DEBUG nvarchar(1) = 'F'

Select @LenderID=ID from LENDER where CODE_TX = @LenderCode and PURGE_DT is null

DECLARE @BranchTable AS TABLE(ID int, STRVALUE nvarchar(30))
			INSERT INTO @BranchTable SELECT * FROM SplitFunction(@Branch, ',')  

IF @LenderCode = '3216'
BEGIN
	SELECT @3216_ADDRESS1 = LINE_2_TX + '<br>' + CITY_TX + ', ' + STATE_PROV_TX + ' ' + POSTAL_CODE_TX 
	FROM [ADDRESS] A 
	JOIN LENDER_ORGANIZATION LO ON LO.MAILING_ADDRESS_ID = A.ID 
	WHERE LO.LENDER_ID = @LenderID 
	AND LO.TYPE_CD = 'BRCH' AND LO.CODE_TX = '3218'

	SELECT @3216_ADDRESS2 = LINE_2_TX + '<br>' + CITY_TX + ', ' + STATE_PROV_TX + ' ' + POSTAL_CODE_TX 
	FROM [ADDRESS] A 
	JOIN LENDER_ORGANIZATION LO ON LO.MAILING_ADDRESS_ID = A.ID 
	WHERE LENDER_ID = @LenderID 
	AND LO.TYPE_CD = 'BRCH' AND LO.CODE_TX = '3222'

	SELECT @3216_ADDRESS3 = LINE_1_TX + '<br>' + CITY_TX + ', ' + STATE_PROV_TX + ' ' + POSTAL_CODE_TX 
	FROM [ADDRESS] A 
	JOIN LENDER_ORGANIZATION LO ON LO.MAILING_ADDRESS_ID = A.ID 
	WHERE LENDER_ID = @LenderID 
	AND LO.TYPE_CD = 'BRCH' AND LO.CODE_TX = '3223'

	SELECT @3216_ADDRESS4 = LINE_2_TX + '<br>' + CITY_TX + ', ' + STATE_PROV_TX + ' ' + POSTAL_CODE_TX 
	FROM [ADDRESS] A 
	JOIN LENDER_ORGANIZATION LO ON LO.MAILING_ADDRESS_ID = A.ID 
	WHERE LO.LENDER_ID = @LenderID 
	AND LO.TYPE_CD = 'BRCH' AND LO.CODE_TX = '3225'

	SELECT @3216_ADDRESS5 = LINE_2_TX + '<br>' + CITY_TX + ', ' + STATE_PROV_TX + ' ' + POSTAL_CODE_TX 
	FROM [ADDRESS] A 
	JOIN LENDER_ORGANIZATION LO ON LO.MAILING_ADDRESS_ID = A.ID 
	WHERE LO.LENDER_ID = @LenderID 
	AND LO.TYPE_CD = 'BRCH' AND LO.CODE_TX = '3219'

	SELECT @3216_ADDRESS6 = LINE_2_TX + '<br>' + CITY_TX + ', ' + STATE_PROV_TX + ' ' + POSTAL_CODE_TX 
	FROM [ADDRESS] A 
	JOIN LENDER_ORGANIZATION LO ON LO.MAILING_ADDRESS_ID = A.ID 
	WHERE LO.LENDER_ID = @LenderID 
	AND LO.TYPE_CD = 'BRCH' AND LO.CODE_TX = '3221'
END

IF @LenderCode = '6487'
BEGIN
	SELECT @6487_ADDRESS1 = LINE_1_TX FROM [ADDRESS] A JOIN LENDER L ON L.MAILING_ADDRESS_ID = A.ID WHERE L.CODE_TX = '6487'

	SELECT @6487_ADDRESS = @6487_ADDRESS1 + ' - ' + LINE_1_TX + '<br>' + CITY_TX + ', ' + STATE_PROV_TX + ' ' + POSTAL_CODE_TX + '<br>' + 
		CASE WHEN LEN(LO.SECONDARY_PHONE_TX) = 10 
			THEN '(' + Substring(LO.SECONDARY_PHONE_TX,1,3) + ') ' + Substring(LO.SECONDARY_PHONE_TX,4,3) + '-' + Substring(LO.SECONDARY_PHONE_TX,7,4) 
			ELSE LO.SECONDARY_PHONE_TX 
		END + 
		' or 1 ' + 
		CASE WHEN LEN(LO.PHONE_TX) = 10 
			THEN '(' + Substring(LO.PHONE_TX,1,3) + ') ' + Substring(LO.PHONE_TX,4,3) + '-' + Substring(LO.PHONE_TX,7,4) 
			ELSE LO.PHONE_TX 
		END + 
		'<br>FAX - ' + '(' + LEFT(LO.FAX_TX, 3) + ') '+  substring(LO.FAX_TX, 4,3) + '-' + RIGHT(LO.FAX_TX, 4) + '<br>' + 
		LND.WEB_ADDRESS_TX FROM [ADDRESS] A 
		JOIN LENDER_ORGANIZATION  LO ON LO.MAILING_ADDRESS_ID = A.ID JOIN LENDER LND ON LND.CODE_TX = '6487' 
		WHERE LENDER_ID = @LenderID AND LO.TYPE_CD = 'BRCH' AND LO.CODE_TX = '6487'
END


DECLARE @GroupBySQL AS varchar(max)=NULL
DECLARE @SortBySQL AS varchar(max)=NULL
DECLARE @FilterBySQL AS varchar(max)=NULL
DECLARE @HeaderTx AS varchar(1000)=NULL
DECLARE @FooterTx AS varchar(1000)=NULL
DECLARE @FillerZero AS varchar(18)
DECLARE @StartDate As datetime2 (7)=NULL
DECLARE @EndDate AS datetime2 (7)=NULL
DECLARE @StartDateSpecial As datetime2 (7)=NULL
DECLARE @EndDateSpecial AS datetime2 (7)=NULL
DECLARE @StartDateSpecialLong As datetime2 (7)=NULL
DECLARE @EndDateSpecialLong AS datetime2 (7)=NULL
DECLARE @AP_START_DT AS datetime2 (7) = NULL
DECLARE @AP_END_DT AS datetime2 (7) = NULL
DECLARE @ProcessDefinitionID as bigint = 0
DECLARE @CyclePeriod as nvarchar(15) = NULL
DECLARE @BillingGroupID AS bigint = NULL
DECLARE @StatementDt AS datetime2(7) = NULL

DECLARE @PER_YEAR AS int=NULL
DECLARE @PER_NO AS int=NULL

IF @Report_History_ID IS NOT NULL
BEGIN
  SELECT @StartDate=REPORT_DATA_XML.value('(//ReportData/Report/StartDate/@value)[1]', 'Datetime2'),
       @EndDate=REPORT_DATA_XML.value('(//ReportData/Report/EndDate/@value)[1]', 'Datetime2'),
	   @BillingGroupID =REPORT_DATA_XML.value('(/ReportData/Report/BillingGroupID/@value)[1]', 'bigint')
  FROM REPORT_HISTORY WHERE ID = @Report_History_ID
  SET @StartDate = DATEADD(HH,0,@StartDate)			
  SET @EndDate = DATEADD(HH,0,@EndDate)				
END

IF @StartDate IS NULL 
BEGIN
	SET @StartDate = '0001-01-01'		
	SET @EndDate = GETDATE()
END

IF @StartDate = '0001-01-01' 
BEGIN
	SELECT @ProcessDefinitionID = REPORT_DATA_XML.value('(/ReportData/Report/ProcessDefinitionID/@value)[1]', 'bigint') 
	FROM REPORT_HISTORY 
	WHERE ID = @Report_History_ID
	
	IF @ProcessDefinitionID = 0 
	BEGIN 
		SET @ProcessDefinitionID = (SELECT top 1 ID from PROCESS_DEFINITION 
			where PROCESS_TYPE_CD = 'CYCLEPRC' and ACTIVE_IN = 'Y' 
			and SETTINGS_XML_IM.value('(/ProcessDefinitionSettings/LenderList/LenderID)[1]', 'bigint') = @LenderID
			ORDER BY UPDATE_DT DESC)
	END
	
	SELECT @CyclePeriod = EXECUTION_FREQ_CD FROM PROCESS_DEFINITION WHERE ID = @ProcessDefinitionID
	select @StartDate = 
		CASE @CyclePeriod 
			WHEN 'ANNUAL' THEN DATEADD(YEAR, -1, @EndDate)
			WHEN 'QUARTERLY' THEN DATEADD(QUARTER, -1, @EndDate)
			WHEN 'MONTHLY' THEN DATEADD(MONTH, -1, @EndDate)
			WHEN 'SEMIMONTH' THEN DATEADD(WEEK, -2, @EndDate)
			WHEN 'BIWEEK' THEN DATEADD(WEEK, -2, @EndDate)
			WHEN 'WEEK' THEN DATEADD(WEEK, -1, @EndDate)
			WHEN 'DAY' THEN DATEADD(d, -1, @EndDate)
			WHEN 'HOUR' THEN DATEADD(HOUR, -1, @EndDate)	
			ELSE DATEADD(MONTH, -1, @EndDate)	
		end	 
END

SET @StartDateSpecial = DATEADD(D, 1, DATEDIFF(D, 0, @StartDate))			
SET @EndDateSpecial = DATEADD(D, 1, DATEDIFF(D, 0, @EndDate)) 	

SET @StartDateSpecialLong = DATEADD(D, -100, @StartDateSpecial)
SET @EndDateSpecialLong = DATEADD(D, 100, @EndDateSpecial)

SET @PER_YEAR = CAST(SUBSTRING(@AccountPeriod,1,4) AS INTEGER)
SET @PER_NO = CAST(SUBSTRING(@AccountPeriod,6,2) AS INTEGER)

DECLARE @FIL_HAS_TAX AS varchar(1)='F'
DECLARE @FIL_HAS_OTHER AS varchar(1)='F'
DECLARE @FIL_HAS_FEE AS varchar(1)='F'
DECLARE @FIL_ASSMI AS varchar(1)='F'
DECLARE @FIL_AGENT_CODE AS varchar(20)='NONE'
DECLARE @FIL_DATERANGE AS varchar(1) = 'F'
DECLARE @FIL_DATERANGE_PIR AS varchar(1) = 'F'
DECLARE @FIL_DATERANGE_SPECIAL AS varchar(1) = 'F'
DECLARE @FIL_FUNDDT_RANGE AS varchar(1) = 'F'
DECLARE @FIL_DATERANGE_FILE AS varchar(1) = 'F'
DECLARE @FIL_PI_DELAY AS varchar(1) = 'T'
DECLARE @USE_LOGO_IN AS VARCHAR(1)='F'
DECLARE @ZIP_BARCODE_IN AS VARCHAR(1)='F'
DECLARE @PRINT_LENDER_ADDRESS_IN AS VARCHAR(1) = 'F'

DECLARE @HASFEE AS varchar(1)=NULL
DECLARE @CUR_PERIOD As varchar(1)=NULL
DECLARE @RealReportConfig as varchar(50)=NULL

If @ReportConfig = '0000'
	SET @RealReportConfig = @ReportType
ELSE
	SET @RealReportConfig = @ReportConfig
	
SET @FillerZero = '000000000000000000'
	
DECLARE @RecordCount bigint = 0
DECLARE @sqlstring AS nvarchar(4000)

END;

CREATE TABLE [dbo].[#tmptable](
	[LOAN_BRANCHCODE_TX] [nvarchar](20) NULL,
	[LOAN_DIVISIONCODE_TX] [nvarchar](20) NULL,
	[LOAN_TYPE_TX] [nvarchar](1000) NULL,
	[LOAN_TERM_NO] [int] NULL,
	[REQUIREDCOVERAGE_TYPE_TX] [nvarchar](1000) NULL,
	[REQUIREDCOVERAGE_CODE_TX] [nvarchar](30) NULL,
	[LOAN_NUMBER_TX] [nvarchar](18) NOT NULL,
	[LOAN_NUMBERSORT_TX] [nvarchar](36) NULL,
	[LOAN_NUMBERMASK_TX] [nvarchar] (max) NULL,
	[OWNER_LASTNAME_TX] [nvarchar](30) NOT NULL,
	[OWNER_FIRSTNAME_TX] [nvarchar](30) NOT NULL,
	[OWNER_MIDDLE_INITIAL_TX] [char](1) NOT NULL,
	[OWNER_NAME] [nvarchar](64) NULL,
	[OWNER_LINE1_TX] [nvarchar](100) NOT NULL,
	[OWNER_LINE2_TX] [nvarchar](100) NOT NULL,
	[OWNER_STATE_TX] [nvarchar](30) NOT NULL,
	[OWNER_CITY_TX] [nvarchar](40) NOT NULL,
	[OWNER_ZIP_TX] [nvarchar](30) NOT NULL,
	[COLLATERAL_YEAR_TX] [nvarchar](4) NULL,
	[COLLATERAL_MAKE_TX] [nvarchar](30) NULL,
	[COLLATERAL_MODEL_TX] [nvarchar](30) NULL,
	[BRANCH_NAME_TX] [nvarchar](100) NULL,
	[BRANCH_LINE1_TX] [nvarchar](100) NULL,
	[BRANCH_LINE2_TX] [nvarchar](100) NULL,
	[BRANCH_STATE_TX] [nvarchar](30) NULL,
	[BRANCH_CITY_TX] [nvarchar](40) NULL,
	[BRANCH_ZIP_TX] [nvarchar](30) NULL,
	[OTHER_NAME_TX] [nvarchar](100) NULL,
	[OTHER_LINE1_TX] [nvarchar](100) NULL,
	[OTHER_LINE2_TX] [nvarchar](100) NULL,
	[OTHER_STATE_TX] [nvarchar](30) NULL,
	[OTHER_CITY_TX] [nvarchar](40) NULL,
	[OTHER_ZIP_TX] [nvarchar](30) NULL,
	[PROPERTY_LINE1_TX] [nvarchar](100) NULL,
	[PROPERTY_LINE2_TX] [nvarchar](100) NULL,
	[PROPERTY_STATE_TX] [nvarchar](30) NULL,
	[PROPERTY_CITY_TX] [nvarchar](40) NULL,
	[PROPERTY_ZIP_TX] [nvarchar](30) NULL,
	[OWNER_TYPE_CD] [nvarchar](4) NULL,
	[INS_EXPIRE_DT] [datetime2] (7) NULL,
	[INS_EXPCXL_DT] [datetime2] (7) NULL,
	[INS_CANCEL_DT] [datetime2] (7) NULL,
	[INS_EFFECTIVE_DT] [datetime2] (7) NULL,
	[INS_PAYMENT_REPORT_DT] [datetime2] (7) NULL,
	[INS_PAYMENT_REPORT_CD] [nvarchar] (1) NULL,
	[LOAN_BALANCE_NO] [decimal](19, 2) NULL,
	[COLLATERAL_CODE_TX] [nvarchar](30) NULL,
	[COLLATERAL_NUMBER_NO] [int] NULL,
	[COLLATERAL_VIN_TX] [nvarchar](18) NULL,
	[LENDER_COLLATERAL_CODE_TX] [nvarchar](10) NULL,
	[LOAN_OFFICERCODE_TX] [nvarchar](20) NULL,			
	[LOAN_CREDITSCORECODE_TX] [nvarchar](20) NULL,
	[LOAN_LENDERCODE_TX] [nvarchar](10) NULL,
	[LOAN_LENDERNAME_TX] [nvarchar](40) NOT NULL,
	[LENDER_PHONE_TX] [nvarchar](20) NULL,
	[LENDER_PHONE2_TX] [nvarchar](20) NULL,
	[LENDER_PHONE2_EXT_TX] [nvarchar](10) NULL,
	[LENDER_FAX_TX] [nvarchar](20) NULL,
	[LENDER_WEB_ADDRESS_TX] [nvarchar](max) NULL,
	[CENTER_PHONE_TX] [nvarchar](20) NULL,
	[CENTER_PHONE_EXT_TX] [nvarchar] (10) NULL,
	[BRANCH_PHONE_TX] [nvarchar](20) NULL,
	[BRANCH_PHONE2_TX] [nvarchar](20) NULL,
	[BRANCH_PHONE2_EXT_TX] [nvarchar] (10) NULL,
	[BRANCH_FAX_TX] [nvarchar](20) NULL,
	[BRANCH_WEB_ADDRESS_TX] [nvarchar](max) NULL,
	[INSCOMPANY_NAME_TX] [nvarchar](100) NOT NULL,		
	[INSCOMPANY_POLICY_NO] [nvarchar](30) NOT NULL,
	[INSCOMPANY_ISSUE_DT] [datetime2] (7) NULL,
	[LOAN_CONTRACTTYPECODE] [nvarchar](30) NULL,
	[LOAN_STATUSCODE] [varchar](1) NOT NULL,
	[COLLATERAL_STATUSCODE] [varchar](2) NOT NULL,
	[REQUIREDCOVERAGE_STATUSCODE] [varchar](2) NULL,
	[REQUIREDCOVERAGE_SUBSTATUSCODE] [varchar](2) NULL,
	[REQUIREDCOVERAGE_INSSTATUSCODE] [varchar](2) NULL,
	[REQUIREDCOVERAGE_INSSUBSTATUSCODE] [varchar](2) NULL,
	[REQUIREDOCVERAGE_TYPE_CD] [nvarchar] (30) NULL,
	[AP_START_DT] [datetime2] (7) NULL,
	[AP_END_DT] [datetime2] (7) NULL,
	[CARRIER_ID] [bigint] NULL,
	[PROPERTY_DESCRIPTION] [nvarchar](max) NULL,
	[CPI_NETPREMIUM_AMOUNT_NO] [decimal](18, 2) NULL,
	[CPI_ISSUEDPREMIUM_AMOUNT_NO] [decimal](18, 2) NULL,
	[CPI_CANCELLEDPREMIUM_AMOUNT_NO] [decimal](18, 2) NULL,
	[REPORTING_CANCEL_DT] [datetime2] (7) NULL,
	[NEW_PAYMENT_AMOUNT_NO] [decimal] (10,2) NULL,
	[NEW_INCREASE_AMOUNT_NO] [decimal] (10,2) NULL,
	[CURRENT_PAYMENT_AMOUNT_NO] [decimal] (10,2) NULL,
	[ORIGINAL_PAYMENT_AMOUNT_NO] [decimal] (10,2) NULL,
	[CALCPMTINCR_NO] [decimal] (10,2) NULL,
	[PMTINCR_NO] [decimal] (10,2) NULL,
	[PmtOptPmtMethodValue] [decimal] (10,2) NULL,
	[CALC_CURRENT_PAYMENT_AMOUNT_NO] [decimal] (10,2) NULL,
	[CALC_CURRENT_PAYMENT_AMOUNT_REF_NO] [decimal] (10,2) NULL,
	[CALC_CURRENT_PAYMENT_AMOUNT_REF6497_NO] [decimal] (10,2) NULL,
	[CALC_NEW_PAYMENT_AMOUNT_NO] [decimal] (10,2) NULL,
	[CALC_INCREASED_BY_AMOUNT_NO] [decimal] (10,2) NULL,
	[CALC_INCREASED_BY_AMOUNT1_NO] [decimal] (10,2) NULL,
	[LENDER_OPTION_DELAYED_PI_NO] bigint NULL,
	[PAYMENT_INCREASE_METHOD_CD] [nvarchar] (20) NULL,
	[RENEW_TX] nvarchar(20) NULL,
	[NEW_PIR_DT] datetime2 (7) NULL,
	[ISS_REASON_TX] [nvarchar](10) NOT NULL,
	[EARNED_PREMIUM_AMOUNT_NO] [decimal] (10,2) NULL,
	[MONTHLY_BILLING_IN] [nvarchar](1) NULL,
	[PAYMENT_FREQUENCY_CD] [varchar](1) NULL,
	[QUICK_ISSUE_IN] [varchar] (1) NULL,
	[HOLD_IN] [varchar] (1) NULL,
	[EARNED_PAYMENT_NO] [int] NULL,		
	[TEMPLATE_DATA_XML] [xml] NULL,	
	[USE_LOGO_IN] [varchar] (1) NULL,
	[ZIP_BARCODE_IN] [varchar] (1) NULL,
	[PRINT_LENDER_ADDRESS_IN] [varchar] (1) NULL,
	[Paragraph1] nvarchar(max) NULL,
	[Paragraph2] nvarchar(max) NULL,
	[Paragraph3] nvarchar(max) NULL,
	[Paragraph4] nvarchar(max) NULL,
	[Paragraph5] nvarchar(max) NULL,
	[Paragraph6] nvarchar(max) NULL,
	[Paragraph7] nvarchar(max) NULL,
	[SALUTATION_TX] nvarchar(max) NULL,
	[CLOSING_TX] nvarchar(max) NULL,
	[3216_ADDRESS1] nvarchar(max),
	[3216_ADDRESS2] nvarchar(max),
	[3216_ADDRESS3] nvarchar(max),
	[3216_ADDRESS4] nvarchar(max),
	[3216_ADDRESS5] nvarchar(max),
	[3216_ADDRESS6] nvarchar(max),
	[6487_ADDRESS] nvarchar(max),
	[PRINT_DATE_ADJ] nvarchar(40),
	[REPORT_SORTBY_TX] [nvarchar](max) NULL,
	[REPORT_GROUPBY_TX] [nvarchar](max) NULL,
	[REPORT_FOOTER_TX] [varchar](max) NULL
) ON [PRIMARY]

CREATE TABLE [dbo].[#tmpfilter](
	[ATTRIBUTE_CD] [nvarchar](50) NULL,
	[VALUE_TX] [nvarchar](50) NULL
) ON [PRIMARY]

CREATE TABLE #tmpSpecialFPCs ( 
	ID bigint,
	QUICK_ISSUE_IN varchar(1) NULL,
	ISSUE_DT DATETIME2(7) NULL,
	NEW_ISSUE_DT DATETIME2(7) NULL
) ON [PRIMARY]

CREATE TABLE #tmpFPCIDs ( 
	ID bigint PRIMARY KEY
) ON [PRIMARY]

INSERT INTO #tmpfilter 
	([ATTRIBUTE_CD]
	,[VALUE_TX])
SELECT
	RAD.ATTRIBUTE_CD,
	CASE 
		WHEN Custom.VALUE_TX IS NOT NULL then Custom.VALUE_TX
		WHEN RA.VALUE_TX IS NOT NULL then RA.VALUE_TX
		ELSE RAD.VALUE_TX
	END AS VALUE_TX
FROM REF_CODE RC
JOIN REF_CODE_ATTRIBUTE RAD ON RAD.DOMAIN_CD = RC.DOMAIN_CD AND RAD.REF_CD = 'DEFAULT' AND RAD.ATTRIBUTE_CD like 'FIL%'
LEFT JOIN REF_CODE_ATTRIBUTE RA ON RA.DOMAIN_CD = RC.DOMAIN_CD AND RA.REF_CD = RC.CODE_CD AND RA.ATTRIBUTE_CD = RAD.ATTRIBUTE_CD
LEFT JOIN 
	(SELECT CODE_TX,REPORT_CD,REPORT_DOMAIN_CD,REPORT_REF_ATTRIBUTE_CD,VALUE_TX FROM REPORT_CONFIG RC
	JOIN REPORT_CONFIG_ATTRIBUTE RCA ON RCA.REPORT_CONFIG_ID = RC.ID) CUSTOM
	ON CUSTOM.CODE_TX = @RealReportConfig AND CUSTOM.REPORT_DOMAIN_CD = RAD.DOMAIN_CD AND CUSTOM.REPORT_REF_ATTRIBUTE_CD = RAD.ATTRIBUTE_CD AND CUSTOM.REPORT_CD = @ReportType
WHERE RC.DOMAIN_CD = 'Report_PaymentIncreaseNotices' AND RC.CODE_CD = @ReportType

--Report specific
Select @FIL_DATERANGE =  ISNULL(Value_TX,'F') from #tmpfilter where ATTRIBUTE_CD = 'FIL_DATERANGE'
Select @FIL_DATERANGE_PIR =  ISNULL(Value_TX,'F') from #tmpfilter where ATTRIBUTE_CD = 'FIL_DATERANGE_PIR'
Select @FIL_DATERANGE_SPECIAL =  ISNULL(Value_TX,'F') from #tmpfilter where ATTRIBUTE_CD = 'FIL_DATERANGE_SPECIAL'
Select @FIL_DATERANGE_FILE =  ISNULL(Value_TX,'F') from #tmpfilter where ATTRIBUTE_CD = 'FIL_DATERANGE_FILE'
Select @FIL_FUNDDT_RANGE =  ISNULL(Value_TX,'F') from #tmpfilter where ATTRIBUTE_CD = 'FIL_FUNDDT_RANGE'

Select @FIL_PI_DELAY = ISNULL(Value_TX,'F') from #tmpfilter WHERE ATTRIBUTE_CD = 'FIL_PI_DELAY'
SELECT @USE_LOGO_IN = ISNULL(Value_TX,'F') FROM #tmpfilter WHERE ATTRIBUTE_CD = 'FIL_USE_LOGO_IN'
SELECT @ZIP_BARCODE_IN = ISNULL(Value_TX,'F') FROM #tmpfilter WHERE ATTRIBUTE_CD = 'FIL_ZIP_BARCODE_IN'
SELECT @PRINT_LENDER_ADDRESS_IN = ISNULL(Value_TX,'F') FROM #tmpfilter WHERE ATTRIBUTE_CD = 'FIL_PRINT_LENDER_ADDRESS_IN'

DECLARE @TEMPLATEDEFAULT nvarchar(50)='DEFAULTV'
IF NOT (@Division in ('3','8') OR ISNULL(@Division,'1') = '1')
BEGIN
	SET @TEMPLATEDEFAULT = 'DEFAULTM'
END

SELECT @PWK = ISNULL((SELECT TEMPLATE_DATA_XML.value('(/Notice)[1]/Paragraph1[1]', 'nvarchar(max)') FROM PAYMENT_INCREASE_TEMPLATE WHERE TEMPLATE_NAME_TX = @RealReportConfig),'')
SELECT @P1 = CASE WHEN @PWK <> ''  THEN @PWK ELSE (SELECT ISNULL(TEMPLATE_DATA_XML.value('(/Notice)[1]/Paragraph1[1]', 'nvarchar(max)'), '') FROM PAYMENT_INCREASE_TEMPLATE WHERE TEMPLATE_NAME_TX = @TEMPLATEDEFAULT) END
SELECT @PWK = ISNULL((SELECT TEMPLATE_DATA_XML.value('(/Notice)[1]/Paragraph2[1]', 'nvarchar(max)') FROM PAYMENT_INCREASE_TEMPLATE WHERE TEMPLATE_NAME_TX = @RealReportConfig),'')
SELECT @P2 = CASE WHEN @PWK <> ''  THEN @PWK ELSE (SELECT ISNULL(TEMPLATE_DATA_XML.value('(/Notice)[1]/Paragraph2[1]', 'nvarchar(max)'), '') FROM PAYMENT_INCREASE_TEMPLATE WHERE TEMPLATE_NAME_TX = @TEMPLATEDEFAULT) END
SELECT @PWK = ISNULL((SELECT TEMPLATE_DATA_XML.value('(/Notice)[1]/Paragraph3[1]', 'nvarchar(max)') FROM PAYMENT_INCREASE_TEMPLATE WHERE TEMPLATE_NAME_TX = @RealReportConfig),'')
SELECT @P3 = CASE WHEN @PWK <> ''  THEN @PWK ELSE (SELECT ISNULL(TEMPLATE_DATA_XML.value('(/Notice)[1]/Paragraph3[1]', 'nvarchar(max)'), '') FROM PAYMENT_INCREASE_TEMPLATE WHERE TEMPLATE_NAME_TX = @TEMPLATEDEFAULT) END
SELECT @PWK = ISNULL((SELECT TEMPLATE_DATA_XML.value('(/Notice)[1]/Paragraph4[1]', 'nvarchar(max)') FROM PAYMENT_INCREASE_TEMPLATE WHERE TEMPLATE_NAME_TX = @RealReportConfig),'')
SELECT @P4 = CASE WHEN @PWK <> ''  THEN @PWK ELSE (SELECT ISNULL(TEMPLATE_DATA_XML.value('(/Notice)[1]/Paragraph4[1]', 'nvarchar(max)'), '') FROM PAYMENT_INCREASE_TEMPLATE WHERE TEMPLATE_NAME_TX = @TEMPLATEDEFAULT) END
SELECT @PWK = ISNULL((SELECT TEMPLATE_DATA_XML.value('(/Notice)[1]/Paragraph5[1]', 'nvarchar(max)') FROM PAYMENT_INCREASE_TEMPLATE WHERE TEMPLATE_NAME_TX = @RealReportConfig),'')
SELECT @P5 = CASE WHEN @PWK <> ''  THEN @PWK ELSE (SELECT ISNULL(TEMPLATE_DATA_XML.value('(/Notice)[1]/Paragraph5[1]', 'nvarchar(max)'), '') FROM PAYMENT_INCREASE_TEMPLATE WHERE TEMPLATE_NAME_TX = @TEMPLATEDEFAULT) END
SELECT @PWK = ISNULL((SELECT TEMPLATE_DATA_XML.value('(/Notice)[1]/Paragraph6[1]', 'nvarchar(max)') FROM PAYMENT_INCREASE_TEMPLATE WHERE TEMPLATE_NAME_TX = @RealReportConfig),'')
SELECT @P6 = CASE WHEN @PWK <> ''  THEN @PWK ELSE (SELECT ISNULL(TEMPLATE_DATA_XML.value('(/Notice)[1]/Paragraph6[1]', 'nvarchar(max)'), '') FROM PAYMENT_INCREASE_TEMPLATE WHERE TEMPLATE_NAME_TX = @TEMPLATEDEFAULT) END
SELECT @PWK = ISNULL((SELECT TEMPLATE_DATA_XML.value('(/Notice)[1]/Paragraph7[1]', 'nvarchar(max)') FROM PAYMENT_INCREASE_TEMPLATE WHERE TEMPLATE_NAME_TX = @RealReportConfig),'')
SELECT @P7 = CASE WHEN @PWK <> ''  THEN @PWK ELSE (SELECT ISNULL(TEMPLATE_DATA_XML.value('(/Notice)[1]/Paragraph7[1]', 'nvarchar(max)'), '') FROM PAYMENT_INCREASE_TEMPLATE WHERE TEMPLATE_NAME_TX = @TEMPLATEDEFAULT) END

SELECT @PWK = ISNULL((SELECT TEMPLATE_DATA_XML.value('(/Notice)[1]/Salutation[1]', 'nvarchar(max)') FROM PAYMENT_INCREASE_TEMPLATE WHERE TEMPLATE_NAME_TX = @RealReportConfig),'')
SELECT @SALUTATION_TX = CASE WHEN @PWK <> ''  THEN @PWK ELSE (SELECT ISNULL(TEMPLATE_DATA_XML.value('(/Notice)[1]/Salutation[1]', 'nvarchar(max)'), '') FROM PAYMENT_INCREASE_TEMPLATE WHERE TEMPLATE_NAME_TX = @TEMPLATEDEFAULT) END
SELECT @PWK = ISNULL((SELECT TEMPLATE_DATA_XML.value('(/Notice)[1]/Closing[1]', 'nvarchar(max)') FROM PAYMENT_INCREASE_TEMPLATE WHERE TEMPLATE_NAME_TX = @RealReportConfig),'')
SELECT @CLOSING_TX = CASE WHEN @PWK <> ''  THEN @PWK ELSE (SELECT ISNULL(TEMPLATE_DATA_XML.value('(/Notice)[1]/Closing[1]', 'nvarchar(max)'), '') FROM PAYMENT_INCREASE_TEMPLATE WHERE TEMPLATE_NAME_TX = @TEMPLATEDEFAULT) END

SELECT @TEMPLATE_XML = 
'<Notice>
	<Salutation>' + @SALUTATION_TX + '</Salutation>
	<Closing>' + @CLOSING_TX + '</Closing>
	<Paragraph1>' + @P1 + '</Paragraph1>
	<Paragraph2>' + @P2 + '</Paragraph2>
	<Paragraph3>' + @P3 + '</Paragraph3>
	<Paragraph4>' + @P4 + '</Paragraph4>
	<Paragraph5>' + @P5 + '</Paragraph5>
	<Paragraph6>' + @P6 + '</Paragraph6>
	<Paragraph7>' + @P7 + '</Paragraph7>
</Notice>'

BEGIN --Set Filters, Groups, and Sorts
IF @GroupByCode IS NULL OR @GroupByCode = ''
	SELECT @GroupBySQL=GROUP_TX FROM REPORT_CONFIG WHERE CODE_TX = @ReportConfig
ELSE
	SELECT @GroupBySQL=DESCRIPTION_TX FROM REF_CODE WHERE DOMAIN_CD = 'Report_GroupBy' AND CODE_CD = @GroupByCode

IF @SortByCode IS NULL OR @SortByCode = ''
	SELECT @SortBySQL=SORT_TX FROM REPORT_CONFIG WHERE CODE_TX = @ReportConfig
ELSE
	SELECT @SortBySQL=DESCRIPTION_TX FROM REF_CODE WHERE DOMAIN_CD = 'Report_SortBy' AND CODE_CD = @SortByCode

IF @FilterByCode IS NULL OR @FilterByCode = '' or @FilterByCode = 'SpecialDate' --SpecialDate code is used to control on the lender level the report version to use
	SELECT @FilterBySQL=FILTER_TX FROM REPORT_CONFIG WHERE CODE_TX = @ReportConfig
Else
	SELECT @FilterBySQL=DESCRIPTION_TX FROM REF_CODE WHERE DOMAIN_CD = 'Report_FilterBy' AND CODE_CD = @FilterByCode
END;

SELECT @HeaderTx=HEADER_TX FROM REPORT_CONFIG WHERE CODE_TX = @ReportConfig
SELECT @FooterTx=FOOTER_TX FROM REPORT_CONFIG WHERE CODE_TX = @ReportConfig

SELECT @GroupByCode = ''

--Creating temp table with FPC IDs for the Special Date logic
IF @FIL_DATERANGE_SPECIAL = 'T'
BEGIN
	INSERT INTO #tmpSpecialFPCs (ID, QUICK_ISSUE_IN, ISSUE_DT, NEW_ISSUE_DT)
		SELECT FPC.ID, FPC.QUICK_ISSUE_IN, FPC.ISSUE_DT,
		DATEADD(DAY, CASE WHEN FPC.QUICK_ISSUE_IN = 'Y' THEN 0 
			ELSE ISNULL(RC.PmtOptIncrDelayedBilling,0) 
			END, FPC.ISSUE_DT)
		FROM FORCE_PLACED_CERTIFICATE FPC
		JOIN LOAN L ON FPC.LOAN_ID = L.ID AND L.PURGE_DT IS NULL
		JOIN FORCE_PLACED_CERT_REQUIRED_COVERAGE_RELATE FPCRCR ON FPCRCR.FPC_ID = FPC.ID AND FPCRCR.PURGE_DT IS NULL
		JOIN REQUIRED_COVERAGE RC ON FPCRCR.REQUIRED_COVERAGE_ID = RC.ID AND RC.PURGE_DT IS NULL	
		WHERE 1=1
		AND FPC.PURGE_DT IS NULL
		AND L.LENDER_ID = @LenderID
		AND FPC.ISSUE_DT between @StartDateSpecialLong and @EndDateSpecialLong --widens the start and end date by 100 days to only pull a subset of FPCs

	INSERT INTO #tmpFPCIDs (ID)	
		SELECT SFPC.ID 
		FROM #tmpSpecialFPCs SFPC
		WHERE 
      (
       (SFPC.QUICK_ISSUE_IN = 'N' AND SFPC.NEW_ISSUE_DT BETWEEN @StartDateSpecial AND @EndDateSpecial) OR --only pulls the FPC IDs that fall between the Start/End date and have the special logic
       (SFPC.QUICK_ISSUE_IN = 'Y' AND SFPC.NEW_ISSUE_DT BETWEEN @StartDate AND @EndDate)  ---use end date of prev & current cycle for QI
      )
		GROUP BY SFPC.ID
END

--Creating temp table with FPC IDs for the Funded FPC
IF @FIL_FUNDDT_RANGE = 'T'
BEGIN
	INSERT INTO #tmpFPCIDs (ID)
		SELECT DISTINCT FPC.ID
		FROM FORCE_PLACED_CERTIFICATE FPC
		JOIN LOAN L ON FPC.LOAN_ID = L.ID AND L.PURGE_DT IS NULL
		JOIN FORCE_PLACED_CERT_REQUIRED_COVERAGE_RELATE FPCRCR ON FPCRCR.FPC_ID = FPC.ID AND FPCRCR.PURGE_DT IS NULL
		JOIN REQUIRED_COVERAGE RC ON FPCRCR.REQUIRED_COVERAGE_ID = RC.ID AND RC.PURGE_DT IS NULL	
		CROSS APPLY
		(
		  SELECT MIN(TXN_DT) AS FUND_DT 
		  FROM FINANCIAL_TXN FT WHERE FT.FPC_ID = FPC.ID
		  AND FT.PURGE_DT IS NULL
		  AND FT.TXN_TYPE_CD = 'P'
		) AS ISSUE_POST
		WHERE 1=1
		AND FPC.PURGE_DT IS NULL
		AND L.LENDER_ID = @LenderID
		AND ISSUE_POST.FUND_DT between @StartDate and @EndDate 	
END

--Creating temp table with FPC IDs for the Payment Report Date logic
IF @FIL_DATERANGE = 'T'
BEGIN
	INSERT INTO #tmpFPCIDs (ID)
		SELECT FPC.ID
		FROM FORCE_PLACED_CERTIFICATE FPC
		JOIN LOAN L ON FPC.LOAN_ID = L.ID AND L.PURGE_DT IS NULL
		WHERE FPC.PURGE_DT IS NULL
		AND L.LENDER_ID = @LenderID
		AND FPC.PAYMENT_REPORT_DT between @StartDate and @EndDate 
END

--Creating temp table with FPC IDs for the PIR Date logic
IF @FIL_DATERANGE_PIR = 'T'
BEGIN
	INSERT INTO #tmpFPCIDs (ID)
		SELECT FPC.ID
		FROM FORCE_PLACED_CERTIFICATE FPC
		JOIN LOAN L ON FPC.LOAN_ID = L.ID AND L.PURGE_DT IS NULL
		WHERE FPC.PURGE_DT IS NULL
		AND L.LENDER_ID = @LenderID
		AND FPC.PIR_DT between @StartDate and @EndDate 
END

--Creating temp table with FPC IDs for the GTE/TDE file logic
IF @FIL_DATERANGE_FILE = 'T'
BEGIN
	SELECT @StatementDt = DATEADD(D, 0, DATEDIFF(D, 0, STATEMENT_DT)) FROM BILLING_GROUP WHERE ID = @BillingGroupID
	
	INSERT INTO #tmpFPCIDs (ID)
		SELECT FPC.ID  
		FROM FORCE_PLACED_CERTIFICATE FPC
		JOIN FINANCIAL_TXN FTX on FPC.ID = FTX.FPC_ID and FTX.PURGE_DT is null
		JOIN FINANCIAL_TXN_APPLY FTA on FTX.ID = FTA.FINANCIAL_TXN_ID and FTA.PURGE_DT is null
		WHERE FPC.PURGE_DT IS NULL
		AND FTA.BILLING_GROUP_ID = @BillingGroupID
		AND FPC.PIR_DT >= @StatementDt
		GROUP BY FPC.ID
		HAVING SUM(FTX.AMOUNT_NO) > 0
END


INSERT INTO #tmptable (
			[LOAN_BRANCHCODE_TX]
           ,[LOAN_DIVISIONCODE_TX]
		   ,[LOAN_TYPE_TX]
           ,[LOAN_TERM_NO]
           ,[REQUIREDCOVERAGE_TYPE_TX]
           ,[REQUIREDCOVERAGE_CODE_TX]
           ,[LOAN_NUMBER_TX]
           ,[LOAN_NUMBERSORT_TX]
           ,[LOAN_NUMBERMASK_TX]
           ,[OWNER_LASTNAME_TX]
           ,[OWNER_FIRSTNAME_TX]
           ,[OWNER_MIDDLE_INITIAL_TX]
           ,[OWNER_NAME]
           ,[OWNER_LINE1_TX]
           ,[OWNER_LINE2_TX]
           ,[OWNER_STATE_TX]
           ,[OWNER_CITY_TX]
           ,[OWNER_ZIP_TX]
		   ,[COLLATERAL_YEAR_TX]
		   ,[COLLATERAL_MAKE_TX]
		   ,[COLLATERAL_MODEL_TX]           
		   ,[BRANCH_NAME_TX]
		   ,[BRANCH_LINE1_TX]
		   ,[BRANCH_LINE2_TX]
		   ,[BRANCH_STATE_TX] 
		   ,[BRANCH_CITY_TX]
		   ,[BRANCH_ZIP_TX]
		   ,[OTHER_NAME_TX] 
		   ,[OTHER_LINE1_TX]
		   ,[OTHER_LINE2_TX]
		   ,[OTHER_STATE_TX]
		   ,[OTHER_CITY_TX]
		   ,[OTHER_ZIP_TX]  
		   ,[PROPERTY_LINE1_TX]
		   ,[PROPERTY_LINE2_TX]
		   ,[PROPERTY_STATE_TX]
		   ,[PROPERTY_CITY_TX]
		   ,[PROPERTY_ZIP_TX]           
           ,[OWNER_TYPE_CD]
           ,[INS_EXPIRE_DT]
           ,[INS_EXPCXL_DT]
           ,[INS_CANCEL_DT]
           ,[INS_EFFECTIVE_DT]
           ,[INS_PAYMENT_REPORT_DT]
           ,[INS_PAYMENT_REPORT_CD]
           ,[LOAN_BALANCE_NO]
           ,[COLLATERAL_CODE_TX]
           ,[COLLATERAL_NUMBER_NO]
           ,[COLLATERAL_VIN_TX]
           ,[LENDER_COLLATERAL_CODE_TX]
           ,[LOAN_OFFICERCODE_TX]
		   ,[LOAN_CREDITSCORECODE_TX]
           ,[LOAN_LENDERCODE_TX]
           ,[LOAN_LENDERNAME_TX]
           ,[LENDER_PHONE_TX]
           ,[LENDER_PHONE2_TX]
           ,[LENDER_PHONE2_EXT_TX]
           ,[LENDER_FAX_TX]
           ,[LENDER_WEB_ADDRESS_TX]
           ,[CENTER_PHONE_TX]
           ,[CENTER_PHONE_EXT_TX]
           ,[BRANCH_PHONE_TX]
           ,[BRANCH_PHONE2_TX]
           ,[BRANCH_PHONE2_EXT_TX]
           ,[BRANCH_FAX_TX]
           ,[BRANCH_WEB_ADDRESS_TX]
           ,[INSCOMPANY_NAME_TX]
           ,[INSCOMPANY_POLICY_NO]
           ,[INSCOMPANY_ISSUE_DT]
           ,[LOAN_CONTRACTTYPECODE]
           ,[LOAN_STATUSCODE]
           ,[COLLATERAL_STATUSCODE]
           ,[REQUIREDCOVERAGE_STATUSCODE]
           ,[REQUIREDCOVERAGE_SUBSTATUSCODE]
           ,[REQUIREDCOVERAGE_INSSTATUSCODE]
           ,[REQUIREDCOVERAGE_INSSUBSTATUSCODE]
           ,[REQUIREDOCVERAGE_TYPE_CD]
		   ,[AP_START_DT]
		   ,[AP_END_DT]
		   ,[CARRIER_ID]
           ,[PROPERTY_DESCRIPTION]
           ,[CPI_NETPREMIUM_AMOUNT_NO]
           ,[CPI_ISSUEDPREMIUM_AMOUNT_NO]
           ,[CPI_CANCELLEDPREMIUM_AMOUNT_NO]
           ,[REPORTING_CANCEL_DT]
           ,[NEW_PAYMENT_AMOUNT_NO]
		   ,[NEW_INCREASE_AMOUNT_NO]
           ,[CURRENT_PAYMENT_AMOUNT_NO]
           ,[ORIGINAL_PAYMENT_AMOUNT_NO]
           ,[CALCPMTINCR_NO]
           ,[PMTINCR_NO]
           ,[PmtOptPmtMethodValue]
           ,[CALC_CURRENT_PAYMENT_AMOUNT_NO]
           ,[CALC_CURRENT_PAYMENT_AMOUNT_REF_NO]
           ,[CALC_CURRENT_PAYMENT_AMOUNT_REF6497_NO]
           ,[CALC_NEW_PAYMENT_AMOUNT_NO]
           ,[CALC_INCREASED_BY_AMOUNT_NO]
           ,[CALC_INCREASED_BY_AMOUNT1_NO]
           ,[LENDER_OPTION_DELAYED_PI_NO]
           ,[PAYMENT_INCREASE_METHOD_CD]
           ,[RENEW_TX]
           ,[NEW_PIR_DT]
           ,[ISS_REASON_TX]
           ,[EARNED_PREMIUM_AMOUNT_NO]
           ,[MONTHLY_BILLING_IN]
           ,[PAYMENT_FREQUENCY_CD]
           ,[QUICK_ISSUE_IN]
           ,[HOLD_IN]
           ,[EARNED_PAYMENT_NO]	
           ,[TEMPLATE_DATA_XML]
           ,[USE_LOGO_IN]
           ,[ZIP_BARCODE_IN]
           ,[PRINT_LENDER_ADDRESS_IN]
           ,[Paragraph1]
           ,[Paragraph2]
           ,[Paragraph3]
           ,[Paragraph4]
           ,[Paragraph5]
           ,[Paragraph6]
           ,[Paragraph7]
           ,[SALUTATION_TX]
           ,[CLOSING_TX]
           ,[3216_ADDRESS1]
           ,[3216_ADDRESS2]
           ,[3216_ADDRESS3]
           ,[3216_ADDRESS4]
           ,[3216_ADDRESS5]
           ,[3216_ADDRESS6]
           ,[6487_ADDRESS]
		   ,[PRINT_DATE_ADJ] 
           ,[REPORT_SORTBY_TX]
           ,[REPORT_GROUPBY_TX]
           ,[REPORT_FOOTER_TX])
SELECT 
	(CASE WHEN L.BRANCH_CODE_TX IS NULL OR L.BRANCH_CODE_TX = '' THEN 'NOBRANCH' ELSE L.BRANCH_CODE_TX END) AS	[LOAN_BRANCHCODE_TX]
	,CASE WHEN ISNULL(L.DIVISION_CODE_TX,'') = ''
		THEN '0'
		ELSE L.DIVISION_CODE_TX
	 END AS [LOAN_DIVISIONCODE_TX]
	 ,ISNULL(RC_DIVISION.DESCRIPTION_TX,RC_SC.DESCRIPTION_TX) AS [LOAN_TYPE_TX]
	,DATEDIFF(MONTH,L.EFFECTIVE_DT,L.MATURITY_DT) AS [LOAN_TERM_NO]
	,ISNULL(RC_COVERAGETYPE.MEANING_TX,'') AS [REQUIREDCOVERAGE_TYPE_TX]
	,RC.TYPE_CD AS [REQUIREDCOVERAGE_CODE_TX]
	,L.NUMBER_TX AS	[LOAN_NUMBER_TX]
	,SUBSTRING(@FillerZero, 1, 18 - LEN(L.NUMBER_TX)) + CAST(L.NUMBER_TX AS nvarchar(18)) AS [LOAN_NUMBERSORT_TX]
	,CASE WHEN LEN(L.NUMBER_TX) < 5 THEN L.NUMBER_TX 
		ELSE RIGHT('XXXXXXXXXXXXX',LEN(L.NUMBER_TX) - 4) + RIGHT(L.NUMBER_TX,4) 
	 END AS [LOAN_NUMBERMASK_TX]
	,ISNULL(O.LAST_NAME_TX,'') AS [OWNER_LASTNAME_TX]
	,ISNULL(O.FIRST_NAME_TX,'') AS [OWNER_FIRSTNAME_TX]
	,ISNULL(O.MIDDLE_INITIAL_TX,'') AS [OWNER_MIDDLE_INITIAL_TX]
	,CASE WHEN O.FIRST_NAME_TX IS NULL THEN O.LAST_NAME_TX ELSE RTRIM(O.FIRST_NAME_TX + ' ' + CASE WHEN ISNULL(O.MIDDLE_INITIAL_TX,'') = '' THEN '' ELSE O.MIDDLE_INITIAL_TX + '. ' END + ISNULL(O.LAST_NAME_TX,'')) END AS [OWNER_NAME]
	,ISNULL(AO.LINE_1_TX,'') AS	[OWNER_LINE1_TX]
	,ISNULL(AO.LINE_2_TX,'') AS	[OWNER_LINE2_TX]
	,ISNULL(AO.STATE_PROV_TX,'') AS	[OWNER_STATE_TX]
	,ISNULL(AO.CITY_TX,'') AS [OWNER_CITY_TX]
	,COALESCE(STUFF(AO.POSTAL_CODE_TX, 6, 0, '-'), AO.POSTAL_CODE_TX) AS [OWNER_ZIP_TX]
	,P.YEAR_TX AS [COLLATERAL_YEAR_TX]
	,P.MAKE_TX AS [COLLATERAL_MAKE_TX] 
	,P.MODEL_TX AS [COLLATERAL_MODEL_TX]
	,LO.NAME_TX AS [BRANCH_NAME_TX]
	,LOPADDR.LINE_1_TX AS [BRANCH_LINE1_TX]
	,LOPADDR.LINE_2_TX AS [BRANCH_LINE2_TX]
	,LOPADDR.STATE_PROV_TX AS [BRANCH_STATE_TX] 
	,LOPADDR.CITY_TX AS [BRANCH_CITY_TX]
	,COALESCE(STUFF(LOPADDR.POSTAL_CODE_TX, 6, 0, '-'), LOPADDR.POSTAL_CODE_TX) AS [BRANCH_ZIP_TX]
	,LO.NAME_TX AS [OTHER_NAME_TX] 
	,LOMADDR.LINE_1_TX AS [OTHER_LINE1_TX]
	,LOMADDR.LINE_2_TX AS [OTHER_LINE2_TX]
	,LOMADDR.STATE_PROV_TX AS [OTHER_STATE_TX]
	,LOMADDR.CITY_TX AS [OTHER_CITY_TX]
	,COALESCE(STUFF(LOMADDR.POSTAL_CODE_TX, 6, 0, '-'), LOMADDR.POSTAL_CODE_TX) AS [OTHER_ZIP_TX]
	,AP.LINE_1_TX AS [PROPERTY_LINE1_TX]
	,AP.LINE_2_TX AS [PROPERTY_LINE2_TX]
	,AP.STATE_PROV_TX AS [PROPERTY_STATE_TX]
	,AP.CITY_TX AS [PROPERTY_CITY_TX]
	,COALESCE(STUFF(AP.POSTAL_CODE_TX, 6, 0, '-'), AP.POSTAL_CODE_TX) AS [PROPERTY_ZIP_TX]
	,OLR.OWNER_TYPE_CD AS [OWNER_TYPE_CD]
	,FPC.EXPIRATION_DT AS [INS_EXPIRE_DT]
	,ISNULL(FPC.CANCELLATION_DT ,FPC.EXPIRATION_DT) AS [INS_EXPCXL_DT]
	,FPC.CANCELLATION_DT AS [INS_CANCEL_DT]
	,FPC.EFFECTIVE_DT AS [INS_EFFECTIVE_DT]
	,FPC.PAYMENT_REPORT_DT AS [INS_PAYMENT_REPORT_DT]
	,FPC.PAYMENT_REPORT_CD AS [INS_PAYMENT_REPORT_CD]
	,C.LOAN_BALANCE_NO AS [LOAN_BALANCE_NO]
	,CC.CODE_TX AS	[COLLATERAL_CODE_TX]
	,C.COLLATERAL_NUMBER_NO AS [COLLATERAL_NUMBER_NO]
	,P.VIN_TX AS [COLLATERAL_VIN_TX]
	,C.LENDER_COLLATERAL_CODE_TX AS	[LENDER_COLLATERAL_CODE_TX]
	,L.OFFICER_CODE_TX AS [LOAN_OFFICERCODE_TX]
	,L.CREDIT_SCORE_CD as [LOAN_CREDITSCORECODE_TX]
	,LND.CODE_TX AS	[LOAN_LENDERCODE_TX]
	,LND.NAME_TX AS	[LOAN_LENDERNAME_TX]
	,LND.PHONE_TX AS [LENDER_PHONE_TX]
	,LND.SECONDARY_PHONE_TX AS [LENDER_PHONE2_TX]
	,LND.SECONDARY_PHONE_EXT_TX AS [LENDER_PHONE2_EXT_TX]
	,LND.FAX_TX AS [LENDER_FAX_TX]
	,LND.WEB_ADDRESS_TX AS [LENDER_WEB_ADDRESS_TX]
	,SC.PHONE_TX AS [CENTER_PHONE_TX]
	,SC.PHONE_EXT_TX AS [CENTER_PHONE_EXT_TX]
	,ISNULL(LO.PHONE_TX,LND.PHONE_TX) AS [BRANCH_PHONE_TX]
	,ISNULL(LO.SECONDARY_PHONE_TX,LND.SECONDARY_PHONE_TX) AS [BRANCH_PHONE2_TX]
	,ISNULL(LO.SECONDARY_PHONE_EXT_TX,LND.SECONDARY_PHONE_EXT_TX) AS [BRANCH_PHONE2_EXT_TX]
	,ISNULL(LO.FAX_TX,LND.FAX_TX) AS [BRANCH_FAX_TX]
	,LND.WEB_ADDRESS_TX AS [BRANCH_WEB_ADDRESS_TX]
	,ISNULL(CR.NAME_TX,'') AS [INSCOMPANY_NAME_TX]		
	,FPC.NUMBER_TX AS [INSCOMPANY_POLICY_NO]	
	,FPC.ISSUE_DT AS [INSCOMPANY_ISSUE_DT]	 
	,L.CONTRACT_TYPE_CD AS [LOAN_CONTRACTTYPECODE]
	,L.STATUS_CD AS	[LOAN_STATUSCODE]
	,C.STATUS_CD AS	[COLLATERAL_STATUSCODE]
	,RC.STATUS_CD AS [REQUIREDCOVERAGE_STATUSCODE]
	,RC.SUB_STATUS_CD AS [REQUIREDCOVERAGE_SUBSTATUSCODE]
	,RC.SUMMARY_STATUS_CD AS [REQUIREDCOVERAGE_INSSTATUSCODE]
	,RC.SUMMARY_SUB_STATUS_CD AS [REQUIREDCOVERAGE_INSSUBSTATUSCODE]
	,RC.RECORD_TYPE_CD AS [REQUIREDOCVERAGE_TYPE_CD]
	,@StartDate AS [AP_START_DT]
	,@EndDate AS [AP_END_DT]
	,FPC.CARRIER_ID AS [CARRIER_ID]
	,dbo.fn_GetPropertyDescriptionForReports(C.ID) AS PROPERTY_DESCRIPTION
	,CASE WHEN FTX.NET_AMOUNT IS NOT NULL THEN FTX.NET_AMOUNT ELSE ISNULL(CPA_I.TOTAL_PREMIUM_NO,0) - ABS(ISNULL(CPA_C.TOTAL_PREMIUM_NO,0)) END AS [CPI_NETPREMIUM_AMOUNT_NO]
	,ISNULL(CPA_I.TOTAL_PREMIUM_NO,0) AS [CPI_ISSUEDPREMIUM_AMOUNT_NO]
	,ABS(ISNULL(CPA_C.TOTAL_PREMIUM_NO,0)) AS [CPI_CANCELLEDPREMIUM_AMOUNT_NO]
	,ISNULL(CPA_C.REPORTING_CANCEL_DT,FPC.EXPIRATION_DT) AS [REPORTING_CANCEL_DT]
	,L.PAYMENT_AMOUNT_NO AS [NEW_PAYMENT_AMOUNT_NO]
	,ISNULL(CPA_I.TOTAL_PREMIUM_NO,0) / 12 AS [NEW_INCREASE_AMOUNT_NO]
	,FPC.CURRENT_PAYMENT_AMOUNT_NO AS [CURRENT_PAYMENT_AMOUNT_NO]
	,L.ORIGINAL_PAYMENT_AMOUNT_NO AS [ORIGINAL_PAYMENT_AMOUNT_NO]
	,CPI_ALL.CalcPmtIncr AS [CALCPMTINCR_NO]
	,CPA_I.PAYMENT_CHANGE_AMOUNT_NO AS [PMTINCR_NO]
	,ISNULL(RC.PmtOptPmtMethodValue, 0) AS [PmtOptPmtMethodValue]
	,CASE 
	WHEN CPQ.PAYMENT_INCREASE_METHOD_CD = 'PR' THEN 
		CASE WHEN ISNULL(CPA_I.REASON_CD, '') = 'R' THEN 
			CASE WHEN FPC.CANCELLATION_DT IS NOT NULL THEN L.ORIGINAL_PAYMENT_AMOUNT_NO + CPA_I.PAYMENT_CHANGE_AMOUNT_NO ELSE L.PAYMENT_AMOUNT_NO END
		ELSE 
			CASE WHEN FPC.CANCELLATION_DT IS NOT NULL THEN L.PAYMENT_AMOUNT_NO ELSE L.PAYMENT_AMOUNT_NO - CPA_I.PAYMENT_CHANGE_AMOUNT_NO END
		END
	ELSE
		CASE WHEN FPC.CANCELLATION_DT IS NOT NULL THEN L.PAYMENT_AMOUNT_NO ELSE L.PAYMENT_AMOUNT_NO - CPA_I.PAYMENT_CHANGE_AMOUNT_NO END
	END AS [CALC_CURRENT_PAYMENT_AMOUNT_NO]
	,ISNULL(L.PAYMENT_AMOUNT_NO,0) - CPI_ALL.PmtDecrAmount AS [CALC_CURRENT_PAYMENT_AMOUNT_REF_NO]
	,CASE
		WHEN DATEDIFF(MONTH,FPC.CANCELLATION_DT,FPC.EXPIRATION_DT) = 12 THEN L.PAYMENT_AMOUNT_NO + CPI_ALL.PmtDecrAmount
		WHEN ISNULL(DATEDIFF(MONTH,FPC.CANCELLATION_DT,FPC.EXPIRATION_DT),0) = 0 THEN 0
		ELSE ((ISNULL(CPA_I.TOTAL_PREMIUM_NO,0) - ABS(ISNULL(CPA_C.TOTAL_PREMIUM_NO,0))) / DATEDIFF(MONTH,FPC.CANCELLATION_DT,FPC.EXPIRATION_DT)) + L.PAYMENT_AMOUNT_NO
	END AS [CALC_CURRENT_PAYMENT_AMOUNT_REF6497_NO]
	,CASE 
		WHEN CPQ.PAYMENT_INCREASE_METHOD_CD = 'NM' THEN
			CASE WHEN ISNULL(RC.PmtOptPmtMethodValue, 0) > 0 AND FPC.CANCELLATION_DT IS NOT NULL THEN L.ORIGINAL_PAYMENT_AMOUNT_NO + CPI_ALL.EarnedPremium ELSE L.PAYMENT_AMOUNT_NO END
		ELSE	 
			CASE WHEN FPC.CANCELLATION_DT IS NOT NULL THEN L.ORIGINAL_PAYMENT_AMOUNT_NO + CPA_I.PAYMENT_CHANGE_AMOUNT_NO ELSE L.PAYMENT_AMOUNT_NO END		
		END AS [CALC_NEW_PAYMENT_AMOUNT_NO]
	,CASE
		WHEN L.PAYMENT_FREQUENCY_CD IN('B','S') THEN ISNULL(CPISQ.IPRM_AMOUNT_NO,0) / 21.66666
		WHEN L.PAYMENT_FREQUENCY_CD = 'W' THEN ISNULL(CPISQ.IPRM_AMOUNT_NO,0) / 43.33333
		ELSE ISNULL(CPISQ.IPRM_AMOUNT_NO,0) / 10
	END AS [CALC_INCREASED_BY_AMOUNT_NO]
	,CASE 
		WHEN CPQ.PAYMENT_INCREASE_METHOD_CD = 'NM' THEN
			CASE WHEN ISNULL(RC.PmtOptPmtMethodValue, 0) > 0 AND FPC.CANCELLATION_DT IS NOT NULL THEN CPI_ALL.CalcPmtIncr ELSE CPI_ALL.CalcPmtIncr END
		ELSE	 
			CASE WHEN CPQ.PAYMENT_INCREASE_METHOD_CD = 'PR' AND ISNULL(CPA_I.REASON_CD, '') = 'R' THEN 0 ELSE CPI_ALL.CalcPmtIncr END
	END AS [CALC_INCREASED_BY_AMOUNT1_NO]
	,ISNULL(RC.PmtOptIncrDelayedBilling,0) AS [LENDER_OPTION_DELAYED_PI_NO]
	,CPQ.PAYMENT_INCREASE_METHOD_CD AS [PAYMENT_INCREASE_METHOD_CD]
	,CASE
		WHEN ISNULL(L.DIVISION_CODE_TX,'0') in ('3','8') OR RCA_PROP.VALUE_TX in ('VEH','BOAT') THEN 
			CASE WHEN CPQ.PAYMENT_INCREASE_METHOD_CD = 'PR' AND ISNULL(CPA_I.REASON_CD, '') = 'R' THEN 'RENEW' ELSE '' END
		ELSE
			CASE WHEN CPQ.PAYMENT_INCREASE_METHOD_CD  = 'PR' AND ISNULL(CPA_I.REASON_CD, '') = 'R' AND (FPC.PIR_DT < FPC.ISSUE_DT) THEN 'RENEW' ELSE '' END 
	END AS [RENEW_TX] 
	,FPC.PIR_DT AS [NEW_PIR_DT]
	,ISNULL(CPA_I.REASON_CD, '') AS [ISS_REASON_TX]
	,CASE WHEN CPQ.PAYMENT_INCREASE_METHOD_CD = 'NM' AND FPC.CANCELLATION_DT IS NOT NULL THEN CPI_ALL.CalcIssTtlCharges - ABS(CPI_ALL.CalcCanTtlCharges) ELSE CPI_ALL.CalcIssTtlCharges END AS [EARNED_PREMIUM_AMOUNT_NO]
	,FPC.MONTHLY_BILLING_IN AS [MONTHLY_BILLING_IN]	
	,L.PAYMENT_FREQUENCY_CD AS [PAYMENT_FREQUENCY_CD]
	,ISNULL(FPC.QUICK_ISSUE_IN,'N') AS [QUICK_ISSUE_IN]	
	,ISNULL(FPC.HOLD_IN,'N') AS [HOLD_IN]
	,0 AS [EARNED_PAYMENT_NO]
	,@TEMPLATE_XML AS [TEMPLATE_DATA_XML]
	,@USE_LOGO_IN AS [USE_LOGO_IN]
	,@ZIP_BARCODE_IN AS [ZIP_BARCODE_IN]
	,@PRINT_LENDER_ADDRESS_IN AS [PRINT_LENDER_ADDRESS_IN]
	,'' AS [Paragraph1]
	,'' AS [Paragraph2]
	,'' AS [Paragraph3]
	,'' AS [Paragraph4]
	,'' AS [Paragraph5]
	,'' AS [Paragraph6]
	,'' AS [Paragraph7]
	,'' AS [SALUTATION_TX]
	,'' AS [CLOSING_TX]
	,@3216_ADDRESS1 AS [3216_ADDRESS1]
	,@3216_ADDRESS2 AS [3216_ADDRESS2]
	,@3216_ADDRESS3 AS [3216_ADDRESS3]
	,@3216_ADDRESS4 AS [3216_ADDRESS4]
	,@3216_ADDRESS5 AS [3216_ADDRESS5]
	,@3216_ADDRESS6 AS [3216_ADDRESS6]
	,@6487_ADDRESS AS [6487_ADDRESS]
	,CASE WHEN @ReportConfig = 'PI1LP-IN01-6497ESP' THEN
		cast(DATEPART(day, DateAdd(DAY, 6, GETDATE()))AS nvarchar(10)) + ' de ' +
			case DATEPART(month, GETDATE())
				when 1 then 'enero'
				when 2 then 'febrero'
				when 3 then 'marzo'
				when 4 then 'abril'
				when 5 then 'mayo'
				when 6 then 'junio'
				when 7 then 'julio'
				when 8 then 'agosto'
				when 9 then 'septiembre'
				when 10 then 'octubre'
				when 11 then 'noviembre'
				when 12 then 'diciembre'
				end
			+ ' del ' + cast(DATEPART(year, GETDATE()) as nvarchar(10)) 
		WHEN @ReportConfig = 'PI1LP-IN01-6497' THEN
			CONVERT(nvarchar(10),DateAdd(DAY, 6, GETDATE()),101)
		WHEN @ReportConfig in ('PI1LP-IN01-1245','PI1LP-IN01-1851') THEN
			CONVERT(nvarchar(10),DateAdd(DAY, 4, GETDATE()),101)
		WHEN @ReportConfig = 'PI1LP-IN01-BR#PIR-4170' THEN
			CONVERT(nvarchar(10),DateAdd(DAY, 8, GETDATE()),101)
	 END 
	 AS [PRINT_DATE_ADJ]
	,@SortByCode AS [REPORT_SORTBY_TX]
	,@GroupByCode as [REPORT_GROUPBY_TX]
	,REPORT_FOOTER_TX = ''


FROM #tmpFPCIDs tmp
JOIN FORCE_PLACED_CERTIFICATE FPC on tmp.ID = FPC.ID
JOIN FORCE_PLACED_CERT_REQUIRED_COVERAGE_RELATE FPCRCR ON FPCRCR.FPC_ID = FPC.ID AND FPCRCR.PURGE_DT IS NULL
JOIN CARRIER CR ON FPC.CARRIER_ID = CR.ID AND CR.PURGE_DT IS NULL	
JOIN REQUIRED_COVERAGE RC ON FPCRCR.REQUIRED_COVERAGE_ID = RC.ID AND RC.PURGE_DT IS NULL					 
JOIN LOAN L ON L.ID = FPC.LOAN_ID AND L.PURGE_DT IS NULL 
JOIN LENDER LND ON LND.ID = L.LENDER_ID AND LND.PURGE_DT IS NULL
JOIN OWNER_LOAN_RELATE OLR ON OLR.LOAN_ID = L.ID AND OLR.PRIMARY_IN = 'Y' AND OLR.PURGE_DT IS NULL
JOIN [OWNER] O ON O.ID = OLR.OWNER_ID AND O.PURGE_DT IS NULL
JOIN PROPERTY P ON RC.PROPERTY_ID = P.ID AND P.PURGE_DT IS NULL											
JOIN COLLATERAL C ON C.LOAN_ID = L.ID AND C.PROPERTY_ID = P.ID AND C.PURGE_DT IS NULL
LEFT JOIN LENDER_ORGANIZATION LO ON L.BRANCH_CODE_TX = LO.CODE_TX AND L.LENDER_ID = LO.LENDER_ID AND LO.TYPE_CD = 'BRCH' AND LO.PURGE_DT IS NULL
LEFT JOIN [ADDRESS] LOPADDR ON LO.PHYSICAL_ADDRESS_ID = LOPADDR.ID AND LOPADDR.PURGE_DT IS NULL
LEFT JOIN [ADDRESS] LOMADDR ON LO.MAILING_ADDRESS_ID = LOMADDR.ID AND LOMADDR.PURGE_DT IS NULL
LEFT JOIN OWNER_ADDRESS AP ON AP.ID = P.ADDRESS_ID AND AP.PURGE_DT IS NULL
LEFT JOIN [OWNER_ADDRESS] AO ON AO.ID = O.ADDRESS_ID AND AO.PURGE_DT IS NULL
LEFT JOIN REF_CODE RC_COVERAGETYPE ON RC_COVERAGETYPE.DOMAIN_CD = 'Coverage' and RC_COVERAGETYPE.CODE_CD = RC.TYPE_CD 
LEFT JOIN REF_CODE RC_DIVISION on RC_DIVISION.DOMAIN_CD = 'ContractType' and RC_DIVISION.CODE_CD = L.DIVISION_CODE_TX 
LEFT JOIN COLLATERAL_CODE CC ON CC.ID = C.COLLATERAL_CODE_ID AND CC.PURGE_DT IS NULL
left Join REF_CODE RC_SC on RC_SC.DOMAIN_CD = 'SecondaryClassification' AND CC.SECONDARY_CLASS_CD = RC_SC.CODE_CD
left Join REF_CODE_ATTRIBUTE RCA_PROP on RC_SC.DOMAIN_CD = RCA_PROP.DOMAIN_CD and RC_SC.CODE_CD = RCA_PROP.REF_CD and RCA_PROP.ATTRIBUTE_CD = 'PropertyType'
LEFT JOIN SERVICE_CENTER_FUNCTION_LENDER_RELATE SCR ON SCR.LENDER_ID = LND.ID
LEFT JOIN SERVICE_CENTER_FUNCTION SCF ON SCF.ID = SCR.SERVICE_CENTER_FUNCTION_ID
LEFT JOIN SERVICE_CENTER SC ON SC.ID = SCF.SERVICE_CENTER_ID
LEFT JOIN CPI_QUOTE CPQ ON  CPQ.ID = FPC.CPI_QUOTE_ID AND CPQ.PURGE_DT IS NULL
LEFT JOIN CPI_ACTIVITY CPA_I on CPA_I.CPI_QUOTE_ID = CPQ.ID AND CPA_I.TYPE_CD = 'I'	AND CPA_I.PURGE_DT IS NULL AND CPA_I.CREATE_DT <= @EndDateSpecial

OUTER APPLY 
(SELECT SUM(TOTAL_PREMIUM_NO) AS TOTAL_PREMIUM_NO, MAX(REASON_CD) AS REASON_CD, MAX(REPORTING_CANCEL_DT) AS REPORTING_CANCEL_DT 
FROM CPI_ACTIVITY C  
WHERE C.CPI_QUOTE_ID = CPQ.ID AND C.TYPE_CD IN ('C', 'R', 'MT') AND C.PURGE_DT IS NULL AND C.CREATE_DT <= @EndDateSpecial
) CPA_C

CROSS APPLY
(
SELECT 
-- Note that some of the SUMs use EARNED_PAYMENT_AMOUNT_NO and others use NEW_PAYMENT_AMOUNT_NO or TOTAL_PREMIUM_NO
-- 04292013 Anu Only use row for EARNED_PAYMENT_AMOUNT (EarnedPremium) for the max ProcessDate
SUM(CASE WHEN CPI.TYPE_CD  IN('C','MT') AND CPI.PROCESS_DT = CPI_MX.PROCESS_DT THEN CPI.EARNED_PAYMENT_AMOUNT_NO ELSE 0 END) AS EarnedPremium,
-- (CalcPmtDecrease) C & MT
SUM(CASE WHEN CPI.TYPE_CD  IN('C','MT')  AND CPI.PROCESS_DT = CPI_MX.PROCESS_DT THEN CPI.PAYMENT_CHANGE_AMOUNT_NO ELSE 0 END) AS CalcPmtIncr,
--For Payment decrease ï¿½ we can get the sum of NewPaymentAmount from CPIActivity ï¿½ for Types ï¿½ C, MT, R
SUM(CASE WHEN CPI.TYPE_CD  IN('C','MT','R') THEN CPI.PAYMENT_CHANGE_AMOUNT_NO ELSE 0 END) AS PmtDecrAmount,
SUM(CASE WHEN CPI.TYPE_CD  IN('I') THEN CPI.TOTAL_PREMIUM_NO ELSE 0 END) AS CalcIssTtlCharges,
SUM(CASE WHEN CPI.TYPE_CD  IN('C','MT','R') THEN CPI.TOTAL_PREMIUM_NO ELSE 0 END) AS CalcCanTtlCharges

FROM CPI_ACTIVITY CPI
CROSS APPLY 
 (
	SELECT MAX(CPI1.PROCESS_DT) AS PROCESS_DT FROM CPI_ACTIVITY CPI1 
	WHERE CPI1.CPI_QUOTE_ID = CPQ.ID AND CPI1.TYPE_CD  IN('C','MT') AND CPI1.PURGE_DT IS NULL AND CPI1.CREATE_DT <= @EndDateSpecial
 ) CPI_MX
 
WHERE CPI.CPI_QUOTE_ID = CPQ.ID AND CPI.PURGE_DT IS NULL AND CPI.CREATE_DT <= @EndDateSpecial
) CPI_ALL

--ADDED Anu 04/23/2013 to get IPRM_AMOUNT_NO for Increased By Calculation
OUTER APPLY (
SELECT  
SUM(CASE WHEN CD_SQ.TYPE_CD = 'PRM' AND CPA_SQ.TYPE_CD = 'I' THEN CD_SQ.AMOUNT_NO ELSE 0 END) AS IPRM_AMOUNT_NO,
SUM(CASE WHEN CD_SQ.TYPE_CD = 'FEE' AND CPA_SQ.TYPE_CD = 'I' THEN CD_SQ.AMOUNT_NO ELSE 0 END) AS IFEE_AMOUNT_NO,
SUM(CASE WHEN CD_SQ.TYPE_CD = 'OTH' AND CPA_SQ.TYPE_CD = 'I' THEN CD_SQ.AMOUNT_NO ELSE 0 END) AS IOTH_AMOUNT_NO,
SUM(CASE WHEN CD_SQ.TYPE_CD = 'TAX1' AND CPA_SQ.TYPE_CD = 'I' THEN CD_SQ.AMOUNT_NO ELSE 0 END) AS ITAX1_AMOUNT_NO,
SUM(CASE WHEN CD_SQ.TYPE_CD = 'TAX2' AND CPA_SQ.TYPE_CD = 'I' THEN CD_SQ.AMOUNT_NO ELSE 0 END) AS ITAX2_AMOUNT_NO,
SUM(CASE WHEN CD_SQ.TYPE_CD = 'PRM' AND CPA_SQ.TYPE_CD = 'C' THEN CD_SQ.AMOUNT_NO ELSE 0 END) AS CPRM_AMOUNT_NO,
SUM(CASE WHEN CD_SQ.TYPE_CD = 'FEE' AND CPA_SQ.TYPE_CD = 'C' THEN CD_SQ.AMOUNT_NO ELSE 0 END) AS CFEE_AMOUNT_NO,
SUM(CASE WHEN CD_SQ.TYPE_CD = 'OTH' AND CPA_SQ.TYPE_CD = 'C' THEN CD_SQ.AMOUNT_NO ELSE 0 END) AS COTH_AMOUNT_NO, 
SUM(CASE WHEN CD_SQ.TYPE_CD = 'TAX1' AND CPA_SQ.TYPE_CD = 'C' THEN CD_SQ.AMOUNT_NO ELSE 0 END) AS CTAX1_AMOUNT_NO, 
SUM(CASE WHEN CD_SQ.TYPE_CD = 'TAX2' AND CPA_SQ.TYPE_CD = 'C' THEN CD_SQ.AMOUNT_NO ELSE 0 END) AS CTAX2_AMOUNT_NO
FROM CPI_ACTIVITY CPA_SQ 
JOIN CERTIFICATE_DETAIL CD_SQ ON CD_SQ.CPI_ACTIVITY_ID = CPA_SQ.ID AND CPA_SQ.CPI_QUOTE_ID = CPQ.ID AND CD_SQ.PURGE_DT IS NULL
WHERE CPA_SQ.CPI_QUOTE_ID = CPQ.ID AND CPA_SQ.PURGE_DT IS NULL AND CPA_SQ.CREATE_DT <= @EndDateSpecial
) CPISQ

OUTER APPLY(SELECT SUM(AMOUNT_NO) as NET_AMOUNT FROM FINANCIAL_TXN FTX 
WHERE FTX.FPC_ID = FPC.ID AND FTX.PURGE_DT IS NULL
and TXN_DT <= @EndDateSpecial and TXN_TYPE_CD != 'P'
) FTX
CROSS APPLY dbo.fn_FilterCollateralByDivisionCd(C.ID, @Division) fn_FCBD

WHERE 1=1
AND L.RECORD_TYPE_CD = 'G' AND RC.RECORD_TYPE_CD = 'G' AND P.RECORD_TYPE_CD = 'G'
--AND L.EXTRACT_UNMATCH_COUNT_NO = 0 and C.EXTRACT_UNMATCH_COUNT_NO = 0
AND FPC.PURGE_DT IS NULL
AND (LND.ID = @LenderID OR @LenderID IS NULL)
AND (L.BRANCH_CODE_TX IN (SELECT STRVALUE FROM @BranchTable) or @Branch = '1' or @Branch = '' or @Branch is NULL)
AND fn_FCBD.loanType IS NOT NULL
AND (RC.TYPE_CD = @Coverage or @Coverage = '1' or @Coverage is NULL)
AND (@FIL_DATERANGE_FILE = 'F' OR (@FIL_DATERANGE_FILE = 'T' AND (FPC.ID IN (SELECT ID FROM #tmpFPCIDs))))
AND (@FIL_DATERANGE = 'F' OR (@FIL_DATERANGE = 'T' AND FPC.ID in (select ID from #tmpFPCIDs)))
AND (@FIL_FUNDDT_RANGE = 'F' OR (@FIL_FUNDDT_RANGE = 'T' AND FPC.ID in (select ID from #tmpFPCIDs)))
AND (@FIL_DATERANGE_PIR = 'F' OR (@FIL_DATERANGE_PIR = 'T' AND FPC.ID in (select ID from #tmpFPCIDs)))
AND (@FIL_DATERANGE_SPECIAL = 'F' OR (@FIL_DATERANGE_SPECIAL = 'T' AND FPC.ID in (select ID from #tmpFPCIDs) 
	AND ISNULL(FPC.HOLD_IN,'N') = 'N' AND FPC.MONTHLY_BILLING_IN = 'N' 
	AND ((FTX.NET_AMOUNT IS NOT NULL AND FTX.NET_AMOUNT > 0) OR (FTX.NET_AMOUNT IS NULL AND ISNULL(CPA_I.TOTAL_PREMIUM_NO,0) - ABS(ISNULL(CPA_C.TOTAL_PREMIUM_NO,0)) > 0))
	))


If isnull(@FilterBySQL,'') <> '' 
Begin
  Select * into #t1 from #tmptable 
  truncate table #tmptable

  Set @sqlstring = N'Insert into #tmpTable
                     Select * from dbo.#t1 where ' + @FilterBySQL
  --print @sqlstring
  EXECUTE sp_executesql @sqlstring
End  


IF 1=1
BEGIN
	DECLARE
	@Lender_Name nvarchar(max), 
	@Lender_Code nvarchar(max), 
	@Lender_Phone nvarchar(max), 
	@Lender_Phone_2 nvarchar(max), 
	@Lender_Ext_2 nvarchar(max), 
	@Center_Phone nvarchar(max), 
	@Branch_Phone nvarchar(max), 
	@Branch_Phone_2 nvarchar(max), 
	@Branch_Ext_2 nvarchar(max), 
	@OwnerName nvarchar(max), 
	@Collateral_Year nvarchar(max), 
	@Collateral_MAKE nvarchar(max), 
	@Collateral_MODEL nvarchar(max), 
	@Collateral_VIN nvarchar(max), 
	@Mortgage_Property_Address nvarchar(max), 
	@Policy_Effective_Date datetime2, 
	@Policy_Cancellation_Date datetime2, 
	@Policy_Expiration_Date datetime2, 
	@Billing_Date datetime2, 
	@Reporting_Cancel_Date datetime2,
	@New_PIR_Date datetime2, 
	@Billed_Net_Total [decimal] (10,2), 
	@Current_Payment_Amount [decimal] (10,2), 
	@Current_Increase_Amount [decimal] (10,2), 
	@Issued_Total_Charges [decimal](18, 2), 
	@Unearned_Prem_Amt [decimal] (10,2)
	
	DECLARE @WK AS NVARCHAR(max)=NULL
	DECLARE @WKCOL AS NVARCHAR(max)=NULL
	DECLARE @CODE_CD AS NVARCHAR(max)
	DECLARE @COLUMN_NAME_TX AS NVARCHAR(max);

	DECLARE myUpdateCursor CURSOR FOR
	SELECT 
	[LOAN_LENDERNAME_TX], 
	[LOAN_LENDERCODE_TX],
	[LENDER_PHONE_TX],
	[LENDER_PHONE2_TX],
	[LENDER_PHONE2_EXT_TX],
	[CENTER_PHONE_TX],
	[BRANCH_PHONE_TX],
	[BRANCH_PHONE2_TX],
	[BRANCH_PHONE2_EXT_TX],
	CASE 
		WHEN ISNULL([OWNER_MIDDLE_INITIAL_TX],'') = '' 
		THEN [OWNER_FIRSTNAME_TX] + ' ' + [OWNER_LASTNAME_TX] 
		ELSE [OWNER_FIRSTNAME_TX] + ' ' + [OWNER_MIDDLE_INITIAL_TX] + '. ' + [OWNER_LASTNAME_TX] 
	END,
	[COLLATERAL_YEAR_TX], 
	[COLLATERAL_MAKE_TX], 
	[COLLATERAL_MODEL_TX], 
	[COLLATERAL_VIN_TX], 
	[PROPERTY_DESCRIPTION],
	[INS_EFFECTIVE_DT],
	[INS_CANCEL_DT],
	[INS_EXPIRE_DT],
	[INS_EFFECTIVE_DT],
	[REPORTING_CANCEL_DT],
	[NEW_PIR_DT],
	[EARNED_PREMIUM_AMOUNT_NO],  	    
	[NEW_PAYMENT_AMOUNT_NO], 
	[NEW_INCREASE_AMOUNT_NO], 
	[CPI_ISSUEDPREMIUM_AMOUNT_NO], 	    
	[CPI_CANCELLEDPREMIUM_AMOUNT_NO],
	[TEMPLATE_DATA_XML]

	FROM #tmptable
	FOR UPDATE OF 
	[TEMPLATE_DATA_XML], 
	[Paragraph1], 
	[Paragraph2], 
	[Paragraph3], 
	[Paragraph4], 
	[Paragraph5], 
	[Paragraph6], 
	[Paragraph7],
	[SALUTATION_TX],
	[CLOSING_TX] ;

	OPEN myUpdateCursor

	FETCH NEXT FROM myUpdateCursor INTO 
	@Lender_Name, 
	@Lender_Code,
	@Lender_Phone,
	@Lender_Phone_2,
	@Lender_Ext_2,
	@Center_Phone,
	@Branch_Phone,
	@Branch_Phone_2,
	@Branch_Ext_2,
	@OwnerName,
	@Collateral_Year, 
	@Collateral_MAKE, 
	@Collateral_MODEL, 
	@Collateral_VIN, 
	@Mortgage_Property_Address,
	@Policy_Effective_Date,
	@Policy_Cancellation_Date,
	@Policy_Expiration_Date,
	@Billing_Date,
	@Reporting_Cancel_Date,
	@New_PIR_Date,
	@Billed_Net_Total,  	    
	@Current_Payment_Amount, 
	@Current_Increase_Amount, 
	@Issued_Total_Charges, 
	@Unearned_Prem_Amt,   
	@WKXML 

	WHILE @@FETCH_STATUS = 0
	BEGIN
		SELECT @Lender_Phone = CASE WHEN LEN(@Lender_Phone) = 10 THEN '(' + Substring(@Lender_Phone,1,3) + ') ' + Substring(@Lender_Phone,4,3) + '-' + Substring(@Lender_Phone,7,4) ELSE @Lender_Phone END 
		SELECT @Lender_Phone_2 = CASE WHEN LEN(@Lender_Phone_2) = 10 THEN '(' + Substring(@Lender_Phone_2,1,3) + ') ' + Substring(@Lender_Phone_2,4,3) + '-' + Substring(@Lender_Phone_2,7,4) ELSE @Lender_Phone_2 END 
		SELECT @Center_Phone = CASE WHEN LEN(@Center_Phone) = 10 THEN '(' + Substring(@Center_Phone,1,3) + ') ' + Substring(@Center_Phone,4,3) + '-' + Substring(@Center_Phone,7,4) ELSE @Center_Phone END 
		SELECT @Branch_Phone = CASE WHEN LEN(@Branch_Phone) = 10 THEN '(' + Substring(@Branch_Phone,1,3) + ') ' + Substring(@Branch_Phone,4,3) + '-' + Substring(@Branch_Phone,7,4) ELSE @Branch_Phone END
		SELECT @Branch_Phone_2 = CASE WHEN LEN(@Branch_Phone_2) = 10 THEN '(' + Substring(@Branch_Phone_2,1,3) + ') ' + Substring(@Branch_Phone_2,4,3) + '-' + Substring(@Branch_Phone_2,7,4) ELSE @Branch_Phone_2 END
		
		
		SELECT @WK = CAST(@WKXML AS NVARCHAR(MAX))
		SELECT @WK = REPLACE(@WK,'{{Lender_Name}}',ISNULL(@Lender_Name,''))
		SELECT @WK = REPLACE(@WK,'{{Lender_Code}}',ISNULL(@Lender_Code,''))
		SELECT @WK = REPLACE(@WK,'{{Lender_Phone}}',ISNULL(@Lender_Phone,''))
		SELECT @WK = REPLACE(@WK,'{{Lender_Phone_2}}',ISNULL(@Lender_Phone_2,''))
		SELECT @WK = REPLACE(@WK,'{{Lender_Ext_2}}',ISNULL(@Lender_Ext_2,''))
		SELECT @WK = REPLACE(@WK,'{{Center_Phone}}',ISNULL(@Center_Phone,''))
		SELECT @WK = REPLACE(@WK,'{{Branch_Phone}}',ISNULL(@Branch_Phone,''))
		SELECT @WK = REPLACE(@WK,'{{Branch_Phone_2}}',ISNULL(@Branch_Phone_2,''))
		SELECT @WK = REPLACE(@WK,'{{Branch_Ext_2}}',ISNULL(@Branch_Ext_2,''))
		SELECT @WK = REPLACE(@WK,'{{Owner_Name}}',ISNULL(@OwnerName,''))
		SELECT @WK = REPLACE(@WK,'{{Collateral_Year}}',ISNULL(@Collateral_Year,''))
		SELECT @WK = REPLACE(@WK,'{{Collateral_MAKE}}',ISNULL(@Collateral_MAKE,''))
		SELECT @WK = REPLACE(@WK,'{{Collateral_MODEL}}',ISNULL(@Collateral_MODEL,''))
		SELECT @WK = REPLACE(@WK,'{{Collateral_VIN}}',ISNULL(@Collateral_VIN,''))
		SELECT @WK = REPLACE(@WK,'{{Mortgage_Property_Address}}',ISNULL(@Mortgage_Property_Address,''))
		SELECT @WK = REPLACE(@WK,'{{Policy_Effective_Date}}',(SELECT COALESCE(CONVERT(nvarchar(10),@Policy_Effective_Date,101),'')))
		SELECT @WK = REPLACE(@WK,'{{Policy_Cancellation_Date}}',(SELECT COALESCE(CONVERT(nvarchar(10),@Policy_Cancellation_Date,101),'')))
		SELECT @WK = REPLACE(@WK,'{{Policy_Expiration_Date}}',(SELECT COALESCE(CONVERT(nvarchar(10),@Policy_Expiration_Date,101),'')))
		SELECT @WK = REPLACE(@WK,'{{Billing_Date}}',(SELECT COALESCE(CONVERT(nvarchar(10),@Billing_Date,101),''))) 
		SELECT @WK = REPLACE(@WK,'{{Reporting_Cancel_Date}}',(SELECT COALESCE(CONVERT(nvarchar(10),@Reporting_Cancel_Date,101),''))) 
		SELECT @WK = REPLACE(@WK,'{{New_PIR_Date}}',(SELECT COALESCE(CONVERT(nvarchar(10),@New_PIR_Date,101),'')))
		SELECT @WK = REPLACE(@WK,'{{Billed_Net_Total}}',(SELECT COALESCE(CONVERT(NVARCHAR(20),CONVERT(MONEY,@Billed_Net_Total),1),'')))
		SELECT @WK = REPLACE(@WK,'{{Current_Payment_Amount}}',(SELECT COALESCE(CONVERT(NVARCHAR(20),CONVERT(MONEY,@Current_Payment_Amount),1),'')))
		SELECT @WK = REPLACE(@WK,'{{Current_Increase_Amount}}',(SELECT COALESCE(CONVERT(NVARCHAR(20),CONVERT(MONEY,@Current_Increase_Amount),1),'')))
		SELECT @WK = REPLACE(@WK,'{{Issued_Total_Charges}}',(SELECT COALESCE(CONVERT(NVARCHAR(20),CONVERT(MONEY,@Issued_Total_Charges),1),'')))
		SELECT @WK = REPLACE(@WK,'{{Unearned_Prem_Amt}}',(SELECT COALESCE(CONVERT(NVARCHAR(20),CONVERT(MONEY,@Unearned_Prem_Amt),1),'')))

		SELECT @WK = REPLACE(@WK,'&','&amp;')
		SELECT @WK = REPLACE(@WK,'<b>','&lt;b&gt;')
		SELECT @WK = REPLACE(@WK,'</b>','&lt;/b&gt;')
		SELECT @WK = REPLACE(@WK,'<i>','&lt;i&gt;')
		SELECT @WK = REPLACE(@WK,'</i>','&lt;/u&gt;')
		SELECT @WK = REPLACE(@WK,'<u>','&lt;b&gt;')
		SELECT @WK = REPLACE(@WK,'</u>','&lt;/b&gt;')
		SELECT @WK = REPLACE(@WK,'"','&quot;')
		SELECT @WK = REPLACE(@WK,'''','&apos;')
		
		SELECT @WKXML = CAST(@WK AS XML)
		SELECT @P1 = @WKXML.value('(/Notice)[1]/Paragraph1[1]', 'nvarchar(max)')
		SELECT @P2 = @WKXML.value('(/Notice)[1]/Paragraph2[1]', 'nvarchar(max)')
		SELECT @P3 = @WKXML.value('(/Notice)[1]/Paragraph3[1]', 'nvarchar(max)')
		SELECT @P4 = @WKXML.value('(/Notice)[1]/Paragraph4[1]', 'nvarchar(max)')
		SELECT @P5 = @WKXML.value('(/Notice)[1]/Paragraph5[1]', 'nvarchar(max)')
		SELECT @P6 = @WKXML.value('(/Notice)[1]/Paragraph6[1]', 'nvarchar(max)')
		SELECT @P7 = @WKXML.value('(/Notice)[1]/Paragraph7[1]', 'nvarchar(max)')
		SELECT @PSAL = @WKXML.value('(/Notice)[1]/Salutation[1]', 'nvarchar(max)')
		SELECT @PCLOSE = @WKXML.value('(/Notice)[1]/Closing[1]', 'nvarchar(max)')
		SELECT @P1 = REPLACE(@P1,'&lt;font ','<font '); SELECT @P1 = REPLACE(@P1,'"&gt;','">'); SELECT @P1 = REPLACE(@P1,'&lt;/font&gt;','</font>'); SELECT @P1 = REPLACE(@P1,'&lt;br&gt;','<br>'); SELECT @P1 = REPLACE(@P1,'&lt;li&gt;','<li>'); SELECT @P1 = REPLACE(@P1,'&lt;/li&gt;','</li>'); SELECT @P1 = REPLACE(@P1,'&lt;ul&gt;','<ul>'); SELECT @P1 = REPLACE(@P1,'&lt;/ul&gt;','</ul>')
		SELECT @P2 = REPLACE(@P2,'&lt;font ','<font '); SELECT @P2 = REPLACE(@P2,'"&gt;','">'); SELECT @P2 = REPLACE(@P2,'&lt;/font&gt;','</font>'); SELECT @P2 = REPLACE(@P2,'&lt;br&gt;','<br>'); SELECT @P2 = REPLACE(@P2,'&lt;li&gt;','<li>'); SELECT @P2 = REPLACE(@P2,'&lt;/li&gt;','</li>'); SELECT @P2 = REPLACE(@P2,'&lt;ul&gt;','<ul>'); SELECT @P2 = REPLACE(@P2,'&lt;/ul&gt;','</ul>')
		SELECT @P3 = REPLACE(@P3,'&lt;font ','<font '); SELECT @P3 = REPLACE(@P3,'"&gt;','">'); SELECT @P3 = REPLACE(@P3,'&lt;/font&gt;','</font>'); SELECT @P3 = REPLACE(@P3,'&lt;br&gt;','<br>'); SELECT @P3 = REPLACE(@P3,'&lt;li&gt;','<li>'); SELECT @P3 = REPLACE(@P3,'&lt;/li&gt;','</li>'); SELECT @P3 = REPLACE(@P3,'&lt;ul&gt;','<ul>'); SELECT @P3 = REPLACE(@P3,'&lt;/ul&gt;','</ul>')
		SELECT @P4 = REPLACE(@P4,'&lt;font ','<font '); SELECT @P4 = REPLACE(@P4,'"&gt;','">'); SELECT @P4 = REPLACE(@P4,'&lt;/font&gt;','</font>'); SELECT @P4 = REPLACE(@P4,'&lt;br&gt;','<br>'); SELECT @P4 = REPLACE(@P4,'&lt;li&gt;','<li>'); SELECT @P4 = REPLACE(@P4,'&lt;/li&gt;','</li>'); SELECT @P4 = REPLACE(@P4,'&lt;ul&gt;','<ul>'); SELECT @P4 = REPLACE(@P4,'&lt;/ul&gt;','</ul>')
		SELECT @P5 = REPLACE(@P5,'&lt;font ','<font '); SELECT @P5 = REPLACE(@P5,'"&gt;','">'); SELECT @P5 = REPLACE(@P5,'&lt;/font&gt;','</font>'); SELECT @P5 = REPLACE(@P5,'&lt;br&gt;','<br>'); SELECT @P5 = REPLACE(@P5,'&lt;li&gt;','<li>'); SELECT @P5 = REPLACE(@P5,'&lt;/li&gt;','</li>'); SELECT @P5 = REPLACE(@P5,'&lt;ul&gt;','<ul>'); SELECT @P5 = REPLACE(@P5,'&lt;/ul&gt;','</ul>')
		SELECT @P6 = REPLACE(@P6,'&lt;font ','<font '); SELECT @P6 = REPLACE(@P6,'"&gt;','">'); SELECT @P6 = REPLACE(@P6,'&lt;/font&gt;','</font>'); SELECT @P6 = REPLACE(@P6,'&lt;br&gt;','<br>'); SELECT @P6 = REPLACE(@P6,'&lt;li&gt;','<li>'); SELECT @P6 = REPLACE(@P6,'&lt;/li&gt;','</li>'); SELECT @P6 = REPLACE(@P6,'&lt;ul&gt;','<ul>'); SELECT @P6 = REPLACE(@P6,'&lt;/ul&gt;','</ul>')
		SELECT @P7 = REPLACE(@P7,'&lt;font ','<font '); SELECT @P7 = REPLACE(@P7,'"&gt;','">'); SELECT @P7 = REPLACE(@P7,'&lt;/font&gt;','</font>'); SELECT @P7 = REPLACE(@P7,'&lt;br&gt;','<br>'); SELECT @P7 = REPLACE(@P7,'&lt;li&gt;','<li>'); SELECT @P7 = REPLACE(@P7,'&lt;/li&gt;','</li>'); SELECT @P7 = REPLACE(@P7,'&lt;ul&gt;','<ul>'); SELECT @P7 = REPLACE(@P7,'&lt;/ul&gt;','</ul>')
		SELECT @PSAL = REPLACE(@PSAL,'&lt;font ','<font '); SELECT @PSAL = REPLACE(@PSAL,'"&gt;','">'); SELECT @PSAL = REPLACE(@PSAL,'&lt;/font&gt;','</font>'); SELECT @PSAL = REPLACE(@PSAL,'&lt;br&gt;','<br>')	
		SELECT @PCLOSE = REPLACE(@PCLOSE,'&lt;font ','<font '); SELECT @PCLOSE = REPLACE(@PCLOSE,'"&gt;','">'); SELECT @PCLOSE = REPLACE(@PCLOSE,'&lt;/font&gt;','</font>'); SELECT @PCLOSE = REPLACE(@PCLOSE,'&lt;br&gt;','<br>')
		
		UPDATE #tmptable 
		SET [TEMPLATE_DATA_XML] = @WK, 
		[Paragraph1] = @P1,  
		[Paragraph2] = @P2,
		[Paragraph3] = @P3,
		[Paragraph4] = @P4, 
		[Paragraph5] = @P5, 
		[Paragraph6] = @P6, 
		[Paragraph7] = @P7,
		[SALUTATION_TX] = @PSAL, 
		[CLOSING_TX] = @PCLOSE
		WHERE current of myUpdateCursor

		FETCH NEXT FROM myUpdateCursor INTO 
		@Lender_Name, 
		@Lender_Code,
		@Lender_Phone,
		@Lender_Phone_2,
		@Lender_Ext_2,
		@Center_Phone,
		@Branch_Phone,
		@Branch_Phone_2,
		@Branch_Ext_2,
		@OwnerName,
		@Collateral_Year, 
		@Collateral_MAKE, 
		@Collateral_MODEL, 
		@Collateral_VIN, 
		@Mortgage_Property_Address,
		@Policy_Effective_Date,
		@Policy_Cancellation_Date,
		@Policy_Expiration_Date,
		@Billing_Date,
		@Reporting_Cancel_Date,
		@New_PIR_Date,
		@Billed_Net_Total,  	    
		@Current_Payment_Amount, 
		@Current_Increase_Amount, 
		@Issued_Total_Charges, 
		@Unearned_Prem_Amt,   
		@WKXML 		
	END	

	CLOSE myUpdateCursor;
	DEALLOCATE myUpdateCursor;
END

--Set @sqlstring = N'Update #tmpTable Set [REPORT_GROUPBY_TX] = ' + @GroupBySQL
--EXECUTE sp_executesql @sqlstring

Set @sqlstring = N'Update #tmpTable Set [REPORT_SORTBY_TX] = ' + @SortBySQL
EXECUTE sp_executesql @sqlstring

If isnull(@HeaderTx,'') <> '' 
Begin
	Set @sqlstring = N'Update #tmpTable Set [REPORT_HEADER_TX] = ' + @HeaderTx
	EXECUTE sp_executesql @sqlstring
End

If isnull(@FooterTx,'') <> '' 
Begin
	Set @sqlstring = N'Update #tmpTable Set [REPORT_FOOTER_TX] = ' + @FooterTx
	EXECUTE sp_executesql @sqlstring
End


IF @Report_History_ID IS NOT NULL
BEGIN
  SELECT @RecordCount = COUNT(*) from #tmptable
  
  Update [UNITRAC-REPORTS].[UNITRAC].DBO.REPORT_HISTORY_NOXML
  Set RECORD_COUNT_NO = @RecordCount
  where ID = @Report_History_ID
  
END
SELECT * FROM #tmptable
END


GO

