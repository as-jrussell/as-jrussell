USE [UniTrac]
GO

/****** Object:  UserDefinedFunction [dbo].[fnGetPropertyChanges]    Script Date: 8/18/2016 11:57:38 AM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE FUNCTION [dbo].[fnGetPropertyChanges] (@PARENT_NAME_TX NVARCHAR(50) = NULL,
@PARENT_ID BIGINT = NULL,
@ENTITY_NAME_TX NVARCHAR(50) = NULL,
@ENTITY_ID BIGINT = NULL,
@USER_TX NVARCHAR(15) = NULL,
@FROM_DT DATETIME = NULL,
@TO_DT DATETIME = NULL,
@TRANS_STATUS_CD NVARCHAR(4) = NULL,
@FORMATTED_IN CHAR(1) = NULL)
RETURNS @Change TABLE (
	[ID] [BIGINT] NOT NULL
,	[PARENT_NAME_TX] [VARCHAR](100) NULL
,	[PARENT_ID] [BIGINT] NULL
,	[ENTITY_NAME_TX] [VARCHAR](100) NULL
,	[ENTITY_ID] [BIGINT] NULL
,	[NOTE_TX] [NVARCHAR](100) NULL
,	[DESCRIPTION_TX] [NVARCHAR](MAX) NULL
,	[TICKET_TX] [NVARCHAR](20) NULL
,	[USER_TX] [NVARCHAR](15) NULL
,	[ATTACHMENT_IN] [CHAR](1) NULL
,	[DETAILS_IN] [CHAR](1) NOT NULL
,	[FORMATTED_IN] [CHAR](1) NOT NULL
,	[CREATE_DT] [DATETIME] NULL
,	[TRANS_STATUS_CD] [VARCHAR](4) NULL
,	[TRANS_STATUS_DT] [DATETIME] NULL
,	[LOCK_ID] [TINYINT] NOT NULL
,	[UTL_IN] CHAR(1)
)
AS
BEGIN

	DECLARE @Id TABLE (
		ID BIGINT
	);

	IF @PARENT_ID IS NOT NULL
		AND @PARENT_ID > 0
		AND @ENTITY_NAME_TX IS NOT NULL
		AND @ENTITY_NAME_TX <> ''
		INSERT INTO @Id
			SELECT
				ID
			FROM PROPERTY_CHANGE
			WHERE PARENT_ID = @PARENT_ID
				AND ENTITY_NAME_TX = @ENTITY_NAME_TX
				AND PARENT_NAME_TX = @PARENT_NAME_TX
				AND (@FROM_DT IS NULL
					OR CREATE_DT >= @FROM_DT)
				AND (@TO_DT IS NULL
					OR CREATE_DT < @TO_DT)
	ELSE
	IF @ENTITY_ID IS NOT NULL
		AND @ENTITY_ID > 0
		INSERT INTO @Id
			SELECT
				ID
			FROM PROPERTY_CHANGE pc
			WHERE ENTITY_ID = @ENTITY_ID
				AND ENTITY_NAME_TX = @ENTITY_NAME_TX
				AND (@FROM_DT IS NULL
					OR CREATE_DT >= @FROM_DT)
				AND (@TO_DT IS NULL
					OR CREATE_DT < @TO_DT)
				AND (LEN(pc.DESCRIPTION_TX) > 0
						OR EXISTS (SELECT 1	FROM PROPERTY_CHANGE_UPDATE pcu	WHERE pcu.CHANGE_ID = pc.ID AND pcu.DISPLAY_IN = 'Y'))
	ELSE
	IF @PARENT_ID IS NOT NULL
		AND @PARENT_ID > 0
		INSERT INTO @Id
			SELECT
				ID
			FROM PROPERTY_CHANGE
			WHERE PARENT_ID = @PARENT_ID
				AND PARENT_NAME_TX = @PARENT_NAME_TX
				AND (@FROM_DT IS NULL
					OR CREATE_DT >= @FROM_DT)
				AND (@TO_DT IS NULL
					OR CREATE_DT < @TO_DT)
	ELSE
	IF @FROM_DT IS NOT NULL
		AND ISNULL(@USER_TX, '') <> ''
		INSERT INTO @Id
			SELECT
				ID
			FROM PROPERTY_CHANGE
			WHERE CREATE_DT >= @FROM_DT
				AND USER_TX = @USER_TX
				AND (@TO_DT IS NULL
					OR CREATE_DT < @TO_DT)
				AND (@FORMATTED_IN IS NULL
					OR FORMATTED_IN = @FORMATTED_IN)
	ELSE
	IF @FROM_DT IS NOT NULL
		AND ISNULL(@TRANS_STATUS_CD, '') <> ''
		INSERT INTO @Id
			SELECT
				ID
			FROM PROPERTY_CHANGE
			WHERE CREATE_DT >= @FROM_DT
				AND TRANS_STATUS_CD = @TRANS_STATUS_CD
				AND (@TO_DT IS NULL
					OR CREATE_DT < @TO_DT)
	ELSE
		INSERT INTO @Id
			SELECT
				ID
			FROM PROPERTY_CHANGE
			WHERE (@PARENT_NAME_TX IS NULL
					OR PARENT_NAME_TX = ISNULL(@PARENT_NAME_TX, PARENT_NAME_TX))
				AND (@PARENT_ID IS NULL
					OR PARENT_ID = @PARENT_ID)
				AND (@ENTITY_NAME_TX IS NULL
					OR ENTITY_NAME_TX = ISNULL(@ENTITY_NAME_TX, ENTITY_NAME_TX))
				AND (@ENTITY_ID IS NULL
					OR ENTITY_ID = @ENTITY_ID)
				AND (@USER_TX IS NULL
					OR USER_TX = ISNULL(@USER_TX, USER_TX))
				AND (@FROM_DT IS NULL
					OR CREATE_DT >= @FROM_DT)
				AND (@TO_DT IS NULL
					OR CREATE_DT < @TO_DT)
				AND (@TRANS_STATUS_CD IS NULL
					OR TRANS_STATUS_CD = @TRANS_STATUS_CD)
				AND (@FORMATTED_IN IS NULL
					OR FORMATTED_IN = @FORMATTED_IN)

	INSERT INTO @Change
		SELECT
			ID
		,	PARENT_NAME_TX
		,	PARENT_ID
		,	ENTITY_NAME_TX
		,	ENTITY_ID
		,	NOTE_TX
		,	DESCRIPTION_TX
		,	TICKET_TX
		,	USER_TX
		,	ATTACHMENT_IN
		,	DETAILS_IN
		,	FORMATTED_IN
		,	CREATE_DT
		,	TRANS_STATUS_CD
		,	TRANS_STATUS_DT
		,	LOCK_ID
		,	UTL_IN
		FROM PROPERTY_CHANGE
		WHERE ID IN (SELECT
					ID
				FROM @Id)
		ORDER BY CREATE_DT DESC

	RETURN;

END

GO

