USE [Unitrac]
GO

DECLARE 

@LenderCode AS nvarchar(10)=NULL,
					@Division AS nvarchar(10)=NULL,
					@Coverage AS nvarchar(100)=NULL,
					@Branch AS nvarchar(max)=NULL,
					@ReportType as nvarchar(50)=NULL,
					@GroupByCode as nvarchar(50)=NULL,
					@SortByCode as nvarchar(50)=NULL,
					@FilterByCode as nvarchar(50)=NULL,
					@SpecificReport as varchar(50)=NULL,
					@Report_History_ID AS bigint=NULL,
					@ProcessLogID as bigint=0


SET @Division = '3'
SET @FilterByCode = 'NTCREG_CPICXL'
SET @GroupByCode = 'B/D/C/O'
SET @LenderCode = '1350'
SET @ProcessLogID = '36724008'
SET @ReportType = 'NTCREG'

SET NOCOUNT ON
--Get rid of residual #temp tables
IF OBJECT_ID(N'tempdb..#tmpfilter',N'U') IS NOT NULL
  DROP TABLE #tmpfilter
IF OBJECT_ID(N'tempdb..#tmptable',N'U') IS NOT NULL
  DROP TABLE #tmptable
IF OBJECT_ID(N'tempdb..#t1',N'U') IS NOT NULL
  DROP TABLE #t1

BEGIN 

DECLARE @LenderID AS bigint

Select @LenderID=ID from LENDER where CODE_TX = @LenderCode and PURGE_DT is null

DECLARE @GroupBySQL AS varchar(1000)=NULL
DECLARE @SortBySQL AS varchar(1000)=NULL
DECLARE @FilterBySQL AS varchar(1000)=NULL
DECLARE @HeaderTx AS varchar(1000)=NULL
DECLARE @FooterTx AS varchar(1000)=NULL
DECLARE @FillerZero AS varchar(18)
DECLARE @BeginDate As datetime2 (7)
DECLARE @EndDate AS datetime2 (7)
DECLARE @RecordCount AS bigint = 0
DECLARE @Regenerated as bit
DECLARE @ProcessDefinitionID as bigint = 0
DECLARE @CyclePeriod as nvarchar(15) = NULL
DECLARE @WorkItemID as bigint

SET @FillerZero = '000000000000000000'
SET @BeginDate = NULL
SET @EndDate = NULL

IF @Report_History_ID IS NOT NULL
BEGIN
	SELECT	@BeginDate=REPORT_DATA_XML.value('(//ReportData/Report/StartDate/@value)[1]', 'Datetime2'),
			@EndDate=REPORT_DATA_XML.value('(//ReportData/Report/EndDate/@value)[1]', 'Datetime2'),
			@ProcessLogID=REPORT_DATA_XML.value('(/ReportData/Report/ProcessLogID/@value)[1]', 'bigint'),
			@WorkItemID=REPORT_DATA_XML.value('(/ReportData/Report/WorkItemId/@value)[1]', 'bigint')
	FROM REPORT_HISTORY WHERE ID = @Report_History_ID
END

DECLARE @BranchTable AS TABLE(ID int, STRVALUE nvarchar(30))
			INSERT INTO @BranchTable SELECT * FROM SplitFunction(@Branch, ',')  

IF @BeginDate = '0001-01-01' 
  BEGIN
  SELECT @ProcessDefinitionID =  REPORT_DATA_XML.value('(/ReportData/Report/ProcessDefinitionID/@value)[1]', 'bigint')  FROM REPORT_HISTORY WHERE ID = @Report_History_ID
  SELECT @CyclePeriod = EXECUTION_FREQ_CD FROM PROCESS_DEFINITION WHERE ID = @ProcessDefinitionID
  select @BeginDate = 
	CASE @CyclePeriod 
		WHEN 'ANNUAL' THEN DATEADD(YEAR, -1, @EndDate)
		WHEN 'QUARTERLY' THEN DATEADD(QUARTER, -1, @EndDate)
		WHEN 'MONTHLY' THEN DATEADD(MONTH, -1, @EndDate)
		WHEN 'SEMIMONTH' THEN DATEADD(WEEK, -2, @EndDate)
		WHEN 'BIWEEK' THEN DATEADD(WEEK, -2, @EndDate)
		WHEN 'WEEK' THEN DATEADD(WEEK, -1, @EndDate)
		WHEN 'DAY' THEN DATEADD(d, -1, @EndDate)
		WHEN 'HOUR' THEN DATEADD(HOUR, -1, @EndDate)	
		ELSE DATEADD(DAY, -2, @EndDate)	
	 end	 
	END


--Set the variable to indicate if the report was regenerated
--Check if the regenerate flag is set in ReportHistory
SELECT @Regenerated = 
	CASE WHEN RH.REPORT_DATA_XML.exist('(/ReportData/Report/NoticesSubmitted)') = 1 THEN 
		CASE WHEN RH.REPORT_DATA_XML.value('(/ReportData/Report/NoticesSubmitted/@value)[1]', 'varchar(1)') = 'Y' 
			THEN 'True' ELSE 'False' 
		END
	END
	FROM REPORT_HISTORY RH where RH.ID = @Report_History_ID

--If regenerate flag not set in ReportHistory, then check the work item XML 
IF @Regenerated IS NULL 
BEGIN
	if ISNULL(@WorkItemID,'') <> ''
		SELECT @Regenerated = 
			CASE WHEN WI.CONTENT_XML.value('(/Content/Cycle/NoticeRegisterRegenerated)[1]', 'nvarchar(10)') = 'YES' THEN 'True' ELSE 'False' END 
		FROM WORK_ITEM WI 
		WHERE WI.ID = @WorkItemID
	else
		SELECT @Regenerated = 
			CASE WHEN WI.CONTENT_XML.value('(/Content/Cycle/NoticeRegisterRegenerated)[1]', 'nvarchar(10)') = 'YES' THEN 'True' ELSE 'False' END 
		FROM WORK_ITEM WI 
		WHERE WI.RELATE_TYPE_CD='Osprey.ProcessMgr.ProcessLog' 
		AND WI.RELATE_ID=@ProcessLogID
		AND WI.ID IN (select WORK_ITEM_ID from WORK_ITEM_PROCESS_LOG_ITEM_RELATE REL 
					 WHERE REL.WORK_ITEM_ID = WI.ID and REL.PARENT_WORK_ITEM_ID IS NULL
					 AND REL.PURGE_DT IS NULL)
		AND WI.PURGE_DT IS NULL
END


IF @BeginDate IS NULL OR @EndDate IS NULL 
BEGIN
	SET @BeginDate = CONVERT(varchar(20),GETDATE(),101)
	SET @BeginDate = DATEADD(d,(day(@BeginDate)*-1) + 1,@BeginDate)
	SET @BeginDate = DATEADD(m,(month(@BeginDate)*-1) + 1,@BeginDate)
	SET @EndDate = GETDATE()
END
END;

CREATE TABLE [dbo].[#tmptable](
	[LOAN_BRANCHCODE_TX] [nvarchar](20) NULL,
	[LOAN_PAGEBREAKTYPE_TX] [nvarchar](20) NULL,
	[LOAN_PAGEBREAK_TX] [nvarchar](1000) NULL,
	[LOAN_DIVISIONCODE_TX] [nvarchar](20) NULL,
	[LOAN_TYPE_TX] [nvarchar](1000) NULL,
	[REQUIREDCOVERAGE_TYPE_TX] [nvarchar](1000) NULL,
	[REQUIREDCOVERAGE_CODE_TX] [nvarchar](30) NULL,
	[LOAN_NUMBER_TX] [nvarchar](18) NOT NULL,
	[LOAN_NUMBERSORT_TX] [nvarchar](36) NULL,
	[OWNER_LASTNAME_TX] [nvarchar](30) NULL,
	[OWNER_FIRSTNAME_TX] [nvarchar](30) NULL,
	[OWNER_MIDDLE_INITIAL_TX] [char](1) NULL,
	[OWNER_NAME] [nvarchar](64) NULL,
	[OWNER_DBA] [nvarchar](50) NULL,
	[OWNER_COSIGN_TX] [varchar](1) NOT NULL,
	[OWNER_EMAIL_TX] [varchar](100) NULL,
	[OWNER_LINE1_TX] [nvarchar](100) NULL,
	[OWNER_LINE2_TX] [nvarchar](100) NULL,
	[OWNER_STATE_TX] [nvarchar](30) NULL,
	[OWNER_CITY_TX] [nvarchar](40) NULL,
	[OWNER_ZIP_TX] [nvarchar](30) NULL,
	[COLLATERAL_YEAR_TX] [nvarchar](4) NULL,
	[COLLATERAL_MAKE_TX] [nvarchar](30) NULL,
	[COLLATERAL_MODEL_TX] [nvarchar](30) NULL,
	[COLLATERAL_VIN_TX] [nvarchar](18) NULL,
	[COLLATERAL_EQUIP_TX] [nvarchar](100) NULL,
	[COLLATERAL_LINE1_TX] [nvarchar](100) NULL,
	[COLLATERAL_LINE2_TX] [nvarchar](100) NULL,
	[COLLATERAL_STATE_TX] [nvarchar](30) NULL,
	[COLLATERAL_CITY_TX] [nvarchar](40) NULL,
	[COLLATERAL_ZIP_TX] [nvarchar](30) NULL,
	[LOAN_EFFECTIVE_DT] [datetime] NULL,
	[LOAN_BALANCE_NO] [decimal](19, 2) NULL,
	[PROPERTY_ACV_NO] [decimal](19, 2) NULL,
	[IMPAIRMENT_CODE_TX] [nvarchar](8) NULL,
	[IMPAIRMENT_MEANING_TX] [nvarchar](1000) NULL,
	[COLLATERAL_STATUSMEANING_TX] [nvarchar](1000) NULL,
	[REQUIREDCOVERAGE_STATUSMEANING_TX] [nvarchar](1000) NULL,
	[REQUIREDCOVERAGEINS_STATUSMEANING_TX] [nvarchar](1000) NULL,
	[COLLATERAL_CODE_TX] [nvarchar](30) NULL,							
	[PROPERTY_TYPE_CD] [nvarchar](30) NULL,
	[COLLATERAL_NUMBER_NO] [int] NULL,
	[LENDER_COLLATERAL_CODE_TX] [nvarchar](10) NULL,
	[LEGAL_STATUS_CODE_TX] [nvarchar](6) NULL,
	[PURPOSE_CODE_TX] [nvarchar](10) NULL,
	[LOAN_OFFICERCODE_TX] [nvarchar](20) NULL,
	[LOAN_CREDITSCORECODE_TX] [nvarchar](20) NULL,
	[LOAN_LENDERCODE_TX] [nvarchar](10) NULL,
	[LOAN_LENDERNAME_TX] [nvarchar](40) NOT NULL,
	[INSCOMPANY_NAME_TX] [nvarchar](30) NULL,
	[INSCOMPANY_POLICY_NO] [nvarchar](30) NULL,
	[INSAGENCY_NAME_TX] [nvarchar](100) NULL,
	[INSAGENCY_PHONE_TX] [nvarchar](20) NULL,
	[LOAN_CONTRACTTYPECODE] [nvarchar](30) NULL,
	[LOAN_STATUSCODE] [varchar](1) NULL,
	[REPORT_GROUPBY_TX] [nvarchar](1000) NULL,
	[REPORT_GROUPBY_FIELDS_TX] [nvarchar](1000) NULL,
	[REPORT_SORTBY_TX] [nvarchar](1000) NULL,
	[REPORT_HEADER_TX] [nvarchar](1000) NULL,
	[REPORT_FOOTER_TX] [nvarchar](1000) NULL,
	[COLLATERAL_STATUSCODE] [varchar](2) NOT NULL,
	[REQUIREDCOVERAGE_STATUSCODE] [varchar](2) NULL,
	[REQUIREDCOVERAGE_SUBSTATUSCODE] [varchar](2) NULL,
	[REQUIREDCOVERAGE_INSSTATUSCODE] [varchar](2) NULL,
	[REQUIREDCOVERAGE_INSSUBSTATUSCODE] [varchar](2) NULL,
	[ESCROW_IN_REQ_COV_TX] [char](1) NULL, 
	[NOTICE_SEQUENCE_NO] [int] NOT NULL,
	[NOTICE_TYPE_CD] [nvarchar](30) NOT NULL,
	[NOTICE_NAME_TX] [nvarchar](50) NOT NULL,
	[NOTICE_ISSUE_DT] [datetime2](7) NULL,
	[NOTICE_REFERENCE_TX] [nvarchar](50) NOT NULL,
	[FROZEN_DT] [datetime2](7) NULL,
	[FROZEN_BALANCE_NO] [decimal](18, 2) NULL,
	[FROZEN_PREMIUM_NO] [decimal](18, 2) NULL,
	[PROPERTY_DESCRIPTION] [nvarchar](100) NULL,
	[FIRST_ISS_NO] [decimal](18, 2) NULL,
	[FIRST_ISS_CNT_NO] [int] NULL,
	[SECOND_ISS_NO] [decimal](18, 2) NULL,
	[SECOND_ISS_CNT_NO] [int] NULL,
	[BORRINSCOMPANY_NAME_TX] [nvarchar](50) NULL,
	[BORRINSCOMPANY_POLICY_NO] [nvarchar](30) NULL,
	[BORRINSCOMPANY_CAN_DT] [datetime2](7) NULL
	
) ON [PRIMARY]

CREATE TABLE [dbo].[#tmpfilter](
	[ATTRIBUTE_CD] [nvarchar](50) NULL,
	[VALUE_TX] [nvarchar](50) NULL
) ON [PRIMARY]

INSERT INTO #tmpfilter 
	([ATTRIBUTE_CD]
	,[VALUE_TX])

SELECT
	RAD.ATTRIBUTE_CD,
	CASE 
		WHEN Custom.VALUE_TX IS NOT NULL then Custom.VALUE_TX
		WHEN RA.VALUE_TX IS NOT NULL then RA.VALUE_TX
		ELSE RAD.VALUE_TX
	END AS VALUE_TX
FROM REF_CODE RC
JOIN REF_CODE_ATTRIBUTE RAD ON RAD.DOMAIN_CD = RC.DOMAIN_CD AND RAD.REF_CD = 'DEFAULT' AND RAD.ATTRIBUTE_CD like 'FIL%'
LEFT JOIN REF_CODE_ATTRIBUTE RA ON RA.DOMAIN_CD = RC.DOMAIN_CD AND RA.REF_CD = RC.CODE_CD AND RA.ATTRIBUTE_CD = RAD.ATTRIBUTE_CD
LEFT JOIN 
	(SELECT CODE_TX,REPORT_CD,REPORT_DOMAIN_CD,REPORT_REF_ATTRIBUTE_CD,VALUE_TX FROM REPORT_CONFIG RC
	JOIN REPORT_CONFIG_ATTRIBUTE RCA ON RCA.REPORT_CONFIG_ID = RC.ID) CUSTOM
	ON CUSTOM.CODE_TX = @SpecificReport AND CUSTOM.REPORT_DOMAIN_CD = RAD.DOMAIN_CD AND CUSTOM.REPORT_REF_ATTRIBUTE_CD = RAD.ATTRIBUTE_CD AND CUSTOM.REPORT_CD = @ReportType
WHERE RC.DOMAIN_CD = 'Report_NoticeRegister' AND RC.CODE_CD = @ReportType


--WI 21726; B - Borrower; C - Cosigner; A- All 
DECLARE @BORROWER_TYPE AS VARCHAR(1) = NULL	
Select @BORROWER_TYPE =  CASE WHEN VALUE_TX IN ('C','A') Then VALUE_TX 
							ELSE 'B' END 
FROM #tmpfilter WHERE ATTRIBUTE_CD = 'FIL_BORROWER_TYPE'

DECLARE @PAGEBREAK AS VARCHAR(1) = 'F'
DECLARE @PAGEBREAK_COLUMN AS VARCHAR(20) = ''
SELECT @PAGEBREAK = ISNULL(VALUE_TX,'F') FROM #tmpfilter WHERE ATTRIBUTE_CD = 'FIL_PAGEBREAK'
SELECT @PAGEBREAK_COLUMN = ISNULL(VALUE_TX,'') FROM #tmpfilter WHERE ATTRIBUTE_CD = 'FIL_PAGEBREAK_COLUMN'

DECLARE @NAMEFL AS VARCHAR(1) = 'F'
SELECT @NAMEFL = ISNULL(VALUE_TX,'F') FROM #tmpfilter WHERE ATTRIBUTE_CD = 'FIL_NAMEFL'

if @SpecificReport is NULL or @SpecificReport = '' or @SpecificReport = '0000'
  Begin
	IF @GroupByCode IS NULL OR @GroupByCode = ''
		Select @GroupBySQL=GROUP_TX from REPORT_CONFIG where CODE_TX = @ReportType
	ELSE
		Select @GroupBySQL=DESCRIPTION_TX from REF_CODE where DOMAIN_CD = 'Report_GroupBy' and CODE_CD = @GroupByCode
	IF @SortByCode IS NULL OR @SortByCode = ''
		SELECT @SortBySQL=SORT_TX FROM REPORT_CONFIG WHERE CODE_TX = @ReportType
	ELSE
		SELECT @SortBySQL=DESCRIPTION_TX FROM REF_CODE WHERE DOMAIN_CD = 'Report_SortBy' AND CODE_CD = @SortByCode
	IF @FilterByCode IS NULL OR @FilterByCode = ''
		SELECT @FilterBySQL=FILTER_TX FROM REPORT_CONFIG WHERE CODE_TX = @ReportType
	Else
		SELECT @FilterBySQL=DESCRIPTION_TX FROM REF_CODE WHERE DOMAIN_CD = 'Report_FilterBy' AND CODE_CD = @FilterByCode

	Select @HeaderTx=HEADER_TX from REPORT_CONFIG where CODE_TX = @ReportType
	Select @FooterTx=FOOTER_TX from REPORT_CONFIG where CODE_TX = @ReportType
  End
else
  Begin
	IF @GroupByCode IS NULL OR @GroupByCode = ''
		Select @GroupBySQL=GROUP_TX from REPORT_CONFIG where CODE_TX = @SpecificReport
	ELSE
		Select @GroupBySQL=DESCRIPTION_TX from REF_CODE where DOMAIN_CD = 'Report_GroupBy' and CODE_CD = @GroupByCode
	IF @SortByCode IS NULL OR @SortByCode = ''
		SELECT @SortBySQL=SORT_TX FROM REPORT_CONFIG WHERE CODE_TX = @SpecificReport
	ELSE
		SELECT @SortBySQL=DESCRIPTION_TX FROM REF_CODE WHERE DOMAIN_CD = 'Report_SortBy' AND CODE_CD = @SortByCode
	IF @FilterByCode IS NULL OR @FilterByCode = ''
		SELECT @FilterBySQL=FILTER_TX FROM REPORT_CONFIG WHERE CODE_TX = @SpecificReport
	Else
		SELECT @FilterBySQL=DESCRIPTION_TX FROM REF_CODE WHERE DOMAIN_CD = 'Report_FilterBy' AND CODE_CD = @FilterByCode

	Select @HeaderTx=HEADER_TX from REPORT_CONFIG where CODE_TX = @SpecificReport
	Select @FooterTx=FOOTER_TX from REPORT_CONFIG where CODE_TX = @SpecificReport
  End

INSERT INTO #tmptable (
			[LOAN_BRANCHCODE_TX]
		   ,[LOAN_PAGEBREAKTYPE_TX]
		   ,[LOAN_PAGEBREAK_TX]
           ,[LOAN_DIVISIONCODE_TX]	
		   ,[LOAN_TYPE_TX]
           ,[REQUIREDCOVERAGE_TYPE_TX]
           ,[REQUIREDCOVERAGE_CODE_TX]
           ,[LOAN_NUMBER_TX]
           ,[LOAN_NUMBERSORT_TX]
           ,[OWNER_LASTNAME_TX]
           ,[OWNER_FIRSTNAME_TX]
           ,[OWNER_MIDDLE_INITIAL_TX]
           ,[OWNER_NAME]
           ,[OWNER_DBA]					 
           ,[OWNER_COSIGN_TX] 
           ,[OWNER_EMAIL_TX] 
		   ,[OWNER_LINE1_TX]
           ,[OWNER_LINE2_TX]
           ,[OWNER_STATE_TX]
           ,[OWNER_CITY_TX]
           ,[OWNER_ZIP_TX]
           ,[COLLATERAL_YEAR_TX]
           ,[COLLATERAL_MAKE_TX]
           ,[COLLATERAL_MODEL_TX]
           ,[COLLATERAL_VIN_TX]
           ,[COLLATERAL_EQUIP_TX]
           ,[COLLATERAL_LINE1_TX]
           ,[COLLATERAL_LINE2_TX]
           ,[COLLATERAL_STATE_TX]
           ,[COLLATERAL_CITY_TX]
           ,[COLLATERAL_ZIP_TX]
           ,[LOAN_EFFECTIVE_DT]
           ,[LOAN_BALANCE_NO]
		   ,[PROPERTY_ACV_NO]
           ,[IMPAIRMENT_CODE_TX]				
           ,[IMPAIRMENT_MEANING_TX]
           ,[COLLATERAL_STATUSMEANING_TX]
           ,[REQUIREDCOVERAGE_STATUSMEANING_TX]
           ,[REQUIREDCOVERAGEINS_STATUSMEANING_TX]
           ,[COLLATERAL_CODE_TX]
		   ,[PROPERTY_TYPE_CD]
           ,[COLLATERAL_NUMBER_NO]
           ,[LENDER_COLLATERAL_CODE_TX]
           ,[LEGAL_STATUS_CODE_TX]
		   ,[PURPOSE_CODE_TX]
           ,[LOAN_OFFICERCODE_TX]
		   ,[LOAN_CREDITSCORECODE_TX]
           ,[LOAN_LENDERCODE_TX]
           ,[LOAN_LENDERNAME_TX]
           ,[INSCOMPANY_NAME_TX]
           ,[INSCOMPANY_POLICY_NO]
           ,[INSAGENCY_NAME_TX]
           ,[INSAGENCY_PHONE_TX]
           ,[LOAN_CONTRACTTYPECODE]
           ,[LOAN_STATUSCODE]
           ,[COLLATERAL_STATUSCODE]
           ,[REQUIREDCOVERAGE_STATUSCODE]
           ,[REQUIREDCOVERAGE_SUBSTATUSCODE]
           ,[REQUIREDCOVERAGE_INSSTATUSCODE]
           ,[REQUIREDCOVERAGE_INSSUBSTATUSCODE]
           ,[ESCROW_IN_REQ_COV_TX]
           ,[NOTICE_SEQUENCE_NO]
           ,[NOTICE_TYPE_CD]
           ,[NOTICE_NAME_TX]
           ,[NOTICE_ISSUE_DT]
           ,[NOTICE_REFERENCE_TX]
           ,[FROZEN_DT]
           ,[FROZEN_BALANCE_NO]
           ,[FROZEN_PREMIUM_NO]
           ,[PROPERTY_DESCRIPTION]
           ,[FIRST_ISS_NO]
           ,[FIRST_ISS_CNT_NO]
           ,[SECOND_ISS_NO]
           ,[SECOND_ISS_CNT_NO]
           ,[BORRINSCOMPANY_NAME_TX]
           ,[BORRINSCOMPANY_POLICY_NO],
		    [BORRINSCOMPANY_CAN_DT])
           
SELECT 
		CASE when ISNULL(L.BRANCH_CODE_TX,'') = '' 
			THEN 'No Branch' 
			ELSE L.BRANCH_CODE_TX 
		END as [LOAN_BRANCHCODE_TX],
		CASE WHEN @PAGEBREAK = 'T' 
			THEN @PAGEBREAK_COLUMN
			ELSE ''
		END AS [LOAN_PAGEBREAKTYPE_TX],
		CASE WHEN @PAGEBREAK = 'T'
			THEN (CASE  WHEN @PAGEBREAK_COLUMN = 'Branch'
						THEN (	CASE WHEN ISNULL(L.BRANCH_CODE_TX,'') = '' 
									 THEN 'No Branch'
									 ELSE L.BRANCH_CODE_TX 
								END) 
						ELSE '' 
				  END)
			ELSE '' 
		END AS [LOAN_PAGEBREAK_TX],
		CASE WHEN ISNULL(L.DIVISION_CODE_TX,'') = ''
			THEN '0'
			ELSE L.DIVISION_CODE_TX
		END AS [LOAN_DIVISIONCODE_TX],
		ISNULL(RC_DIVISION.DESCRIPTION_TX,RC_SC.DESCRIPTION_TX) AS [LOAN_TYPE_TX],
	   	ISNULL(RC_COVERAGETYPE.MEANING_TX,'') AS [REQUIREDCOVERAGE_TYPE_TX],
		RC.TYPE_CD AS [REQUIREDCOVERAGE_CODE_TX],
		L.NUMBER_TX AS [LOAN_NUMBER_TX],
		SUBSTRING(@FillerZero, 1, 18 - LEN(L.NUMBER_TX)) + CAST(L.NUMBER_TX AS nvarchar(18))AS [LOAN_NUMBERSORT_TX],
		O.LAST_NAME_TX AS [OWNER_LASTNAME_TX],
		O.FIRST_NAME_TX AS [OWNER_FIRSTNAME_TX],
		O.MIDDLE_INITIAL_TX AS [OWNER_MIDDLE_INITIAL_TX],
	    CASE 
			WHEN @NAMEFL = 'T' THEN
				CASE WHEN O.FIRST_NAME_TX IS NULL 
					THEN O.LAST_NAME_TX 
					ELSE (ISNULL(O.FIRST_NAME_TX,'') + ' ' + ISNULL(O.MIDDLE_INITIAL_TX,'') + ' ' + RTRIM(O.LAST_NAME_TX)) 
				END
			ELSE
				CASE WHEN O.FIRST_NAME_TX IS NULL 
					THEN O.LAST_NAME_TX 
					ELSE RTRIM(O.LAST_NAME_TX + ', ' + ISNULL(O.FIRST_NAME_TX,'') + ' ' + ISNULL(O.MIDDLE_INITIAL_TX,'')) 
				END
		END AS [OWNER_NAME],
		CASE WHEN ISNULL(ODBA.NAME_TX,'') = '' THEN ODBA.LAST_NAME_TX ELSE ODBA.NAME_TX END AS [OWNER_DBA],
		CASE WHEN SUBSTRING(OL.OWNER_TYPE_CD,1,1) = 'C' THEN 'C' ELSE '' END AS [OWNER_COSIGN_TX],
		O.EMAIL_TX AS [OWNER_EMAIL_TX],
		AO.LINE_1_TX AS [OWNER_LINE1_TX],
		AO.LINE_2_TX AS [OWNER_LINE2_TX],
		AO.STATE_PROV_TX AS [OWNER_STATE_TX],
		AO.CITY_TX AS [OWNER_CITY_TX],
		AO.POSTAL_CODE_TX AS [OWNER_ZIP_TX], 
		P.YEAR_TX AS [COLLATERAL_YEAR_TX],
		P.MAKE_TX AS [COLLATERAL_MAKE_TX],
		P.MODEL_TX AS [COLLATERAL_MODEL_TX],
		P.VIN_TX AS [COLLATERAL_VIN_TX],
		P.DESCRIPTION_TX AS [COLLATERAL_EQUIP_TX],
		AM.LINE_1_TX AS [COLLATERAL_LINE1_TX],
		AM.LINE_2_TX AS [COLLATERAL_LINE2_TX],
		AM.STATE_PROV_TX AS [COLLATERAL_STATE_TX],
		AM.CITY_TX AS [COLLATERAL_CITY_TX],
		AM.POSTAL_CODE_TX AS [COLLATERAL_ZIP_TX],
		L.EFFECTIVE_DT AS [LOAN_EFFECTIVE_DT],
		C.LOAN_BALANCE_NO AS [LOAN_BALANCE_NO],
		P.ACV_NO AS [PROPERTY_ACV_NO],
		CI.CODE_CD AS [IMPAIRMENT_CODE_TX],					
		IRRef.MEANING_TX AS [IMPAIRMENT_MEANING_TX],
		CSRef.MEANING_TX AS [COLLATERAL_STATUSMEANING_TX],
		RCSRef.MEANING_TX AS [REQUIREDCOVERAGE_STATUSMEANING_TX],
		RCISRef.MEANING_TX AS [REQUIREDCOVERAGEINS_STATUSMEANING_TX],
		CC.CODE_TX AS [COLLATERAL_CODE_TX],
		RCA_PROP.VALUE_TX AS [PROPERTY_TYPE_CD],
		C.COLLATERAL_NUMBER_NO AS [COLLATERAL_NUMBER_NO],
		C.LENDER_COLLATERAL_CODE_TX AS [LENDER_COLLATERAL_CODE_TX],
		C.LEGAL_STATUS_CODE_TX AS [LEGAL_STATUS_CODE_TX],
		C.PURPOSE_CODE_TX AS [PURPOSE_CODE_TX],
		(CASE when ISNULL(L.OFFICER_CODE_TX,'') = '' then 'No Loan Officer' else L.OFFICER_CODE_TX END) as [LOAN_OFFICERCODE_TX],
		L.CREDIT_SCORE_CD as [LOAN_CREDITSCORECODE_TX],
		LND.CODE_TX AS [LOAN_LENDERCODE_TX],
		LND.NAME_TX AS [LOAN_LENDERNAME_TX],
		OP.BIC_NAME_TX AS [INSCOMPANY_NAME_TX],
		OP.POLICY_NUMBER_TX AS [INSCOMPANY_POLICY_NO],
		BIA.NAME_TX AS [INSAGENCY_NAME_TX],
		BIA.PHONE_TX AS [INSAGENCY_PHONE_TX],
		L.CONTRACT_TYPE_CD AS [LOAN_CONTRACTTYPECODE],
		L.STATUS_CD AS [LOAN_STATUSCODE],
		C.STATUS_CD AS [COLLATERAL_STATUSCODE],
		RC.STATUS_CD [REQUIREDCOVERAGE_STATUSCODE],
		RC.SUB_STATUS_CD AS [REQUIREDCOVERAGE_SUBSTATUSCODE],
		RC.SUMMARY_STATUS_CD AS [REQUIREDCOVERAGE_INSSTATUSCODE],
		RC.SUMMARY_SUB_STATUS_CD AS [REQUIREDCOVERAGE_INSSUBSTATUSCODE],
		RC.ESCROW_IN AS [ESCROW_IN_REQ_COV_TX],
		N.SEQUENCE_NO AS [NOTICE_SEQUENCE_NO],
		N.TYPE_CD AS [NOTICE_TYPE_CD],
		CASE  
			WHEN SEQUENCE_NO = 0 THEN ''
			WHEN SEQUENCE_NO = 1 THEN cast(SEQUENCE_NO as varchar) + 'st' 
			WHEN SEQUENCE_NO = 2 THEN cast(SEQUENCE_NO as varchar) + 'nd' 
			WHEN SEQUENCE_NO = 3 THEN cast(SEQUENCE_NO as varchar) + 'rd'
			ELSE cast(SEQUENCE_NO as varchar) + 'th'
		END + ' ' +  
		CASE 
			WHEN @SpecificReport = 'CPIYNTCREG' THEN REPLACE(N.NAME_TX, 'CPI', 'Default Fee') 
			ELSE N.NAME_TX 
		END AS [NOTICE_NAME_TX],
		N.EXPECTED_ISSUE_DT AS [NOTICE_ISSUE_DT],
		N.REFERENCE_ID_TX AS [NOTICE_REFERENCE_TX],
		COALESCE(CAQ.START_DT, CAI.START_DT) AS [FROZEN_DT],
		ISNULL(CQ.BASIS_NO,C.LOAN_BALANCE_NO) AS [FROZEN_BALANCE_NO],
		COALESCE(CAQ.TOTAL_PREMIUM_NO, CAI.TOTAL_PREMIUM_NO) AS [FROZEN_PREMIUM_NO],
		dbo.fn_GetPropertyDescriptionForReports(C.ID) AS [PROPERTY_DESCRIPTION],
		CASE WHEN N.SEQUENCE_NO = 1 THEN COALESCE(CAQ.TOTAL_PREMIUM_NO, CAI.TOTAL_PREMIUM_NO) ELSE 0 END AS [FIRST_ISS_NO],
		CASE WHEN N.SEQUENCE_NO = 1 AND ISNULL(ISNULL(CQ.BASIS_NO,C.LOAN_BALANCE_NO),0) <> 0 THEN 1 ELSE 0 END AS [FIRST_ISS_CNT_NO],	
		CASE WHEN N.SEQUENCE_NO > 1 THEN COALESCE(CAQ.TOTAL_PREMIUM_NO, CAI.TOTAL_PREMIUM_NO) ELSE 0 END AS [SECOND_ISS_NO],
		CASE WHEN N.SEQUENCE_NO > 1 AND ISNULL(ISNULL(CQ.BASIS_NO,C.LOAN_BALANCE_NO),0) <> 0 THEN 1 ELSE 0 END AS [SECOND_ISS_CNT_NO],
		OP.BIC_NAME_TX AS [BORRINSCOMPANY_NAME_TX],
		OP.POLICY_NUMBER_TX AS [BORRINSCOMPANY_POLICY_NO],
		OP.CANCELLATION_DT AS [BORRINSCOMPANY_CAN_DT]
		
		
FROM NOTICE N 
JOIN LOAN L ON L.ID = N.LOAN_ID AND L.PURGE_DT IS NULL
JOIN NOTICE_REQUIRED_COVERAGE_RELATE NRCR  ON NRCR.NOTICE_ID = N.ID	AND NRCR.PURGE_DT IS NULL 
LEFT JOIN REQUIRED_COVERAGE RC ON RC.ID = NRCR.REQUIRED_COVERAGE_ID AND RC.PURGE_DT IS NULL		
JOIN PROPERTY P ON P.ID = RC.PROPERTY_ID AND P.LENDER_ID = L.LENDER_ID AND P.PURGE_DT IS NULL	
CROSS APPLY (SELECT TOP 1 C1.* 
			FROM COLLATERAL C1 
			WHERE P.ID = C1.PROPERTY_ID 
			AND C1.PURGE_DT IS NULL 
			AND C1.PRIMARY_LOAN_IN = 'Y' 
			ORDER BY C1.CREATE_DT DESC) AS C	 		
JOIN LENDER LND ON LND.ID = L.LENDER_ID AND LND.PURGE_DT IS NULL
JOIN OWNER_LOAN_RELATE OL ON OL.LOAN_ID = L.ID  AND OL.PURGE_DT IS NULL
JOIN [OWNER] O ON O.ID = OL.OWNER_ID AND O.PURGE_DT IS NULL
OUTER APPLY 
(
SELECT TOP 1 DBA.OWNER_ID FROM OWNER_LOAN_RELATE DBA
WHERE DBA.LOAN_ID = L.ID AND DBA.OWNER_TYPE_CD = 'DBA' 
AND DBA.PURGE_DT IS NULL	
ORDER BY ID
) AS OLDBA			
LEFT JOIN [OWNER] ODBA ON ODBA.ID = OLDBA.OWNER_ID AND ODBA.PURGE_DT IS NULL
LEFT JOIN [OWNER_ADDRESS] AO ON AO.ID = O.ADDRESS_ID AND AO.PURGE_DT IS NULL
LEFT JOIN [OWNER_ADDRESS] AM ON AM.ID = P.ADDRESS_ID AND AM.PURGE_DT IS NULL

LEFT JOIN COLLATERAL_CODE CC ON CC.ID = C.COLLATERAL_CODE_ID and CC.PURGE_DT IS NULL
OUTER APPLY (
	select distinct case when (select COUNT(*) from IMPAIRMENT 
		where REQUIRED_COVERAGE_ID = RC.ID 
		AND START_DT < GETDATE() AND END_DT > GETDATE() AND PURGE_DT IS NULL and
		(OVERRIDE_TYPE_CD IS null or OVERRIDE_TYPE_CD = '')) > 1 
	then 'MU'  
	else CI1.CODE_CD
	end as CODE_CD
	from IMPAIRMENT CI1
	where CI1.REQUIRED_COVERAGE_ID = RC.ID 
	AND CI1.START_DT < GETDATE() AND CI1.END_DT > GETDATE() AND CI1.PURGE_DT IS NULL and
	(CI1.OVERRIDE_TYPE_CD IS null or CI1.OVERRIDE_TYPE_CD = '')
	group by CI1.CODE_CD
) CI

OUTER APPLY
(SELECT TOP 1 * FROM dbo.GetCurrentCoverage(P.ID, RC.ID, RC.TYPE_CD)
ORDER BY ISNULL(UNIT_OWNERS_IN, 'N') DESC
) OP

LEFT JOIN BORROWER_INSURANCE_AGENCY BIA ON BIA.ID = OP.BIA_ID AND BIA.PURGE_DT IS NULL
LEFT JOIN CPI_QUOTE CQ ON CQ.ID = N.CPI_QUOTE_ID AND CQ.PURGE_DT IS NULL
LEFT JOIN CPI_ACTIVITY CAQ ON CAQ.CPI_QUOTE_ID = CQ.ID AND CAQ.TYPE_CD = 'Q' and CAQ.PURGE_DT IS NULL
LEFT JOIN CPI_ACTIVITY CAI ON CAI.CPI_QUOTE_ID = CQ.ID AND CAI.TYPE_CD = 'I' AND CAI.PURGE_DT IS NULL
LEFT JOIN DOCUMENT_CONTAINER DC on DC.RELATE_ID = N.ID and RELATE_CLASS_NAME_TX = 'Allied.UniTrac.Notice' and DC.PURGE_DT IS NULL
LEFT JOIN REF_CODE IRRef ON IRRef.DOMAIN_CD = 'ImpairmentReason' AND IRRef.CODE_CD = CI.CODE_CD
LEFT JOIN REF_CODE CSRef ON CSRef.DOMAIN_CD = 'CollateralStatus' AND CSRef.CODE_CD = C.STATUS_CD
LEFT JOIN REF_CODE RCSRef ON RCSRef.DOMAIN_CD = 'RequiredCoverageStatus' AND RCSRef.CODE_CD = RC.STATUS_CD
LEFT JOIN REF_CODE RCISRef ON RCISRef.DOMAIN_CD = 'RequiredCoverageInsStatus' AND RCISRef.CODE_CD = RC.SUMMARY_STATUS_CD
LEFT JOIN REF_CODE RC_DIVISION ON RC_DIVISION.DOMAIN_CD = 'ContractType' AND RC_DIVISION.CODE_CD = L.DIVISION_CODE_TX
LEFT JOIN REF_CODE RC_COVERAGETYPE ON RC_COVERAGETYPE.DOMAIN_CD = 'Coverage' AND RC_COVERAGETYPE.CODE_CD = RC.TYPE_CD
left Join REF_CODE RC_SC on RC_SC.DOMAIN_CD = 'SecondaryClassification' AND CC.SECONDARY_CLASS_CD = RC_SC.CODE_CD
left Join REF_CODE_ATTRIBUTE RCA_PROP on RC_SC.DOMAIN_CD = RCA_PROP.DOMAIN_CD and RC_SC.CODE_CD = RCA_PROP.REF_CD and RCA_PROP.ATTRIBUTE_CD = 'PropertyType'
CROSS APPLY dbo.fn_FilterCollateralByDivisionCd(C.ID, @Division) fn_FCBD
WHERE 
L.RECORD_TYPE_CD = 'G'
--AND P.RECORD_TYPE_CD = 'G'
AND RC.RECORD_TYPE_CD = 'G' 
AND L.EXTRACT_UNMATCH_COUNT_NO = 0 AND C.EXTRACT_UNMATCH_COUNT_NO = 0 AND
L.STATUS_CD != 'U' and C.STATUS_CD != 'U' and
--((SELECT COUNT(*) FROM PROPERTY_OWNER_POLICY_RELATE WHERE PROPERTY_ID = P.ID) < 2 OR
--	(SELECT COUNT(*) FROM PROPERTY_OWNER_POLICY_RELATE WHERE PROPERTY_ID = P.ID) >= 2 AND OP.ID IS NOT NULL) AND
LND.ID = @LenderID 
AND
(L.BRANCH_CODE_TX IN (SELECT STRVALUE FROM @BranchTable) OR @Branch IS NULL OR @Branch = '' OR @Branch = 'All')
AND fn_FCBD.loanType IS NOT NULL
AND
(RC.TYPE_CD = @Coverage OR @Coverage = '1' OR @Coverage IS NULL OR @Coverage = 'All')
AND
((@BORROWER_TYPE = 'B' AND OL.OWNER_TYPE_CD = 'B' AND (DC.RECIPIENT_TYPE_CD IS NULL OR DC.RECIPIENT_TYPE_CD = 'BORR')) OR
(@BORROWER_TYPE = 'C' AND OL.OWNER_TYPE_CD = 'CS' AND (DC.RECIPIENT_TYPE_CD IS NULL OR DC.RECIPIENT_TYPE_CD = 'COBR')) OR
(@BORROWER_TYPE = 'A' AND ((OL.OWNER_TYPE_CD = 'B' AND (DC.RECIPIENT_TYPE_CD IS NULL OR DC.RECIPIENT_TYPE_CD = 'BORR')) OR 
	(OL.OWNER_TYPE_CD = 'CS' AND  (DC.RECIPIENT_TYPE_CD IS NULL OR DC.RECIPIENT_TYPE_CD = 'COBR'))))) 
AND (N.EXPECTED_ISSUE_DT BETWEEN @BeginDate AND @EndDate)
AND ((@Regenerated = 'True' and (DC.PRINT_STATUS_CD = 'PRINTED' or DC.PRINT_STATUS_CD = 'PEND')) or @Regenerated = 'False')
AND N.PURGE_DT IS NULL
 OPTION(QUERYTRACEON 2312)

Declare @sqlstring as nvarchar(1000)
If isnull(@FilterBySQL,'') <> '' 
Begin
  Select * into #t1 from #tmptable 
  truncate table #tmptable

  Set @sqlstring = N'Insert into #tmpTable
                     Select * from dbo.#t1 where ' + @FilterBySQL
  --print @sqlstring
  EXECUTE sp_executesql @sqlstring
End  

Set @sqlstring = N'Update #tmpTable 
				Set [REPORT_GROUPBY_TX] = ' + @GroupBySQL + ',
		            [REPORT_GROUPBY_FIELDS_TX] = ' + replace(replace(@GroupBySQL, '[', ''''),']','''')

EXECUTE sp_executesql @sqlstring

IF @PAGEBREAK = 'T' AND @PAGEBREAK_COLUMN <> 'Branch'
BEGIN
	Set @sqlstring = N'Update #tmpTable Set [LOAN_PAGEBREAK_TX] = ' + @GroupBySQL
	EXECUTE sp_executesql @sqlstring
END

Set @sqlstring = N'Update #tmpTable Set [REPORT_SORTBY_TX] = ' + @SortBySQL
EXECUTE sp_executesql @sqlstring

If isnull(@HeaderTx,'') <> '' 
Begin
	Set @sqlstring = N'Update #tmpTable Set [REPORT_HEADER_TX] = ' + @HeaderTx
	EXECUTE sp_executesql @sqlstring
End

If isnull(@FooterTx,'') <> '' 
Begin
	Set @sqlstring = N'Update #tmpTable Set [REPORT_FOOTER_TX] = ' + @FooterTx
	EXECUTE sp_executesql @sqlstring
End

SELECT @RecordCount = COUNT(*) from #tmpTable

IF @Report_History_ID IS NOT NULL
BEGIN
  UPDATE [UNITRAC-REPORTS].[UNITRAC].DBO.REPORT_HISTORY_NOXML
  SET RECORD_COUNT_NO = @RecordCount
  WHERE ID = @Report_History_ID
END

SELECT * FROM #tmptable
	

GO

