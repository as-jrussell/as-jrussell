USE [UniTrac]
GO

/****** Object:  StoredProcedure [dbo].[Report_CPIFalsePlaced]    Script Date: 3/5/2018 3:49:40 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO




CREATE PROCEDURE [dbo].[Report_CPIFalsePlaced] 
--declare
 @LenderCode as nvarchar(20)=''
,@AgencyID as bigint=0
AS

BEGIN
--Get rid of residual #temp tables
IF OBJECT_ID(N'tempdb..#tmpTable',N'U') IS NOT NULL
  DROP TABLE #tmptable
IF OBJECT_ID(N'tempdb..#tmpSummary',N'U') IS NOT NULL
  DROP TABLE #tmpSummary
    
  
Declare @GetDate DateTime = GetDate()
  
SELECT fpc.ID,
(ABS(ISNULL(FINSQ.P_PRM,0)) + ABS(ISNULL(FINSQ.P_FEE,0)) + ABS(ISNULL(FINSQ.P_TAX1,0)) + ABS(ISNULL(FINSQ.P_TAX2,0)) + 
 ABS(ISNULL(FINSQ.P_TAX3,0)) + ABS(ISNULL(FINSQ.P_TAX4,0)) + ABS(ISNULL(FINSQ.P_OTH,0))) AS [INS_PAID_NO]	
,(ABS(ISNULL(FINSQ.CP_PRM,0)) + ABS(ISNULL(FINSQ.CP_FEE,0)) + ABS(ISNULL(FINSQ.CP_TAX1,0)) + ABS(ISNULL(FINSQ.CP_TAX2,0)) + 
  ABS(ISNULL(FINSQ.CP_TAX3,0)) + ABS(ISNULL(FINSQ.CP_TAX4,0)) + ABS(ISNULL(FINSQ.CP_OTH,0))) AS	[INS_CAN_PAID_NO]		
,ISNULL(CPA_I.REASON_CD,'') AS [ISS_REASON_TX]
into #tmptable
FROM FORCE_PLACED_CERTIFICATE FPC
JOIN FORCE_PLACED_CERT_REQUIRED_COVERAGE_RELATE FPCRCR ON FPCRCR.FPC_ID = FPC.ID AND FPCRCR.PURGE_DT IS NULL
JOIN REQUIRED_COVERAGE RC ON FPCRCR.REQUIRED_COVERAGE_ID = RC.ID AND RC.PURGE_DT IS NULL
JOIN LOAN L ON L.ID = FPC.LOAN_ID	AND ISNULL(L.RECORD_TYPE_CD,'') IN('A', 'D', 'G') AND L.PURGE_DT IS NULL
JOIN LENDER LND ON LND.ID = L.LENDER_ID AND LND.PURGE_DT IS NULL
JOIN PROPERTY P ON RC.PROPERTY_ID = P.ID AND P.PURGE_DT IS NULL
JOIN COLLATERAL C ON P.ID = C.PROPERTY_ID AND C.PURGE_DT IS NULL
JOIN CPI_QUOTE CPQ ON CPQ.ID = FPC.CPI_QUOTE_ID AND CPQ.PURGE_DT IS NULL
LEFT JOIN CPI_ACTIVITY CPA_I ON CPA_I.CPI_QUOTE_ID = CPQ.ID AND CPA_I.TYPE_CD = 'I' AND CPA_I.PURGE_DT IS NULL
OUTER APPLY (
SELECT  
SUM(CASE WHEN FTXSQ.TXN_TYPE_CD = 'P' THEN FTDSQ.AMOUNT_NO ELSE 0 END) AS INS_PAID_NO,
SUM(CASE WHEN FTXSQ.TXN_TYPE_CD = 'CP' THEN FTDSQ.AMOUNT_NO ELSE 0 END) AS INS_CAN_PAID_NO,
SUM(CASE WHEN FTXSQ.TXN_TYPE_CD = 'R' AND FTDSQ.TYPE_CD = 'PRM' THEN FTDSQ.AMOUNT_NO ELSE 0 END) AS I_PRM,
SUM(CASE WHEN FTXSQ.TXN_TYPE_CD = 'R' AND FTDSQ.TYPE_CD = 'FEE' THEN FTDSQ.AMOUNT_NO ELSE 0 END) AS I_FEE,
SUM(CASE WHEN FTXSQ.TXN_TYPE_CD = 'R' AND FTDSQ.TYPE_CD = 'TAX1' THEN FTDSQ.AMOUNT_NO ELSE 0 END) AS I_TAX1,
SUM(CASE WHEN FTXSQ.TXN_TYPE_CD = 'R' AND FTDSQ.TYPE_CD = 'TAX2' THEN FTDSQ.AMOUNT_NO ELSE 0 END) AS I_TAX2,
SUM(CASE WHEN FTXSQ.TXN_TYPE_CD = 'R' AND FTDSQ.TYPE_CD = 'TAX3' THEN FTDSQ.AMOUNT_NO ELSE 0 END) AS I_TAX3,
SUM(CASE WHEN FTXSQ.TXN_TYPE_CD = 'R' AND FTDSQ.TYPE_CD = 'TAX4' THEN FTDSQ.AMOUNT_NO ELSE 0 END) AS I_TAX4,
SUM(CASE WHEN FTXSQ.TXN_TYPE_CD = 'R' AND FTDSQ.TYPE_CD = 'OTH' THEN FTDSQ.AMOUNT_NO ELSE 0 END) AS I_OTH,
SUM(CASE WHEN FTXSQ.TXN_TYPE_CD = 'C' AND FTDSQ.TYPE_CD = 'PRM' THEN FTDSQ.AMOUNT_NO ELSE 0 END) AS C_PRM,
SUM(CASE WHEN FTXSQ.TXN_TYPE_CD = 'C' AND FTDSQ.TYPE_CD = 'FEE' THEN FTDSQ.AMOUNT_NO ELSE 0 END) AS C_FEE,
SUM(CASE WHEN FTXSQ.TXN_TYPE_CD = 'C' AND FTDSQ.TYPE_CD = 'TAX1' THEN FTDSQ.AMOUNT_NO ELSE 0 END) AS C_TAX1,
SUM(CASE WHEN FTXSQ.TXN_TYPE_CD = 'C' AND FTDSQ.TYPE_CD = 'TAX2' THEN FTDSQ.AMOUNT_NO ELSE 0 END) AS C_TAX2,
SUM(CASE WHEN FTXSQ.TXN_TYPE_CD = 'C' AND FTDSQ.TYPE_CD = 'TAX3' THEN FTDSQ.AMOUNT_NO ELSE 0 END) AS C_TAX3,
SUM(CASE WHEN FTXSQ.TXN_TYPE_CD = 'C' AND FTDSQ.TYPE_CD = 'TAX4' THEN FTDSQ.AMOUNT_NO ELSE 0 END) AS C_TAX4,
SUM(CASE WHEN FTXSQ.TXN_TYPE_CD = 'C' AND FTDSQ.TYPE_CD = 'OTH' THEN FTDSQ.AMOUNT_NO ELSE 0 END) AS C_OTH,
SUM(CASE WHEN FTXSQ.TXN_TYPE_CD = 'P' AND FTDSQ.TYPE_CD = 'PRM' THEN FTDSQ.AMOUNT_NO ELSE 0 END) AS P_PRM,
SUM(CASE WHEN FTXSQ.TXN_TYPE_CD = 'P' AND FTDSQ.TYPE_CD = 'FEE' THEN FTDSQ.AMOUNT_NO ELSE 0 END) AS P_FEE,
SUM(CASE WHEN FTXSQ.TXN_TYPE_CD = 'P' AND FTDSQ.TYPE_CD = 'TAX1' THEN FTDSQ.AMOUNT_NO ELSE 0 END) AS P_TAX1,
SUM(CASE WHEN FTXSQ.TXN_TYPE_CD = 'P' AND FTDSQ.TYPE_CD = 'TAX2' THEN FTDSQ.AMOUNT_NO ELSE 0 END) AS P_TAX2,
SUM(CASE WHEN FTXSQ.TXN_TYPE_CD = 'P' AND FTDSQ.TYPE_CD = 'TAX3' THEN FTDSQ.AMOUNT_NO ELSE 0 END) AS P_TAX3,
SUM(CASE WHEN FTXSQ.TXN_TYPE_CD = 'P' AND FTDSQ.TYPE_CD = 'TAX4' THEN FTDSQ.AMOUNT_NO ELSE 0 END) AS P_TAX4,
SUM(CASE WHEN FTXSQ.TXN_TYPE_CD = 'P' AND FTDSQ.TYPE_CD = 'OTH' THEN FTDSQ.AMOUNT_NO ELSE 0 END) AS P_OTH,
SUM(CASE WHEN FTXSQ.TXN_TYPE_CD = 'CP' AND FTDSQ.TYPE_CD = 'PRM' THEN FTDSQ.AMOUNT_NO ELSE 0 END) AS CP_PRM,
SUM(CASE WHEN FTXSQ.TXN_TYPE_CD = 'CP' AND FTDSQ.TYPE_CD = 'FEE' THEN FTDSQ.AMOUNT_NO ELSE 0 END) AS CP_FEE,
SUM(CASE WHEN FTXSQ.TXN_TYPE_CD = 'CP' AND FTDSQ.TYPE_CD = 'TAX1' THEN FTDSQ.AMOUNT_NO ELSE 0 END) AS CP_TAX1,
SUM(CASE WHEN FTXSQ.TXN_TYPE_CD = 'CP' AND FTDSQ.TYPE_CD = 'TAX2' THEN FTDSQ.AMOUNT_NO ELSE 0 END) AS CP_TAX2,
SUM(CASE WHEN FTXSQ.TXN_TYPE_CD = 'CP' AND FTDSQ.TYPE_CD = 'TAX3' THEN FTDSQ.AMOUNT_NO ELSE 0 END) AS CP_TAX3,
SUM(CASE WHEN FTXSQ.TXN_TYPE_CD = 'CP' AND FTDSQ.TYPE_CD = 'TAX4' THEN FTDSQ.AMOUNT_NO ELSE 0 END) AS CP_TAX4,
SUM(CASE WHEN FTXSQ.TXN_TYPE_CD = 'CP' AND FTDSQ.TYPE_CD = 'OTH' THEN FTDSQ.AMOUNT_NO ELSE 0 END) AS CP_OTH
FROM FINANCIAL_TXN FTXSQ  
JOIN FINANCIAL_TXN_DETAIL FTDSQ ON FTDSQ.FINANCIAL_TXN_ID = FTXSQ.ID AND FTXSQ.FPC_ID = FPC.ID AND FTDSQ.PURGE_DT IS NULL
WHERE FTXSQ.FPC_ID = FPC.ID AND FTXSQ.PURGE_DT IS NULL
) FINSQ

WHERE (LND.CODE_TX = IsNull(NullIf(@LenderCode,''),LND.CODE_TX) And @GetDate<=IsNull(LND.CANCEL_DT,@GetDate) And LND.TEST_IN!='Y' And LND.AGENCY_ID = IsNull(NullIf(@AgencyID,0),LND.AGENCY_ID)) And fpc.EFFECTIVE_DT >= DATEADD(YEAR, -1, CONVERT (date, @GetDate))
AND FPC.PURGE_DT IS NULL AND RC.STATUS_CD <> 'I' 

CREATE TABLE #tmpSummary(
TYPE_TX nvarchar(30),
VALUE_TX int null,
REASON_TX nvarchar(10),
ORDER_NO int null
)


INSERT INTO #tmpSummary
select 'Partially Earned' as report, COUNT(1), ISS_REASON_TX, 1 from #tmptable where (INS_CAN_PAID_NO > 0 AND INS_PAID_NO > 0) AND INS_PAID_NO != INS_CAN_PAID_NO group by ISS_REASON_TX 
UNION ALL 
select 'Unfunded' as report, COUNT(1), ISS_REASON_TX, 2 from #tmptable where INS_PAID_NO = 0 group by ISS_REASON_TX 
UNION ALL
select 'Fully Earned' as report, COUNT(1), ISS_REASON_TX, 3 from #tmptable where INS_CAN_PAID_NO = 0 and INS_PAID_NO != 0 group by ISS_REASON_TX 
UNION ALL 
select 'False Placed' as report, COUNT(1), ISS_REASON_TX, 4 from #tmptable where (INS_CAN_PAID_NO > 0 AND INS_PAID_NO > 0) AND INS_PAID_NO = INS_CAN_PAID_NO group by ISS_REASON_TX 


SELECT TYPE_TX, 
ISNULL(A,0) as 'A', 
ISNULL(B,0) as 'B', 
ISNULL(C,0) as 'C', 
ISNULL(E,0) as 'E', 
ISNULL(I,0) as 'I', 
ISNULL(L,0) as 'L', 
ISNULL(N,0) as 'N', 
ISNULL(Q,0) as 'Q', 
ISNULL(R,0) as 'R'
FROM #tmpSummary 
PIVOT (max(VALUE_TX) FOR REASON_TX IN (A, B, C, E, I, L, N, Q, R)) as P
ORDER BY ORDER_NO

END


GO

