/* DECLARE ALL variables at the top */
DECLARE @SQL VARCHAR(max)
DECLARE @DatabaseName SYSNAME
DECLARE @DryRun INT = 0 --1 preview / 0 executes it 
-- Create a temporary table to store the databases
IF Object_id(N'tempdb..#TempDatabases') IS NOT NULL
  DROP TABLE #TempDatabases
CREATE TABLE #TempDatabases
  (
     DatabaseName SYSNAME,
     IsProcessed BIT
  )

/* 
-- In a world the DBA maintenance tables doesn't exist this can be used. 
INSERT INTO #TempDatabases (DatabaseName, IsProcessed)
SELECT name, 0 -- SELECT *
FROM   sys.databases
ORDER  BY database_id
*/

      INSERT INTO #TempDatabases
                  (DatabaseName,
                   IsProcessed)
      SELECT DatabaseName,
             0 -- SELECT *
      FROM   [DBA].[backup].[Schedule]  S
	  join sys.databases D on S.DatabaseName = D.name
	  	  --WHERE --PLACE SOMETHING HERE THAT MAKES SENSE!!!!

-- Loop through the remaining databases
WHILE EXISTS( SELECT * FROM #TempDatabases WHERE IsProcessed = 0 )
  BEGIN

    -- Fetch 1 DatabaseName where IsProcessed = 0
    SELECT Top 1 @DatabaseName = DatabaseName FROM #TempDatabases WHERE IsProcessed = 0 
    -- Prepare SQL Statement
    SELECT @SQL = '
USE [' + @DatabaseName + ']
 
'
    -- You know what we do here if it's 1 then it'll give us code and 0 executes it
    IF @DryRun = 0
        BEGIN
            PRINT ( @DatabaseName )
            EXEC ( @SQL)
        END
    ELSE
        BEGIN
            PRINT ( @SQL )
        END
    -- Update table
    UPDATE  #TempDatabases 
    SET IsProcessed = 1
    WHERE DatabaseName = @databaseName
  END


  
