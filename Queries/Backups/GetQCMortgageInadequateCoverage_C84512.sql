IF NOT EXISTS (SELECT 1 FROM SYS.OBJECTS WHERE NAME = 'GetQCMortgageInadequateCoverage')
	EXEC ('CREATE FUNCTION [dbo].[GetQCMortgageInadequateCoverage]() RETURNS @t TABLE (t int) AS BEGIN RETURN END')
GO

ALTER FUNCTION [dbo].[GetQCMortgageInadequateCoverage]
(
	@lenderIds NVARCHAR(MAX),
	@lastRunDate DATETIME
)

RETURNS @t TABLE
(
	 LOAN_ID BIGINT
	,PROPERTY_ID BIGINT
	,REQUIRED_COVERAGE_ID BIGINT
)


AS
BEGIN
	DECLARE @LENDER_LIST TABLE
	(
		ID BIGINT
	)

	DECLARE @Previous7Days Date = DATEADD(DAY, -7, GETDATE());

	INSERT INTO @LENDER_LIST
	SELECT * FROM GetSelectedLenderIds(@lenderIds)
	ORDER BY ID ASC;


DECLARE @Properties_Inadequate_Coverage TABLE
(
	 LOAN_ID BIGINT
	,PROPERTY_ID BIGINT
	,REQUIRED_COVERAGE_ID BIGINT
	,LENDER_ID BIGINT
	,SUMMARY_STATUS_CD NVARCHAR(4)
	,SUMMARY_SUB_STATUS_CD NVARCHAR(4) 
	,IMPAIRMENT_DT DATETIME2(7)
)

DECLARE @Notices_Generated TABLE
(
	 LOAN_ID BIGINT
	,PROPERTY_ID BIGINT
	,REQUIRED_COVERAGE_ID BIGINT
	,LENDER_ID BIGINT
	,SUMMARY_STATUS_CD NVARCHAR(4)
	,SUMMARY_SUB_STATUS_CD NVARCHAR(4) 
	,IMPAIRMENT_DT DATETIME2(7)
	,NOTICE_ID BIGINT
	,NOTICE_CREATE_DT DATETIME2(7)
	,NOTICE_TYPE NVARCHAR(30)
	,NOTICE_SUMMARY_STATUS_CD VARCHAR(10)
	,NOTICE_SUMMARY_SUB_STATUS_CD VARCHAR(10)
)

DECLARE @Notices_Matched TABLE
(
	 LOAN_ID BIGINT
	,PROPERTY_ID BIGINT
	,REQUIRED_COVERAGE_ID BIGINT
	,LENDER_ID BIGINT
	,SUMMARY_STATUS_CD NVARCHAR(4)
	,SUMMARY_SUB_STATUS_CD NVARCHAR(4) 
	,IMPAIRMENT_DT DATETIME2(7)
	,NOTICE_ID BIGINT
)

DECLARE @Notices_Printed TABLE
(
	 LOAN_ID BIGINT
	,PROPERTY_ID BIGINT
	,REQUIRED_COVERAGE_ID BIGINT
	,LENDER_ID BIGINT
	,SUMMARY_STATUS_CD NVARCHAR(4)
	,SUMMARY_SUB_STATUS_CD NVARCHAR(4) 
	,IMPAIRMENT_DT DATETIME2(7)
	,NOTICE_ID BIGINT
)

DECLARE @Gross_List TABLE
(
	 LOAN_ID BIGINT
	,PROPERTY_ID BIGINT
	,REQUIRED_COVERAGE_ID BIGINT
	,LENDER_ID BIGINT
	,SUMMARY_STATUS_CD NVARCHAR(4)
	,SUMMARY_SUB_STATUS_CD NVARCHAR(4) 
	,IMPAIRMENT_DT DATETIME2(7)
	--,NOTICE_ID BIGINT
)

DECLARE @Already_Generated TABLE
(
	REQUIRED_COVERAGE_ID BIGINT
)

IF @lenderIds = 'ALL'
	BEGIN 
		INSERT INTO @Properties_Inadequate_Coverage
		SELECT DISTINCT
			 L.ID AS [LOAN_ID]
			,P.ID AS [PROPERTY_ID]
			,RC.ID AS [REQUIRED_COVERAGE_ID]
			,LE.ID AS [LENDER_ID]
			,RC.SUMMARY_STATUS_CD
			,RC.SUMMARY_SUB_STATUS_CD
			,I.CREATE_DT AS [IMPAIRMENT_DT]
		FROM LENDER AS LE 
			INNER JOIN LOAN AS L ON L.LENDER_ID = LE.ID
			INNER JOIN COLLATERAL AS C ON C.LOAN_ID = L.ID 
			INNER JOIN PROPERTY AS P ON P.ID = C.PROPERTY_ID
			INNER JOIN REQUIRED_COVERAGE AS RC ON RC.PROPERTY_ID = P.ID 
			INNER JOIN COLLATERAL_CODE AS CC ON CC.ID = C.COLLATERAL_CODE_ID
			INNER JOIN IMPAIRMENT AS I ON I.REQUIRED_COVERAGE_ID = RC.ID
		WHERE	
				LE.STATUS_CD IN ('ACTIVE', 'AUDIT')
			AND
				LE.TEST_IN = 'N'
			AND 
				L.RECORD_TYPE_CD = 'G'
			AND
				L.STATUS_CD != 'U'
			AND 
				L.EXTRACT_UNMATCH_COUNT_NO = 0
			AND
				C.EXTRACT_UNMATCH_COUNT_NO = 0
			AND 
				C.STATUS_CD != 'U'
			AND 
				C.PRIMARY_LOAN_IN = 'Y'
			AND 
				P.RECORD_TYPE_CD = 'G'
			AND 
				RC.SUMMARY_STATUS_CD IN ('F', 'P')
			AND 
				RC.SUMMARY_SUB_STATUS_CD = 'I'
			AND 
				RC.STATUS_CD != 'I'
			AND 
				I.CODE_CD = 'IC'
			AND 
				I.CREATE_DT >= @Previous7Days
			AND
				I.CURRENT_IMPAIRED_IN = 'Y'
	END;
ELSE
	BEGIN
		INSERT INTO @Properties_Inadequate_Coverage
		SELECT DISTINCT
			 L.ID AS [LOAN_ID]
			,P.ID AS [PROPERTY_ID]
			,RC.ID AS [REQUIRED_COVERAGE_ID]
			,LE.ID AS [LENDER_ID]
			,RC.SUMMARY_STATUS_CD
			,RC.SUMMARY_SUB_STATUS_CD
			,I.CREATE_DT AS [IMPAIRMENT_DT]
		FROM @LENDER_LIST AS LL
			INNER JOIN LENDER AS LE ON LE.ID = LL.ID 
			INNER JOIN LOAN AS L ON L.LENDER_ID = LE.ID
			INNER JOIN COLLATERAL AS C ON C.LOAN_ID = L.ID 
			INNER JOIN PROPERTY AS P ON P.ID = C.PROPERTY_ID
			INNER JOIN REQUIRED_COVERAGE AS RC ON RC.PROPERTY_ID = P.ID 
			INNER JOIN COLLATERAL_CODE AS CC ON CC.ID = C.COLLATERAL_CODE_ID
			INNER JOIN IMPAIRMENT AS I ON I.REQUIRED_COVERAGE_ID = RC.ID
		WHERE	
				EXISTS 
				(	
					SELECT LE.ID 
					FROM LENDER AS L
					WHERE 
							L.ID = LE.ID
						AND
							L.STATUS_CD IN ('ACTIVE', 'AUDIT')
						AND
							L.TEST_IN = 'N'
				)
			AND 
				L.RECORD_TYPE_CD = 'G'
			AND
				L.STATUS_CD != 'U'
			AND 
				L.EXTRACT_UNMATCH_COUNT_NO = 0
			AND
				C.EXTRACT_UNMATCH_COUNT_NO = 0
			AND 
				C.STATUS_CD != 'U'
			AND 
				C.PRIMARY_LOAN_IN = 'Y'
			AND 
				P.RECORD_TYPE_CD = 'G'
			AND 
				RC.SUMMARY_STATUS_CD IN ('F', 'P')
			AND 
				RC.SUMMARY_SUB_STATUS_CD = 'I'
			AND 
				RC.STATUS_CD != 'I'
			AND 
				I.CODE_CD = 'IC'
			AND 
				I.CREATE_DT >= @Previous7Days
			AND
				I.CURRENT_IMPAIRED_IN = 'Y'
	END;

	INSERT INTO @Notices_Generated
	SELECT DISTINCT
		 PIC.*
		,N.ID AS [NOTICE_ID]
		,N.CREATE_DT AS [NOTICE_CREATE_DT]
		,N.TYPE_CD AS [NOTICE_TYPE]
		,N.CAPTURED_DATA_XML.value('(/CapturedData/Coverage/@SummaryStatus)[1]', 'varchar(10)') AS [NOTICE_SUMMARY_STATUS_CD]
		,N.CAPTURED_DATA_XML.value('(/CapturedData/Coverage/@SummarySubStatus)[1]', 'varchar(10)') AS [NOTICE_SUMMARY_SUB_STATUS_CD]
	FROM @Properties_Inadequate_Coverage AS PIC
		INNER JOIN NOTICE_REQUIRED_COVERAGE_RELATE AS NRCR ON NRCR.REQUIRED_COVERAGE_ID = PIC.REQUIRED_COVERAGE_ID
		INNER JOIN NOTICE AS N ON N.ID = NRCR.NOTICE_ID


	INSERT INTO @Notices_Matched
	SELECT 
		 LOAN_ID 
		,PROPERTY_ID 
		,REQUIRED_COVERAGE_ID 
		,LENDER_ID 
		,SUMMARY_STATUS_CD 
		,SUMMARY_SUB_STATUS_CD 
		,IMPAIRMENT_DT
		,NOTICE_ID
	FROM @Notices_Generated AS NG
	WHERE 
			NG.NOTICE_CREATE_DT >= NG.IMPAIRMENT_DT
		AND
			NG.NOTICE_SUMMARY_STATUS_CD IN ('F', 'P')
		AND 
			NG.SUMMARY_SUB_STATUS_CD = 'I'
		AND 
			NG.NOTICE_TYPE IN ('I', 'IC')

	INSERT INTO @Notices_Printed
	SELECT DISTINCT
		NM.*
	FROM @Notices_Matched AS NM
		INNER JOIN DOCUMENT_CONTAINER AS DC ON DC.RELATE_ID = NOTICE_ID 
	WHERE 
			DC.RELATE_CLASS_NAME_TX = 'Allied.UniTrac.Notice' 
		AND
			DC.PRINT_STATUS_CD = 'PRINTED'
		AND 
			DC.PURGE_DT IS NULL


	INSERT INTO @Gross_List
	SELECT 
		 PIC.*
	FROM @Properties_Inadequate_Coverage AS PIC
	WHERE NOT EXISTS (SELECT REQUIRED_COVERAGE_ID FROM @Notices_Printed AS NP WHERE NP.REQUIRED_COVERAGE_ID = PIC.REQUIRED_COVERAGE_ID)



	INSERT INTO @Already_Generated
	SELECT 
		QCI.REQUIRED_COVERAGE_ID
	FROM @Gross_List AS GL
		INNER JOIN QUALITY_CONTROL_ITEM AS QCI ON QCI.PROPERTY_ID = GL.PROPERTY_ID AND QCI.REQUIRED_COVERAGE_ID = GL.REQUIRED_COVERAGE_ID
	WHERE 
			QCI.QC_RULE_DEF_CD = 'INADCOV'
		AND
			QCI.PURGE_DT IS NULL
		AND 
			QCI.CREATE_DT >= GL.IMPAIRMENT_DT


	INSERT INTO @t
	SELECT 
		 GL.LOAN_ID 
		,GL.PROPERTY_ID
		,GL.REQUIRED_COVERAGE_ID
	FROM @Gross_List AS GL
	WHERE 
			NOT EXISTS (SELECT REQUIRED_COVERAGE_ID FROM @Already_Generated AS AG WHERE AG.REQUIRED_COVERAGE_ID = GL.REQUIRED_COVERAGE_ID)
	GROUP BY
		GL.LOAN_ID
		,GL.PROPERTY_ID
		,GL.REQUIRED_COVERAGE_ID

	RETURN
END
GO
		
